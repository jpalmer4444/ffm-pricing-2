
2017-03-27T08:19:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:19:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:19:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: index
2017-03-27T08:19:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:33-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:19:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:39-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:19:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:39-05:00 INFO (6): The user is already logged in!
2017-03-27T08:19:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: index
2017-03-27T08:19:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:41-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:19:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:55-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:19:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:55-05:00 INFO (6): The user is already logged in!
2017-03-27T08:19:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: index
2017-03-27T08:19:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:19:57-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:19:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:20:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\IndexController and actionName: settings
2017-03-27T08:20:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:20:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-exception", Exception(Object provided to Escape helper, but flags do not allow recursion): #0 [internal function]: Zend\View\Helper\Escaper\AbstractHelper->__invoke(Object(DateTime))
#1 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(394): call_user_func_array(Object(Zend\View\Helper\EscapeHtml), Array)
#2 /u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46): Zend\View\Renderer\PhpRenderer->__call('escapeHtml', Array)
#3 /u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46): Zend\View\Renderer\PhpRenderer->escapeHtml(Object(DateTime))
#4 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(502): include('/u/local/jasonp...')
#5 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(207): Zend\View\Renderer\PhpRenderer->render(Object(Zend\View\Model\ViewModel))
#6 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(236): Zend\View\View->render(Object(Zend\View\Model\ViewModel))
#7 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(200): Zend\View\View->renderChildren(Object(Zend\View\Model\ViewModel))
#8 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/View/Http/DefaultRenderingStrategy.php(105): Zend\View\View->render(Object(Zend\View\Model\ViewModel))
#9 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\View\Http\DefaultRenderingStrategy->render(Object(Zend\Mvc\MvcEvent))
#10 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(171): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent))
#11 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(367): Zend\EventManager\EventManager->triggerEvent(Object(Zend\Mvc\MvcEvent))
#12 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(348): Zend\Mvc\Application->completeRequest(Object(Zend\Mvc\MvcEvent))
#13 /u/local/jasonpalmer/ffmpricing/public/index.php(40): Zend\Mvc\Application->run()
#14 {main}
2017-03-27T08:20:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-exception", Exception(Object provided to Escape helper, but flags do not allow recursion): #0 [internal function]: Zend\View\Helper\Escaper\AbstractHelper->__invoke(Object(DateTime))
#1 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(394): call_user_func_array(Object(Zend\View\Helper\EscapeHtml), Array)
#2 /u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46): Zend\View\Renderer\PhpRenderer->__call('escapeHtml', Array)
#3 /u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46): Zend\View\Renderer\PhpRenderer->escapeHtml(Object(DateTime))
#4 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(502): include('/u/local/jasonp...')
#5 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(207): Zend\View\Renderer\PhpRenderer->render(Object(Zend\View\Model\ViewModel))
#6 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(236): Zend\View\View->render(Object(Zend\View\Model\ViewModel))
#7 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(200): Zend\View\View->renderChildren(Object(Zend\View\Model\ViewModel))
#8 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/View/Http/DefaultRenderingStrategy.php(105): Zend\View\View->render(Object(Zend\View\Model\ViewModel))
#9 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\View\Http\DefaultRenderingStrategy->render(Object(Zend\Mvc\MvcEvent))
#10 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(171): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent))
#11 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(367): Zend\EventManager\EventManager->triggerEvent(Object(Zend\Mvc\MvcEvent))
#12 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(348): Zend\Mvc\Application->completeRequest(Object(Zend\Mvc\MvcEvent))
#13 /u/local/jasonpalmer/ffmpricing/public/index.php(40): Zend\Mvc\Application->run()
#14 {main}
2017-03-27T08:20:06-05:00 ERR (3): Object provided to Escape helper, but flags do not allow recursion {"reference":"e51757","type":"RENDER","file":"/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Helper/Escaper/AbstractHelper.php","line":72,"trace":"#1/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Helper/Escaper/AbstractHelper.php(72): Zend\\View\\Helper\\Escaper\\AbstractHelper->__invoke\n#2():  call_user_func_array\n#3/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(394): Zend\\View\\Renderer\\PhpRenderer->__call\n#4/u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46): Zend\\View\\Renderer\\PhpRenderer->escapeHtml\n#5/u/local/jasonpalmer/ffmpricing/module/Application/view/application/index/settings.phtml(46):  include\n#6/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Renderer/PhpRenderer.php(502): Zend\\View\\Renderer\\PhpRenderer->render\n#7/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(207): Zend\\View\\View->render\n#8/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(236): Zend\\View\\View->renderChildren\n#9/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php(200): Zend\\View\\View->render\n#10/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/View/Http/DefaultRenderingStrategy.php(105): Zend\\Mvc\\View\\Http\\DefaultRenderingStrategy->render\n#11/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\\EventManager\\EventManager->triggerListeners\n#12/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(171): Zend\\EventManager\\EventManager->triggerEvent\n#13/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(367): Zend\\Mvc\\Application->completeRequest\n#14/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(348): Zend\\Mvc\\Application->run\n\n\n","xdebug":"<tr><th align='left' bgcolor='#f57900' colspan=\"5\"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Zend\\View\\Exception\\InvalidArgumentException: Object provided to Escape helper, but flags do not allow recursion in /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/Helper/Escaper/AbstractHelper.php on line <i>72</i></th></tr>\n<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>\n<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>\n<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0017</td><td bgcolor='#eeeeec' align='right'>252624</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/u/local/jasonpalmer/ffmpricing/public/index.php' bgcolor='#eeeeec'>.../index.php<b>:</b>0</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.1898</td><td bgcolor='#eeeeec' align='right'>8563592</td><td bgcolor='#eeeeec'>Zend\\Mvc\\Application->run(  )</td><td title='/u/local/jasonpalmer/ffmpricing/public/index.php' bgcolor='#eeeeec'>.../index.php<b>:</b>40</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>3</td><td bgcolor='#eeeeec' align='center'>0.5019</td><td bgcolor='#eeeeec' align='right'>18896752</td><td bgcolor='#eeeeec'>Zend\\Mvc\\Application->completeRequest( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php' bgcolor='#eeeeec'>.../Application.php<b>:</b>348</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>4</td><td bgcolor='#eeeeec' align='center'>0.5019</td><td bgcolor='#eeeeec' align='right'>18896752</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerEvent( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php' bgcolor='#eeeeec'>.../Application.php<b>:</b>367</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>5</td><td bgcolor='#eeeeec' align='center'>0.5019</td><td bgcolor='#eeeeec' align='right'>18896752</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerListeners( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>171</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>6</td><td bgcolor='#eeeeec' align='center'>0.5020</td><td bgcolor='#eeeeec' align='right'>18898392</td><td bgcolor='#eeeeec'>Zend\\Mvc\\View\\Http\\DefaultRenderingStrategy->render( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>322</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>7</td><td bgcolor='#eeeeec' align='center'>0.5021</td><td bgcolor='#eeeeec' align='right'>18898928</td><td bgcolor='#eeeeec'>Zend\\View\\View->render( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/View/Http/DefaultRenderingStrategy.php' bgcolor='#eeeeec'>.../DefaultRenderingStrategy.php<b>:</b>105</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>8</td><td bgcolor='#eeeeec' align='center'>0.5025</td><td bgcolor='#eeeeec' align='right'>18900640</td><td bgcolor='#eeeeec'>Zend\\View\\View->renderChildren( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php' bgcolor='#eeeeec'>.../View.php<b>:</b>200</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>9</td><td bgcolor='#eeeeec' align='center'>0.5025</td><td bgcolor='#eeeeec' align='right'>18901728</td><td bgcolor='#eeeeec'>Zend\\View\\View->render( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php' bgcolor='#eeeeec'>.../View.php<b>:</b>236</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>10</td><td bgcolor='#eeeeec' align='center'>0.5029</td><td bgcolor='#eeeeec' align='right'>18903240</td><td bgcolor='#eeeeec'>Zend\\View\\Renderer\\PhpRenderer->render( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-view/src/View.php' bgcolor='#eeeeec'>.../View.php<b>:</b>207</td></tr>\n","uri":"https://ffmpricing.localhost/application/settings","request":"GET https://ffmpricing.localhost/application/settings HTTP/1.1\r\nCookie: PHPSESSID=f56003633b56cbdd696359c08fcaf593\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/login?redirectUrl=/customer/index/183\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\n\r\n","ip":"::1","session_id":"f56003633b56cbdd696359c08fcaf593"}
2017-03-27T08:20:17-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\UserController and actionName: index
2017-03-27T08:20:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:20:34-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\UserController and actionName: usersTable
2017-03-27T08:20:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:20:34-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `id` FROM `users`  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:20:34-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users`
2017-03-27T08:20:34-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users`
2017-03-27T08:20:34-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users`
2017-03-27T08:20:34-05:00 INFO (6): SELECT COUNT(`id`) FROM `users`
2017-03-27T08:20:40-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: logout
2017-03-27T08:20:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:20:40-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:20:40-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:20:40-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:20:48-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:20:48-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:20:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-27T08:20:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-27T08:21:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:21:13-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-27T08:21:13-05:00 INFO (6): Retrieving salespeople.
2017-03-27T08:21:13-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-27T08:21:13-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-27T08:21:13-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-27T08:21:13-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-27T08:21:13-05:00 INFO (6): 
MissingFromDB: 250
2017-03-27T08:21:13-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-27T08:21:13-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:21:13-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T08:21:13-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T08:21:13-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T08:21:13-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T08:21:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:21:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:21:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:24:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:24:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:25:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:26:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:26:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:27:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:27:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:28:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:28:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:29:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:32:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:32:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:33:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:36:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:36:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:37:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-27T08:37:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:37:48-05:00 INFO (6): Syncing DB.
2017-03-27T08:37:48-05:00 INFO (6): Querying Customers.
2017-03-27T08:37:48-05:00 INFO (6): Querying Customers.
2017-03-27T08:37:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=180
2017-03-27T08:37:49-05:00 INFO (6): inDB: 156 inWS: 157
2017-03-27T08:37:49-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:37:49-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:37:49-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:37:49-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:37:49-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:37:49-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:39:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:39:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:40:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:41:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:41:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:42:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:44:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:44:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:45:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:47:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:47:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:48:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:48:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:48:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:49:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-27T08:49:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:49:58-05:00 INFO (6): Syncing DB.
2017-03-27T08:49:58-05:00 INFO (6): Querying Customers.
2017-03-27T08:49:58-05:00 INFO (6): Querying Customers.
2017-03-27T08:49:58-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=180
2017-03-27T08:49:59-05:00 INFO (6): inDB: 156 inWS: 157
2017-03-27T08:49:59-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:49:59-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:49:59-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:49:59-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:49:59-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:49:59-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:50:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T08:50:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:50:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T08:50:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:50:19-05:00 INFO (6): Syncing DB.
2017-03-27T08:50:19-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=47
2017-03-27T08:50:20-05:00 INFO (6): No products returned from the Web Service!
2017-03-27T08:50:20-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T08:50:20-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T08:50:20-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 47 AND `user_customer`.`user_id` = 9)
2017-03-27T08:50:20-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 47 AND `added_product`.`active` = 1 )
2017-03-27T08:50:20-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 47 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 47 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T08:50:20-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 47 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 47 AND `added_product`.`active` = 1 )
2017-03-27T08:50:20-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 47 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 47 AND `added_product`.`active` = 1 )
2017-03-27T08:53:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:53:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:53:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:54:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T08:54:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T08:55:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-27T08:55:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:55:44-05:00 INFO (6): Syncing DB.
2017-03-27T08:55:44-05:00 INFO (6): Querying Customers.
2017-03-27T08:55:44-05:00 INFO (6): Querying Customers.
2017-03-27T08:55:44-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=180
2017-03-27T08:55:45-05:00 INFO (6): inDB: 156 inWS: 157
2017-03-27T08:55:45-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:55:45-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T08:55:45-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:55:45-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:55:45-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:55:45-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T08:59:42-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T08:59:43-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:43-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:43-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:43-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:43-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:43-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:43-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:43-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:43-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:44-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:44-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:44-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:44-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:44-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:44-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:44-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:44-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:45-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:45-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:45-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:45-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:45-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:45-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:45-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:45-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:46-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:46-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:46-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:46-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:46-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:46-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:46-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:46-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:47-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:47-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:47-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:47-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:47-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:47-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:47-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:47-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:47-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:47-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:48-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:48-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:48-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:48-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:48-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:48-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:48-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:48-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:48-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:48-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:49-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:49-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:49-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:49-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:49-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:49-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:49-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:49-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:50-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:50-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:50-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:50-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:50-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:50-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:50-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:50-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:51-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:51-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:51-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:51-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:51-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:51-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:51-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:51-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T08:59:52-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T08:59:52-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T08:59:52-05:00 INFO (6): The user is not logged in!
2017-03-27T08:59:52-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T09:03:55-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:03:55-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:04:01-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:04:01-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:04:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-27T09:04:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-27T09:04:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:04:28-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-27T09:04:28-05:00 INFO (6): Retrieving salespeople.
2017-03-27T09:04:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-27T09:04:29-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-27T09:04:29-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-27T09:04:29-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-27T09:04:29-05:00 INFO (6): 
MissingFromDB: 250
2017-03-27T09:04:29-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-27T09:04:29-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:04:29-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:04:29-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:04:29-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:04:29-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:04:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\IndexController and actionName: index
2017-03-27T09:04:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:04:54-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:04:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:04:54-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: logout
2017-03-27T09:04:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:04:55-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T09:04:55-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:04:55-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:28:14-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:28:14-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:28:23-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:28:23-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:28:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-27T09:28:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:28:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-27T09:28:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:28:52-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-27T09:28:52-05:00 INFO (6): Retrieving salespeople.
2017-03-27T09:28:52-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-27T09:28:52-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-27T09:28:52-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-27T09:28:52-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-27T09:28:52-05:00 INFO (6): 
MissingFromDB: 250
2017-03-27T09:28:52-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-27T09:28:52-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:28:52-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:28:52-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:28:52-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:28:52-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:28:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\IndexController and actionName: index
2017-03-27T09:28:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:28:59-05:00 ERR (3): Call to a member function redirect() on null {"type":"FATAL","reference":"4d9161","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/IndexController.php","line":41,"uri":"https://ffmpricing.localhost/","request":"GET https://ffmpricing.localhost/ HTTP/1.1\r\nCookie: PHPSESSID=1476a05f0a06cacf1948162a32ef23c2\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\n\r\n","ip":"::1","session_id":"1476a05f0a06cacf1948162a32ef23c2","trace":"\n\n"}
2017-03-27T09:28:59-05:00 WARN (4): Cannot modify header information - headers already sent by (output started at /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/IndexController.php:41) {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/vendor/davidhavl/dherrorlogging/src/DhErrorLogging/Sender/ResponseSender.php","line":128,"reference":"f281e9","uri":"https://ffmpricing.localhost/","request":"GET https://ffmpricing.localhost/ HTTP/1.1\r\nCookie: PHPSESSID=1476a05f0a06cacf1948162a32ef23c2\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/xhtml+xml, text/html, application/xml;q=0.9, */*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\n\r\n","ip":"::1","session_id":"1476a05f0a06cacf1948162a32ef23c2","trace":"\n\n"}
2017-03-27T09:29:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\IndexController and actionName: index
2017-03-27T09:29:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:29:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-27T09:29:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:29:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-27T09:29:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:29:29-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-27T09:29:29-05:00 INFO (6): Retrieving salespeople.
2017-03-27T09:29:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-27T09:29:30-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-27T09:29:30-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-27T09:29:30-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-27T09:29:30-05:00 INFO (6): 
MissingFromDB: 250
2017-03-27T09:29:30-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-27T09:29:30-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:29:30-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:29:30-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:29:30-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:29:30-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-27T09:29:34-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: logout
2017-03-27T09:29:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:29:34-05:00 INFO (6): SessionId and Username passed were empty! RuntimeError! Please Fix
2017-03-27T09:29:35-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:29:35-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:29:48-05:00 INFO (6): (User\Module.php): Checking controllerName: User\Controller\AuthController and actionName: login
2017-03-27T09:29:48-05:00 ERR (3): (User\Module.php): UserSession not found by session id
2017-03-27T09:29:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T09:29:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:30:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-27T09:30:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:30:18-05:00 INFO (6): Syncing DB.
2017-03-27T09:30:18-05:00 INFO (6): Querying Customers.
2017-03-27T09:30:18-05:00 INFO (6): Querying Customers.
2017-03-27T09:30:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=180
2017-03-27T09:30:19-05:00 INFO (6): inDB: 156 inWS: 157
2017-03-27T09:30:19-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:30:19-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:30:19-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:19-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:19-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:19-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\IndexController and actionName: index
2017-03-27T09:30:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:30:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-27T09:30:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:30:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-27T09:30:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:30:39-05:00 INFO (6): Syncing DB.
2017-03-27T09:30:39-05:00 INFO (6): Querying Customers.
2017-03-27T09:30:39-05:00 INFO (6): Querying Customers.
2017-03-27T09:30:39-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=180
2017-03-27T09:30:40-05:00 INFO (6): inDB: 156 inWS: 157
2017-03-27T09:30:40-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:30:40-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`,`customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 9  ORDER BY `id` ASC LIMIT 0, 25
2017-03-27T09:30:40-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:40-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:40-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:40-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 9
2017-03-27T09:30:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:30:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:31:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:31:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:02-05:00 INFO (6): Syncing DB.
2017-03-27T09:31:02-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:31:03-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:31:03-05:00 INFO (6): Customer: 117
2017-03-27T09:31:03-05:00 INFO (6): Preferences by user: 8
2017-03-27T09:31:03-05:00 INFO (6): Products: 49
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:31:03-05:00 INFO (6): Creating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 595
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=595,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 603
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=603,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 611
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=611,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 892
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=892,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 906
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=906,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 940
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=940,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 1216
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=1216,user=jmeade]
2017-03-27T09:31:03-05:00 INFO (6): find(type=json) not found = 1389
2017-03-27T09:31:03-05:00 INFO (6): Deleting Preference[product=1389,user=jmeade]
2017-03-27T09:31:04-05:00 INFO (6): Created 0 products
2017-03-27T09:31:04-05:00 INFO (6): Created 49 preferences
2017-03-27T09:31:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:31:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:31:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:31:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:31:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: product
2017-03-27T09:31:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:35-05:00 INFO (6): Creating AddedProduct[ sku = , customer.company = Fulton Fish Market, customer.name = Jody Meadeversion = , productname = AAA Fish, description = My Fish, sku = , uom = lb, status = 1, comment = , active = 1, overrideprice = 7.89, salesperson.username = jmeade]
2017-03-27T09:31:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:31:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:36-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:31:36-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:31:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:31:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:31:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:31:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: product
2017-03-27T09:31:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:31:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:31:57-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:31:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:31:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:31:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:31:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:31:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:31:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:32:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:32:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:32:11-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":893,"reference":"0f370c","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=6cc5cce40c9ae40fb5aef5d8c0d63102\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/117\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 133\r\nConnection: keep-alive\r\n\r\nid=&product_id=Blowfish+-+Wild%2C+USA%2C+Cleaned+Tails+(7lb+Bag)&overrideprice=6.77&sales_attr_id=180&customer_id=117&scenario=create","ip":"::1","session_id":"6cc5cce40c9ae40fb5aef5d8c0d63102","trace":"\n\n"}
2017-03-27T09:32:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:32:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:32:46-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":893,"reference":"8f25d7","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=6cc5cce40c9ae40fb5aef5d8c0d63102\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/117\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 143\r\nConnection: keep-alive\r\n\r\nid=&product_id=Bass+-+Black+Sea%2C+Large%2C+Wild%2C+USA%2C+Whole+(3lb+avg)&overrideprice=6.77&sales_attr_id=180&customer_id=117&scenario=create","ip":"::1","session_id":"6cc5cce40c9ae40fb5aef5d8c0d63102","trace":"\n\n"}
2017-03-27T09:36:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:36:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:37:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:37:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:15-05:00 INFO (6): Syncing DB.
2017-03-27T09:37:15-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:37:17-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:37:17-05:00 INFO (6): Customer: 117
2017-03-27T09:37:17-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:37:17-05:00 INFO (6): Products: 49
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:37:17-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:37:17-05:00 INFO (6): Created 0 products
2017-03-27T09:37:17-05:00 INFO (6): Created 0 preferences
2017-03-27T09:37:17-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:37:17-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:37:17-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:37:17-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:17-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:37:17-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:17-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:37:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:37:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:28-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:37:28-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:37:28-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:37:28-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:37:28-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:28-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:37:28-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:28-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:37:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:37:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:37:36-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:37:36-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:37:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:37:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:37:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:37:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:37:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:43:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:43:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:44:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:44:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:44:28-05:00 INFO (6): Syncing DB.
2017-03-27T09:44:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:44:30-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:44:30-05:00 INFO (6): Customer: 117
2017-03-27T09:44:30-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:44:30-05:00 INFO (6): Products: 49
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:44:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:44:30-05:00 INFO (6): Created 0 products
2017-03-27T09:44:30-05:00 INFO (6): Created 0 preferences
2017-03-27T09:44:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:44:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:44:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:44:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:44:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:44:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:44:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:46:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:46:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:47:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:47:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:47:28-05:00 INFO (6): Syncing DB.
2017-03-27T09:47:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:47:29-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:47:29-05:00 INFO (6): Customer: 117
2017-03-27T09:47:29-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:47:29-05:00 INFO (6): Products: 49
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:47:29-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:47:29-05:00 INFO (6): Created 0 products
2017-03-27T09:47:29-05:00 INFO (6): Created 0 preferences
2017-03-27T09:47:29-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:47:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:47:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:47:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:47:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:47:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:47:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:47:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:47:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:48:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:49:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:49:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:49:09-05:00 INFO (6): Syncing DB.
2017-03-27T09:49:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:49:10-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:49:10-05:00 INFO (6): Customer: 117
2017-03-27T09:49:10-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:49:10-05:00 INFO (6): Products: 49
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:49:10-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:49:10-05:00 INFO (6): Created 0 products
2017-03-27T09:49:10-05:00 INFO (6): Created 0 preferences
2017-03-27T09:49:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:49:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:49:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:49:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:49:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:49:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:49:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:49:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:49:23-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:49:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:49:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:49:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:49:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:49:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:49:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:49:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:49:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:49:33-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:49:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:49:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:49:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:49:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:49:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:49:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:51:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:51:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:52:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:52:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:24-05:00 INFO (6): Syncing DB.
2017-03-27T09:52:24-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:52:26-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:52:26-05:00 INFO (6): Customer: 117
2017-03-27T09:52:26-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:52:26-05:00 INFO (6): Products: 49
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:52:26-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:52:26-05:00 INFO (6): Created 0 products
2017-03-27T09:52:26-05:00 INFO (6): Created 0 preferences
2017-03-27T09:52:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:52:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:52:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:52:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:52:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:52:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:52:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:34-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:52:34-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:52:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:52:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:52:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:52:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:52:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:52:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:52:48-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:52:48-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:52:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:52:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:52:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:52:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:52:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:54:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T09:54:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T09:55:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:55:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:55:58-05:00 INFO (6): Syncing DB.
2017-03-27T09:55:58-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T09:55:59-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T09:55:59-05:00 INFO (6): Customer: 117
2017-03-27T09:55:59-05:00 INFO (6): Preferences by user: 49
2017-03-27T09:55:59-05:00 INFO (6): Products: 49
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T09:55:59-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T09:55:59-05:00 INFO (6): Created 0 products
2017-03-27T09:55:59-05:00 INFO (6): Created 0 preferences
2017-03-27T09:55:59-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:55:59-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:55:59-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:55:59-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:55:59-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:55:59-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:55:59-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:56:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:56:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:56:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:56:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:56:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:56:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:56:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:56:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:56:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T09:56:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:56:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T09:56:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T09:56:23-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T09:56:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T09:56:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T09:56:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T09:56:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T09:56:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T09:56:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:06:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:06:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:07:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:07:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:19-05:00 INFO (6): Syncing DB.
2017-03-27T10:07:19-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:07:20-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:07:20-05:00 INFO (6): Customer: 117
2017-03-27T10:07:20-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:07:20-05:00 INFO (6): Products: 49
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:07:20-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:07:20-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:07:21-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:07:21-05:00 INFO (6): Created 0 products
2017-03-27T10:07:21-05:00 INFO (6): Created 0 preferences
2017-03-27T10:07:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:07:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:07:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:07:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:07:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:07:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:07:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:07:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:07:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:07:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:07:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:07:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:07:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:07:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:07:41-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:07:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:07:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:07:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:07:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:07:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:07:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:11:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:11:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:12:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:12:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:12:33-05:00 INFO (6): Syncing DB.
2017-03-27T10:12:33-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:12:34-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:12:34-05:00 INFO (6): Customer: 117
2017-03-27T10:12:34-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:12:35-05:00 INFO (6): Products: 49
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:12:35-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:12:35-05:00 INFO (6): Created 0 products
2017-03-27T10:12:35-05:00 INFO (6): Created 0 preferences
2017-03-27T10:12:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:12:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:12:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:12:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:12:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:12:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:12:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:13:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:13:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:13:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:13:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:13:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:13:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:13:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:13:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:13:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:13:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:13:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:13:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:13:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:13:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:13:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:13:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:13:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:13:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:13:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:14:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:14:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:15:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:15:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:15:18-05:00 INFO (6): Syncing DB.
2017-03-27T10:15:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:15:20-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:15:20-05:00 INFO (6): Customer: 117
2017-03-27T10:15:20-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:15:20-05:00 INFO (6): Products: 49
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:15:20-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:15:20-05:00 INFO (6): Created 0 products
2017-03-27T10:15:20-05:00 INFO (6): Created 0 preferences
2017-03-27T10:15:20-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:15:20-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:15:20-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:15:20-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:15:20-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:15:20-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:15:20-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:15:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:15:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:15:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:15:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:15:30-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:15:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:15:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:15:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:15:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:15:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:15:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:15:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:22:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:22:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:22:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:22:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:22:47-05:00 INFO (6): Syncing DB.
2017-03-27T10:22:47-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:22:49-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:22:49-05:00 INFO (6): Customer: 117
2017-03-27T10:22:49-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:22:49-05:00 INFO (6): Products: 49
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:22:49-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:22:49-05:00 INFO (6): Created 0 products
2017-03-27T10:22:49-05:00 INFO (6): Created 0 preferences
2017-03-27T10:22:49-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:22:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:22:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:22:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:22:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:22:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:22:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:23:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:23:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:23:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:23:05-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:23:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:23:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:23:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:23:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:23:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:23:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:23:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:23:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:23:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:23:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:23:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:23:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:23:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:23:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:23:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:24:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:24:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:24:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:24:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:24:16-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:24:16-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:24:16-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:24:16-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:24:16-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:24:16-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:24:16-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:24:16-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:24:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:24:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:25:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:25:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:29-05:00 INFO (6): Syncing DB.
2017-03-27T10:25:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:25:30-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:25:31-05:00 INFO (6): Customer: 117
2017-03-27T10:25:31-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:25:31-05:00 INFO (6): Products: 49
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:25:31-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:25:31-05:00 INFO (6): Created 0 products
2017-03-27T10:25:31-05:00 INFO (6): Created 0 preferences
2017-03-27T10:25:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:25:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:25:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:25:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:25:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:25:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:25:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:42-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:25:42-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:25:42-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:25:42-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:25:42-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:42-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:25:42-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:42-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:25:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:25:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:25:50-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:25:50-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:25:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:25:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:25:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:25:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:25:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:27:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T10:27:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T10:28:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:28:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:27-05:00 INFO (6): Syncing DB.
2017-03-27T10:28:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T10:28:28-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T10:28:28-05:00 INFO (6): Customer: 117
2017-03-27T10:28:28-05:00 INFO (6): Preferences by user: 49
2017-03-27T10:28:29-05:00 INFO (6): Products: 49
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T10:28:29-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T10:28:29-05:00 INFO (6): Created 0 products
2017-03-27T10:28:29-05:00 INFO (6): Created 0 preferences
2017-03-27T10:28:29-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:28:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:28:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:28:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:28:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:28:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:28:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:42-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:28:42-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:28:42-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:28:42-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:28:42-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:42-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:28:42-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:42-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T10:28:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T10:28:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T10:28:56-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T10:28:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T10:28:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T10:28:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T10:28:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T10:28:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T10:28:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:25:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:25:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:25:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:25:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:25:35-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:25:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:25:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:25:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:25:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:25:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:25:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:25:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:28:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T11:28:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:52-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:29:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:29:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:29:55-05:00 INFO (6): Syncing DB.
2017-03-27T11:29:55-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T11:29:57-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T11:29:57-05:00 INFO (6): Customer: 117
2017-03-27T11:29:57-05:00 INFO (6): Preferences by user: 49
2017-03-27T11:29:57-05:00 INFO (6): Products: 49
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T11:29:57-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T11:29:57-05:00 INFO (6): Created 0 products
2017-03-27T11:29:57-05:00 INFO (6): Created 0 preferences
2017-03-27T11:29:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:29:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:29:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:29:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:29:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:29:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:29:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:35:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T11:35:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:36:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:36:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:36:44-05:00 INFO (6): Syncing DB.
2017-03-27T11:36:44-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T11:36:46-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T11:36:46-05:00 INFO (6): Customer: 117
2017-03-27T11:36:46-05:00 INFO (6): Preferences by user: 49
2017-03-27T11:36:46-05:00 INFO (6): Products: 49
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T11:36:46-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T11:36:46-05:00 INFO (6): Created 0 products
2017-03-27T11:36:46-05:00 INFO (6): Created 0 preferences
2017-03-27T11:36:46-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:36:46-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:36:46-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:36:46-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:36:46-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:36:46-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:36:46-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:37:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:37:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:37:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:37:07-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:37:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:37:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:37:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:37:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:37:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:37:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:37:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:37:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:37:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:37:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:37:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:37:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:37:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:37:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:37:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T11:37:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:38:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:39:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:39:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:39:06-05:00 INFO (6): Syncing DB.
2017-03-27T11:39:06-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T11:39:08-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T11:39:08-05:00 INFO (6): Customer: 117
2017-03-27T11:39:08-05:00 INFO (6): Preferences by user: 49
2017-03-27T11:39:08-05:00 INFO (6): Products: 49
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T11:39:08-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T11:39:08-05:00 INFO (6): Created 0 products
2017-03-27T11:39:08-05:00 INFO (6): Created 0 preferences
2017-03-27T11:39:08-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:39:08-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:39:08-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:39:08-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:08-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:39:08-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:08-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:39:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:39:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:39:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:39:26-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:39:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:39:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:39:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:39:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:39:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:39:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:39:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:39:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:39:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:39:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:39:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:39:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:39:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:39:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:39:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:44:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:44:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:44:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:44:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:44:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:44:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:44:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:44:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:44:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:44:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:44:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:44:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:50:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T11:50:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T11:51:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:51:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:19-05:00 INFO (6): Syncing DB.
2017-03-27T11:51:19-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T11:51:20-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T11:51:20-05:00 INFO (6): Customer: 117
2017-03-27T11:51:20-05:00 INFO (6): Preferences by user: 49
2017-03-27T11:51:20-05:00 INFO (6): Products: 49
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T11:51:20-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T11:51:20-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T11:51:21-05:00 INFO (6): Created 0 products
2017-03-27T11:51:21-05:00 INFO (6): Created 0 preferences
2017-03-27T11:51:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:51:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:51:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:51:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:51:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:51:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:51:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:40-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:51:40-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:51:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:51:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:51:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:51:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T11:51:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T11:51:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T11:51:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T11:51:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T11:51:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T11:51:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T11:51:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T11:51:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T11:51:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:40:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T12:40:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:42:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:42:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:03-05:00 INFO (6): Syncing DB.
2017-03-27T12:42:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T12:42:04-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T12:42:04-05:00 INFO (6): Customer: 117
2017-03-27T12:42:04-05:00 INFO (6): Preferences by user: 49
2017-03-27T12:42:05-05:00 INFO (6): Products: 49
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T12:42:05-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T12:42:05-05:00 INFO (6): Created 0 products
2017-03-27T12:42:05-05:00 INFO (6): Created 0 preferences
2017-03-27T12:42:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:42:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:42:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:42:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:42:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:42:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:42:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:21-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:42:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:42:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:42:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:42:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:42:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:42:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:42:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:42:33-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:42:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:42:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:42:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:42:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:42:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:42:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:46:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T12:46:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:47:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:47:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:32-05:00 INFO (6): Syncing DB.
2017-03-27T12:47:32-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T12:47:34-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T12:47:34-05:00 INFO (6): Customer: 117
2017-03-27T12:47:34-05:00 INFO (6): Preferences by user: 49
2017-03-27T12:47:34-05:00 INFO (6): Products: 49
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T12:47:34-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T12:47:34-05:00 INFO (6): Created 0 products
2017-03-27T12:47:34-05:00 INFO (6): Created 0 preferences
2017-03-27T12:47:34-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:47:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:47:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:47:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:47:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:47:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:47:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:45-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:47:45-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:47:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:47:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:47:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:47:45-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:45-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:47:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:47:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:47:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:47:55-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:47:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:47:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:47:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:47:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:47:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:49:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T12:49:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:50:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:50:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:12-05:00 INFO (6): Syncing DB.
2017-03-27T12:50:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T12:50:13-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T12:50:13-05:00 INFO (6): Customer: 117
2017-03-27T12:50:14-05:00 INFO (6): Preferences by user: 49
2017-03-27T12:50:14-05:00 INFO (6): Products: 49
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T12:50:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T12:50:14-05:00 INFO (6): Created 0 products
2017-03-27T12:50:14-05:00 INFO (6): Created 0 preferences
2017-03-27T12:50:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:50:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:50:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:50:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:50:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:50:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:50:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:22-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:50:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:50:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:50:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:50:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:50:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:50:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:50:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:50:35-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:50:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:50:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:50:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:50:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:50:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:50:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:53:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T12:53:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:54:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:54:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:54:40-05:00 INFO (6): Syncing DB.
2017-03-27T12:54:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T12:54:41-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T12:54:41-05:00 INFO (6): Customer: 117
2017-03-27T12:54:41-05:00 INFO (6): Preferences by user: 49
2017-03-27T12:54:41-05:00 INFO (6): Products: 49
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T12:54:41-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T12:54:41-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T12:54:42-05:00 INFO (6): Created 0 products
2017-03-27T12:54:42-05:00 INFO (6): Created 0 preferences
2017-03-27T12:54:42-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:54:42-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:54:42-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:54:42-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:54:42-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:54:42-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:54:42-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:54:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:54:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:54:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:54:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:54:50-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:54:50-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:54:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:54:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:54:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:54:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:54:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:54:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:55:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T12:55:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:55:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:55:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:55:05-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T12:55:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:55:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:55:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:55:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:55:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:55:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:55:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:58:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T12:58:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:59:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T12:59:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T12:59:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T12:59:50-05:00 INFO (6): Syncing DB.
2017-03-27T12:59:50-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T12:59:52-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T12:59:52-05:00 INFO (6): Customer: 117
2017-03-27T12:59:52-05:00 INFO (6): Preferences by user: 49
2017-03-27T12:59:52-05:00 INFO (6): Products: 49
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T12:59:52-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T12:59:52-05:00 INFO (6): Created 0 products
2017-03-27T12:59:52-05:00 INFO (6): Created 0 preferences
2017-03-27T12:59:52-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T12:59:52-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T12:59:52-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T12:59:52-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:59:52-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T12:59:52-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T12:59:52-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:00:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:00:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:00:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:00:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:00:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:00:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:00:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:00:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:00:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:00:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:00:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:00:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:01:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:01:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:01:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:01:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:01:22-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:01:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:01:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:01:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:01:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:01:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:01:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:01:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:01:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T13:01:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:03:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:03:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:03:59-05:00 INFO (6): Syncing DB.
2017-03-27T13:03:59-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T13:04:00-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T13:04:00-05:00 INFO (6): Customer: 117
2017-03-27T13:04:01-05:00 INFO (6): Preferences by user: 49
2017-03-27T13:04:01-05:00 INFO (6): Products: 49
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T13:04:01-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T13:04:01-05:00 INFO (6): Created 0 products
2017-03-27T13:04:01-05:00 INFO (6): Created 0 preferences
2017-03-27T13:04:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:04:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:04:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:04:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:04:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:04:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:04:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:05:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:05:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:05:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:05:02-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:05:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:05:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:05:03-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:05:03-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:03-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:05:03-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:03-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:05:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:05:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:05:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:05:14-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:05:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:05:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:05:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:05:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:05:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:05:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:06:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:06:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:06:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:06:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:06:29-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:06:29-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:06:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:06:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:06:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:06:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:06:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:06:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:08:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T13:08:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:08:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:08:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:08:45-05:00 INFO (6): Syncing DB.
2017-03-27T13:08:45-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T13:08:46-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T13:08:46-05:00 INFO (6): Customer: 117
2017-03-27T13:08:47-05:00 INFO (6): Preferences by user: 49
2017-03-27T13:08:47-05:00 INFO (6): Products: 49
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T13:08:47-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T13:08:47-05:00 INFO (6): Created 0 products
2017-03-27T13:08:47-05:00 INFO (6): Created 0 preferences
2017-03-27T13:08:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:08:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:08:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:08:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:08:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:08:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:08:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:09:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:09:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:09:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:09:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:09:03-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:09:03-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:09:03-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:09:03-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:09:03-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:09:03-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:09:03-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:09:03-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T13:12:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:12:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:33-05:00 INFO (6): Syncing DB.
2017-03-27T13:12:33-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T13:12:34-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T13:12:34-05:00 INFO (6): Customer: 117
2017-03-27T13:12:34-05:00 INFO (6): Preferences by user: 49
2017-03-27T13:12:35-05:00 INFO (6): Products: 49
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T13:12:35-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T13:12:35-05:00 INFO (6): Created 0 products
2017-03-27T13:12:35-05:00 INFO (6): Created 0 preferences
2017-03-27T13:12:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:12:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:12:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:12:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:12:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:12:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:12:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:47-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:12:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:12:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:12:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:12:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:12:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:12:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:12:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:12:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:12:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:12:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:12:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:12:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:12:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:12:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T13:15:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:15:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:27-05:00 INFO (6): Syncing DB.
2017-03-27T13:15:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T13:15:28-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T13:15:28-05:00 INFO (6): Customer: 117
2017-03-27T13:15:28-05:00 INFO (6): Preferences by user: 49
2017-03-27T13:15:28-05:00 INFO (6): Products: 49
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T13:15:28-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T13:15:28-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T13:15:29-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T13:15:29-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T13:15:29-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T13:15:29-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T13:15:29-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T13:15:29-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T13:15:29-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T13:15:29-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T13:15:29-05:00 INFO (6): Created 0 products
2017-03-27T13:15:29-05:00 INFO (6): Created 0 preferences
2017-03-27T13:15:29-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:15:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:15:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:15:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:15:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:15:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:15:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:49-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:15:49-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:15:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:15:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:15:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:15:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T13:15:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T13:15:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T13:15:57-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T13:15:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T13:15:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T13:15:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T13:15:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T13:15:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T13:15:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:14:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:14:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:23-05:00 INFO (6): Syncing DB.
2017-03-27T14:14:23-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:14:25-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:14:25-05:00 INFO (6): Customer: 117
2017-03-27T14:14:25-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:14:25-05:00 INFO (6): Products: 49
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:14:25-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:14:25-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:14:26-05:00 INFO (6): Created 0 products
2017-03-27T14:14:26-05:00 INFO (6): Created 0 preferences
2017-03-27T14:14:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:14:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:14:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:14:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:14:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:14:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:14:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:41-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:14:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:14:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:14:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:14:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:14:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:14:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:14:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:14:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:14:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:14:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:14:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:14:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:14:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:14:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:15:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:15:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:15:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:15:03-05:00 INFO (6): Syncing DB.
2017-03-27T14:15:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:15:05-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:15:05-05:00 INFO (6): Customer: 117
2017-03-27T14:15:05-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:15:05-05:00 INFO (6): Products: 49
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:15:05-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:15:05-05:00 INFO (6): Created 0 products
2017-03-27T14:15:05-05:00 INFO (6): Created 0 preferences
2017-03-27T14:15:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:15:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:15:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:15:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:15:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:15:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:15:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:15:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:15:11-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:15:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:15:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:15:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:15:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:15:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:15:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:17:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:17:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:17:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:17:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:17:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:17:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:17:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:18:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:18:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:18:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:18:08-05:00 INFO (6): Syncing DB.
2017-03-27T14:18:08-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:18:09-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:18:09-05:00 INFO (6): Customer: 117
2017-03-27T14:18:09-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:18:10-05:00 INFO (6): Products: 49
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:18:10-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:18:10-05:00 INFO (6): Created 0 products
2017-03-27T14:18:10-05:00 INFO (6): Created 0 preferences
2017-03-27T14:18:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:18:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:18:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:18:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:18:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:18:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:18:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:18:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:18:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:18:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:18:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:18:19-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:18:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:18:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:18:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:18:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:18:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:18:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:18:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:20:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:20:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:20:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:20:12-05:00 INFO (6): Syncing DB.
2017-03-27T14:20:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:20:13-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:20:14-05:00 INFO (6): Customer: 117
2017-03-27T14:20:14-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:20:14-05:00 INFO (6): Products: 49
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:20:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:20:14-05:00 INFO (6): Created 0 products
2017-03-27T14:20:14-05:00 INFO (6): Created 0 preferences
2017-03-27T14:20:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:20:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:20:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:20:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:20:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:20:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:20:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:20:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:20:21-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:20:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:20:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:20:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:20:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:20:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:20:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:24:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:24:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:24:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:24:39-05:00 INFO (6): Syncing DB.
2017-03-27T14:24:39-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:24:40-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:24:40-05:00 INFO (6): Customer: 117
2017-03-27T14:24:40-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:24:40-05:00 INFO (6): Products: 49
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:24:40-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:24:40-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:24:41-05:00 INFO (6): Created 0 products
2017-03-27T14:24:41-05:00 INFO (6): Created 0 preferences
2017-03-27T14:24:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:24:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:24:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:24:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:24:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:24:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:24:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:24:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:24:48-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:24:48-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:24:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:24:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:24:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:24:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:24:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:25:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:25:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:06-05:00 INFO (6): Syncing DB.
2017-03-27T14:25:06-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:25:07-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:25:07-05:00 INFO (6): Customer: 117
2017-03-27T14:25:07-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:25:07-05:00 INFO (6): Products: 49
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:25:07-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:25:07-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:25:08-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:25:08-05:00 INFO (6): Created 0 products
2017-03-27T14:25:08-05:00 INFO (6): Created 0 preferences
2017-03-27T14:25:08-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:25:08-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:25:08-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:25:08-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:08-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:25:08-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:08-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:25:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:25:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:25:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:23-05:00 INFO (6): Syncing DB.
2017-03-27T14:25:23-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:25:25-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:25:25-05:00 INFO (6): Customer: 117
2017-03-27T14:25:25-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:25:25-05:00 INFO (6): Products: 49
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:25:25-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:25:25-05:00 INFO (6): Created 0 products
2017-03-27T14:25:25-05:00 INFO (6): Created 0 preferences
2017-03-27T14:25:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:25:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:25:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:25:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:25:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:25:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:25:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:25:41-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:25:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:25:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:25:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:25:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:25:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:25:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:27:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:27:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:27:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:27:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:27:51-05:00 INFO (6): Syncing DB.
2017-03-27T14:27:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:27:52-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:27:52-05:00 INFO (6): Customer: 117
2017-03-27T14:27:52-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:27:52-05:00 INFO (6): Products: 49
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:27:52-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:27:52-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:27:53-05:00 INFO (6): Created 0 products
2017-03-27T14:27:53-05:00 INFO (6): Created 0 preferences
2017-03-27T14:27:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:27:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:27:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:27:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:27:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:27:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:27:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:28:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:28:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:28:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:28:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:28:00-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:28:00-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:28:00-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:28:00-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:28:00-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:28:00-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:28:00-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:28:00-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:33:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:33:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:33:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:33:36-05:00 INFO (6): Syncing DB.
2017-03-27T14:33:36-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:33:37-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:33:37-05:00 INFO (6): Customer: 117
2017-03-27T14:33:37-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:33:37-05:00 INFO (6): Products: 49
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:33:37-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:33:37-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:33:38-05:00 INFO (6): Created 0 products
2017-03-27T14:33:38-05:00 INFO (6): Created 0 preferences
2017-03-27T14:33:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:33:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:33:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:33:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:33:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:33:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:33:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:33:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:33:44-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:33:44-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:33:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:33:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:33:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:33:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:33:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:34:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:34:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:34:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:34:12-05:00 INFO (6): Syncing DB.
2017-03-27T14:34:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:34:13-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:34:13-05:00 INFO (6): Customer: 117
2017-03-27T14:34:14-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:34:14-05:00 INFO (6): Products: 49
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:34:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:34:14-05:00 INFO (6): Created 0 products
2017-03-27T14:34:14-05:00 INFO (6): Created 0 preferences
2017-03-27T14:34:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:34:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:34:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:34:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:34:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:34:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:34:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:34:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:34:22-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:34:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:34:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:34:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:34:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:34:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:34:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:39:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:39:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:39:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:39:50-05:00 INFO (6): Syncing DB.
2017-03-27T14:39:50-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:39:51-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:39:51-05:00 INFO (6): Customer: 117
2017-03-27T14:39:51-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:39:51-05:00 INFO (6): Products: 49
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:39:51-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:39:51-05:00 INFO (6): Created 0 products
2017-03-27T14:39:51-05:00 INFO (6): Created 0 preferences
2017-03-27T14:39:51-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:39:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:39:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:39:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:39:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:39:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:39:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:39:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:39:59-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:39:59-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:39:59-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:39:59-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:39:59-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:59-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:39:59-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:39:59-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:40:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:40:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:40:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:40:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:40:11-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:40:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:40:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:40:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:40:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:40:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:40:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:40:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:41:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:41:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:41:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:41:09-05:00 INFO (6): Syncing DB.
2017-03-27T14:41:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:41:10-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:41:10-05:00 INFO (6): Customer: 117
2017-03-27T14:41:10-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:41:10-05:00 INFO (6): Products: 49
2017-03-27T14:41:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:41:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:41:10-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:41:10-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:41:10-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:41:10-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:41:10-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:41:11-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:41:11-05:00 INFO (6): Created 0 products
2017-03-27T14:41:11-05:00 INFO (6): Created 0 preferences
2017-03-27T14:41:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:41:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:41:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:41:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:41:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:41:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:41:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:41:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:41:17-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:41:17-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:41:17-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:41:17-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:41:17-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:17-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:41:17-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:41:17-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:47:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:47:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:48:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:01-05:00 INFO (6): Syncing DB.
2017-03-27T14:48:01-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:48:02-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:48:03-05:00 INFO (6): Customer: 117
2017-03-27T14:48:03-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:48:03-05:00 INFO (6): Products: 49
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:48:03-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:48:03-05:00 INFO (6): Created 0 products
2017-03-27T14:48:03-05:00 INFO (6): Created 0 preferences
2017-03-27T14:48:03-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:48:03-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:48:03-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:48:03-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:03-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:48:03-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:03-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:48:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:48:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:11-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:48:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:48:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:48:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:48:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:48:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:48:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:48:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:48:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:21-05:00 INFO (6): Syncing DB.
2017-03-27T14:48:21-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:48:24-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:48:24-05:00 INFO (6): Customer: 117
2017-03-27T14:48:24-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:48:24-05:00 INFO (6): Products: 49
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:48:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:48:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:48:25-05:00 INFO (6): Created 0 products
2017-03-27T14:48:25-05:00 INFO (6): Created 0 preferences
2017-03-27T14:48:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:48:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:48:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:48:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:48:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:48:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:48:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:48:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:48:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:48:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:48:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:48:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:48:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:48:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:54:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:54:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:54:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:54:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:54:31-05:00 INFO (6): Syncing DB.
2017-03-27T14:54:31-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:54:32-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:54:32-05:00 INFO (6): Customer: 117
2017-03-27T14:54:32-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:54:33-05:00 INFO (6): Products: 49
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:54:33-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:54:33-05:00 INFO (6): Created 0 products
2017-03-27T14:54:33-05:00 INFO (6): Created 0 preferences
2017-03-27T14:54:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:54:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:54:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:54:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:54:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:54:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:54:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:55:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:55:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:55:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:55:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:55:35-05:00 INFO (6): Syncing DB.
2017-03-27T14:55:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:55:36-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:55:36-05:00 INFO (6): Customer: 117
2017-03-27T14:55:36-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:55:36-05:00 INFO (6): Products: 49
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:55:36-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:55:36-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:55:37-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:55:37-05:00 INFO (6): Created 0 products
2017-03-27T14:55:37-05:00 INFO (6): Created 0 preferences
2017-03-27T14:55:37-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:55:37-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:55:37-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:55:37-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:55:37-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:55:37-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:55:37-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:56:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T14:56:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T14:56:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:56:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:56:56-05:00 INFO (6): Syncing DB.
2017-03-27T14:56:56-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T14:56:57-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T14:56:57-05:00 INFO (6): Customer: 117
2017-03-27T14:56:57-05:00 INFO (6): Preferences by user: 49
2017-03-27T14:56:57-05:00 INFO (6): Products: 49
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T14:56:57-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T14:56:57-05:00 INFO (6): Created 0 products
2017-03-27T14:56:57-05:00 INFO (6): Created 0 preferences
2017-03-27T14:56:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:56:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:56:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:56:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:56:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:56:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:56:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:57:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T14:57:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:57:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T14:57:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T14:57:24-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T14:57:24-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T14:57:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T14:57:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T14:57:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:57:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T14:57:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T14:57:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:03:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:03:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:03:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:03:18-05:00 INFO (6): Syncing DB.
2017-03-27T15:03:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:03:19-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:03:19-05:00 INFO (6): Customer: 117
2017-03-27T15:03:19-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:03:19-05:00 INFO (6): Products: 49
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:03:19-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:03:19-05:00 INFO (6): Created 0 products
2017-03-27T15:03:19-05:00 INFO (6): Created 0 preferences
2017-03-27T15:03:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:03:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:03:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:03:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:03:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:03:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:03:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:03:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:03:25-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:03:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:03:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:03:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:03:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:03:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:03:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:05:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:05:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:05:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:05:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:05:05-05:00 INFO (6): Syncing DB.
2017-03-27T15:05:05-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:05:06-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:05:06-05:00 INFO (6): Customer: 117
2017-03-27T15:05:07-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:05:07-05:00 INFO (6): Products: 49
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:05:07-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:05:07-05:00 INFO (6): Created 0 products
2017-03-27T15:05:07-05:00 INFO (6): Created 0 preferences
2017-03-27T15:05:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:05:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:05:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:05:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:05:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:05:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:05:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:06:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:06:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:06:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:06:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:06:54-05:00 INFO (6): Syncing DB.
2017-03-27T15:06:54-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:06:55-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:06:55-05:00 INFO (6): Customer: 117
2017-03-27T15:06:55-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:06:55-05:00 INFO (6): Products: 49
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:06:55-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:06:55-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:06:56-05:00 INFO (6): Created 0 products
2017-03-27T15:06:56-05:00 INFO (6): Created 0 preferences
2017-03-27T15:06:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:06:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:06:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:06:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:06:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:06:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:06:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:08:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:08:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:08:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:08:09-05:00 INFO (6): Syncing DB.
2017-03-27T15:08:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:08:10-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:08:10-05:00 INFO (6): Customer: 117
2017-03-27T15:08:10-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:08:10-05:00 INFO (6): Products: 49
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:08:10-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:08:10-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:08:11-05:00 INFO (6): Created 0 products
2017-03-27T15:08:11-05:00 INFO (6): Created 0 preferences
2017-03-27T15:08:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:08:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:08:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:08:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:08:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:08:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:08:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:08:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:08:19-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:08:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:08:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:08:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:08:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:08:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:08:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:09:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:09:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:09:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:09:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:09:22-05:00 INFO (6): Syncing DB.
2017-03-27T15:09:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:09:23-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:09:23-05:00 INFO (6): Customer: 117
2017-03-27T15:09:23-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:09:23-05:00 INFO (6): Products: 49
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:09:23-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:09:23-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:09:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:09:24-05:00 INFO (6): Created 0 products
2017-03-27T15:09:24-05:00 INFO (6): Created 0 preferences
2017-03-27T15:09:24-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:09:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:09:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:09:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:09:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:09:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:09:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:12:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:12:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:12:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:12:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:12:12-05:00 INFO (6): Syncing DB.
2017-03-27T15:12:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:12:14-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:12:14-05:00 INFO (6): Customer: 117
2017-03-27T15:12:14-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:12:14-05:00 INFO (6): Products: 49
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:12:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:12:14-05:00 INFO (6): Created 0 products
2017-03-27T15:12:14-05:00 INFO (6): Created 0 preferences
2017-03-27T15:12:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:12:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:12:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:12:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:12:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:12:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:12:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:42:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:42:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:42:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:42:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:42:35-05:00 INFO (6): Syncing DB.
2017-03-27T15:42:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:42:36-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:42:36-05:00 INFO (6): Customer: 117
2017-03-27T15:42:36-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:42:37-05:00 INFO (6): Products: 49
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:42:37-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:42:37-05:00 INFO (6): Created 0 products
2017-03-27T15:42:37-05:00 INFO (6): Created 0 preferences
2017-03-27T15:42:37-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:42:37-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:42:37-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:42:37-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:42:37-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:42:37-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:42:37-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:43:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:43:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:43:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:26-05:00 INFO (6): Syncing DB.
2017-03-27T15:43:26-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:43:27-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:43:27-05:00 INFO (6): Customer: 117
2017-03-27T15:43:27-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:43:27-05:00 INFO (6): Products: 49
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:43:27-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:43:27-05:00 INFO (6): Created 0 products
2017-03-27T15:43:27-05:00 INFO (6): Created 0 preferences
2017-03-27T15:43:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:43:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:43:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:43:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:43:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:43:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:43:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:38-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:43:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:43:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:43:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:43:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:43:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:43:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:43:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:43:47-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:43:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:43:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:43:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:43:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:43:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:43:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:46:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:46:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:05-05:00 INFO (6): Syncing DB.
2017-03-27T15:46:05-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:46:06-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:46:07-05:00 INFO (6): Customer: 117
2017-03-27T15:46:07-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:46:07-05:00 INFO (6): Products: 49
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:46:07-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:46:07-05:00 INFO (6): Created 0 products
2017-03-27T15:46:07-05:00 INFO (6): Created 0 preferences
2017-03-27T15:46:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:46:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:46:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:46:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:46:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:46:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:46:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:46:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:46:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:46:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:46:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:46:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:46:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:46:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:46:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:35-05:00 INFO (6): Syncing DB.
2017-03-27T15:46:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:46:37-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:46:37-05:00 INFO (6): Customer: 117
2017-03-27T15:46:37-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:46:37-05:00 INFO (6): Products: 49
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:46:37-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:46:37-05:00 INFO (6): Created 0 products
2017-03-27T15:46:37-05:00 INFO (6): Created 0 preferences
2017-03-27T15:46:37-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:46:37-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:46:37-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:46:37-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:37-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:46:37-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:37-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:46:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:46:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:46:45-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T15:46:45-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:46:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:46:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:46:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:46:45-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:46:45-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:57:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:57:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:20-05:00 INFO (6): Syncing DB.
2017-03-27T15:57:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:57:21-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:57:21-05:00 INFO (6): Customer: 117
2017-03-27T15:57:21-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:57:21-05:00 INFO (6): Products: 49
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:57:21-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:57:21-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:57:22-05:00 INFO (6): Created 0 products
2017-03-27T15:57:22-05:00 INFO (6): Created 0 preferences
2017-03-27T15:57:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:57:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:57:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:57:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:57:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:57:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:57:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:57:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:38-05:00 INFO (6): Syncing DB.
2017-03-27T15:57:38-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:57:39-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:57:39-05:00 INFO (6): Customer: 117
2017-03-27T15:57:39-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:57:39-05:00 INFO (6): Products: 49
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:57:39-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:57:39-05:00 INFO (6): Created 0 products
2017-03-27T15:57:39-05:00 INFO (6): Created 0 preferences
2017-03-27T15:57:39-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:57:39-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:57:39-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:57:39-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:39-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:57:39-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:39-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T15:57:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T15:57:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T15:57:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T15:57:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T15:57:51-05:00 INFO (6): Syncing DB.
2017-03-27T15:57:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T15:57:52-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T15:57:52-05:00 INFO (6): Customer: 117
2017-03-27T15:57:52-05:00 INFO (6): Preferences by user: 49
2017-03-27T15:57:52-05:00 INFO (6): Products: 49
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T15:57:52-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T15:57:52-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T15:57:53-05:00 INFO (6): Created 0 products
2017-03-27T15:57:53-05:00 INFO (6): Created 0 preferences
2017-03-27T15:57:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T15:57:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T15:57:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T15:57:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T15:57:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T15:57:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:03:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:03:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:03:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:04:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:04:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:04:00-05:00 INFO (6): Syncing DB.
2017-03-27T16:04:00-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:04:01-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:04:01-05:00 INFO (6): Customer: 117
2017-03-27T16:04:02-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:04:02-05:00 INFO (6): Products: 49
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:04:02-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:04:02-05:00 INFO (6): Created 0 products
2017-03-27T16:04:02-05:00 INFO (6): Created 0 preferences
2017-03-27T16:04:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:04:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:04:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:04:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:04:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:04:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:04:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:04:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:04:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:04:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:04:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:04:11-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:04:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:04:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:04:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:04:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:04:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:04:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:04:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:06:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:06:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:06:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:06:05-05:00 INFO (6): Syncing DB.
2017-03-27T16:06:05-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:06:07-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:06:07-05:00 INFO (6): Customer: 117
2017-03-27T16:06:07-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:06:07-05:00 INFO (6): Products: 49
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:06:07-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:06:07-05:00 INFO (6): Created 0 products
2017-03-27T16:06:07-05:00 INFO (6): Created 0 preferences
2017-03-27T16:06:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:06:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:06:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:06:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:06:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:06:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:06:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:06:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:06:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:06:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:06:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:06:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:06:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:06:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:06:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:10:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:10:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:10:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:10:03-05:00 INFO (6): Syncing DB.
2017-03-27T16:10:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:10:05-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:10:05-05:00 INFO (6): Customer: 117
2017-03-27T16:10:05-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:10:05-05:00 INFO (6): Products: 49
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:10:05-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:10:05-05:00 INFO (6): Created 0 products
2017-03-27T16:10:05-05:00 INFO (6): Created 0 preferences
2017-03-27T16:10:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:10:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:10:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:10:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:10:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:10:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:10:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:10:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:10:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:10:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:10:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:10:59-05:00 INFO (6): Syncing DB.
2017-03-27T16:10:59-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:11:00-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:11:00-05:00 INFO (6): Customer: 117
2017-03-27T16:11:00-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:11:00-05:00 INFO (6): Products: 49
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:11:00-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:11:00-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:11:01-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:11:01-05:00 INFO (6): Created 0 products
2017-03-27T16:11:01-05:00 INFO (6): Created 0 preferences
2017-03-27T16:11:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:11:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:11:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:11:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:11:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:11:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:11:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:13:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:13:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:18-05:00 INFO (6): Syncing DB.
2017-03-27T16:13:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:13:20-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:13:20-05:00 INFO (6): Customer: 117
2017-03-27T16:13:20-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:13:20-05:00 INFO (6): Products: 49
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:13:20-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:13:20-05:00 INFO (6): Created 0 products
2017-03-27T16:13:20-05:00 INFO (6): Created 0 preferences
2017-03-27T16:13:20-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:13:20-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:13:20-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:13:20-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:20-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:13:20-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:20-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:13:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:13:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:13:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:41-05:00 INFO (6): Syncing DB.
2017-03-27T16:13:41-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:13:43-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:13:43-05:00 INFO (6): Customer: 117
2017-03-27T16:13:43-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:13:43-05:00 INFO (6): Products: 49
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:13:43-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:13:43-05:00 INFO (6): Created 0 products
2017-03-27T16:13:43-05:00 INFO (6): Created 0 preferences
2017-03-27T16:13:43-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:13:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:13:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:13:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:13:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:13:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:13:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:13:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:13:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:13:56-05:00 INFO (6): Syncing DB.
2017-03-27T16:13:56-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:13:57-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:13:57-05:00 INFO (6): Customer: 117
2017-03-27T16:13:57-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:13:57-05:00 INFO (6): Products: 49
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:13:57-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:13:57-05:00 INFO (6): Created 0 products
2017-03-27T16:13:57-05:00 INFO (6): Created 0 preferences
2017-03-27T16:13:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:13:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:13:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:13:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:13:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:13:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:19:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:03-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:19:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:19:04-05:00 INFO (6): Syncing DB.
2017-03-27T16:19:04-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:19:05-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:19:05-05:00 INFO (6): Customer: 117
2017-03-27T16:19:05-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:19:05-05:00 INFO (6): Products: 49
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:19:05-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:19:05-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:19:06-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:19:06-05:00 INFO (6): Created 0 products
2017-03-27T16:19:06-05:00 INFO (6): Created 0 preferences
2017-03-27T16:19:06-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:19:06-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:19:06-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:19:06-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:06-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:19:06-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:06-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:19:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:19:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:19:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:19:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:19:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:19:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:19:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:19:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:19:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:19:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:19:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:19:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:20:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:20:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:20:00-05:00 INFO (6): Syncing DB.
2017-03-27T16:20:00-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:20:01-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:20:01-05:00 INFO (6): Customer: 117
2017-03-27T16:20:02-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:20:02-05:00 INFO (6): Products: 49
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:20:02-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:20:02-05:00 INFO (6): Created 0 products
2017-03-27T16:20:02-05:00 INFO (6): Created 0 preferences
2017-03-27T16:20:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:20:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:20:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:20:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:20:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:20:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:20:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:20:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:20:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:20:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:20:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:20:12-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:20:12-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:20:12-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:20:12-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:20:12-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:20:12-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:20:12-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:20:12-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:21:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:21:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:21:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:21:22-05:00 INFO (6): Syncing DB.
2017-03-27T16:21:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:21:23-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:21:23-05:00 INFO (6): Customer: 117
2017-03-27T16:21:23-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:21:23-05:00 INFO (6): Products: 49
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:21:23-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:21:23-05:00 INFO (6): Created 0 products
2017-03-27T16:21:23-05:00 INFO (6): Created 0 preferences
2017-03-27T16:21:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:21:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:21:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:21:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:21:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-27T16:21:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:21:25-05:00 INFO (6): product/checked called with type: select
2017-03-27T16:21:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:21:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:21:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:21:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:21:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:21:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:21:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:21:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:21:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:21:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:21:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:35:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T16:35:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T16:35:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:35:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:35:57-05:00 INFO (6): Syncing DB.
2017-03-27T16:35:57-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T16:35:59-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T16:35:59-05:00 INFO (6): Customer: 117
2017-03-27T16:35:59-05:00 INFO (6): Preferences by user: 49
2017-03-27T16:35:59-05:00 INFO (6): Products: 49
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T16:35:59-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T16:35:59-05:00 INFO (6): Created 0 products
2017-03-27T16:35:59-05:00 INFO (6): Created 0 preferences
2017-03-27T16:35:59-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:35:59-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:35:59-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:35:59-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:35:59-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:35:59-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:35:59-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:36:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T16:36:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:36:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T16:36:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T16:36:09-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T16:36:09-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T16:36:09-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T16:36:09-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T16:36:09-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:36:09-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T16:36:09-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T16:36:09-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T19:38:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:38:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:38:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:38:46-05:00 INFO (6): Syncing DB.
2017-03-27T19:38:46-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T19:38:48-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T19:38:48-05:00 INFO (6): Customer: 117
2017-03-27T19:38:48-05:00 INFO (6): Preferences by user: 49
2017-03-27T19:38:48-05:00 INFO (6): Products: 49
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T19:38:48-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T19:38:48-05:00 INFO (6): Created 0 products
2017-03-27T19:38:48-05:00 INFO (6): Created 0 preferences
2017-03-27T19:38:48-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:38:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:38:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:38:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:38:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T19:38:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:38:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:38:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:38:56-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T19:38:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:38:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:38:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:38:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:38:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:38:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:41:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T19:41:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:41:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:41:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:41:51-05:00 INFO (6): Syncing DB.
2017-03-27T19:41:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T19:41:52-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T19:41:52-05:00 INFO (6): Customer: 117
2017-03-27T19:41:53-05:00 INFO (6): Preferences by user: 49
2017-03-27T19:41:53-05:00 INFO (6): Products: 49
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T19:41:53-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T19:41:53-05:00 INFO (6): Created 0 products
2017-03-27T19:41:53-05:00 INFO (6): Created 0 preferences
2017-03-27T19:41:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:41:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:41:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:41:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:41:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:41:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:41:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:42:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T19:42:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:42:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:42:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:42:02-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T19:42:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:42:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:42:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:42:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:42:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:42:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:42:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:53:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T19:53:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:53:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:53:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:53:09-05:00 INFO (6): Syncing DB.
2017-03-27T19:53:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T19:53:10-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T19:53:10-05:00 INFO (6): Customer: 117
2017-03-27T19:53:10-05:00 INFO (6): Preferences by user: 49
2017-03-27T19:53:11-05:00 INFO (6): Products: 49
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T19:53:11-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T19:53:11-05:00 INFO (6): Created 0 products
2017-03-27T19:53:11-05:00 INFO (6): Created 0 preferences
2017-03-27T19:53:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:53:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:53:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:53:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:53:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:53:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:53:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:54:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T19:54:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:54:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T19:54:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T19:54:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T19:54:20-05:00 INFO (6): Syncing DB.
2017-03-27T19:54:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T19:54:22-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T19:54:22-05:00 INFO (6): Customer: 117
2017-03-27T19:54:22-05:00 INFO (6): Preferences by user: 49
2017-03-27T19:54:22-05:00 INFO (6): Products: 49
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T19:54:22-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T19:54:22-05:00 INFO (6): Created 0 products
2017-03-27T19:54:22-05:00 INFO (6): Created 0 preferences
2017-03-27T19:54:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T19:54:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T19:54:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T19:54:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:54:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T19:54:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:54:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T19:54:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T19:54:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:02:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T20:02:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:02:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T20:03:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:03:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:03:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:03:51-05:00 INFO (6): Syncing DB.
2017-03-27T20:03:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T20:03:53-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T20:03:53-05:00 INFO (6): Customer: 117
2017-03-27T20:03:53-05:00 INFO (6): Preferences by user: 49
2017-03-27T20:03:53-05:00 INFO (6): Products: 49
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T20:03:53-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T20:03:53-05:00 INFO (6): Created 0 products
2017-03-27T20:03:53-05:00 INFO (6): Created 0 preferences
2017-03-27T20:03:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:03:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:03:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:03:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:03:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:03:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:03:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:04:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:04:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:04:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:04:03-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:04:03-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:04:03-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:04:03-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:04:03-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:03-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:04:03-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:03-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:04:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:04:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:04:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:04:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:04:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:04:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:04:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:04:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:04:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:04:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T20:08:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:08:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:08:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:08:24-05:00 INFO (6): Syncing DB.
2017-03-27T20:08:24-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T20:08:25-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T20:08:25-05:00 INFO (6): Customer: 117
2017-03-27T20:08:25-05:00 INFO (6): Preferences by user: 49
2017-03-27T20:08:25-05:00 INFO (6): Products: 49
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T20:08:25-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T20:08:25-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T20:08:26-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T20:08:26-05:00 INFO (6): Created 0 products
2017-03-27T20:08:26-05:00 INFO (6): Created 0 preferences
2017-03-27T20:08:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:08:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:08:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:08:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:08:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:08:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:08:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:08:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:08:35-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:08:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:08:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:08:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:08:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:08:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:08:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: product
2017-03-27T20:11:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:11:01-05:00 INFO (6): Form Invalid Form Data:
2017-03-27T20:11:01-05:00 INFO (6): Form Invalid - Message: Array
(
    [isEmpty] => Value is required and can't be empty
)

2017-03-27T20:11:01-05:00 INFO (6): Form Invalid - Message: Array
(
    [isEmpty] => Value is required and can't be empty
)

2017-03-27T20:11:01-05:00 INFO (6): product/product form not valid.
2017-03-27T20:11:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:11:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:11:02-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:11:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:11:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:11:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:11:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:11:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: product
2017-03-27T20:11:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:11:44-05:00 INFO (6): Form Invalid Form Data:
2017-03-27T20:11:44-05:00 INFO (6): Form Invalid - Message: Array
(
    [isEmpty] => Value is required and can't be empty
)

2017-03-27T20:11:44-05:00 INFO (6): Form Invalid - Message: Array
(
    [isEmpty] => Value is required and can't be empty
)

2017-03-27T20:11:44-05:00 INFO (6): product/product form not valid.
2017-03-27T20:11:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:11:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:11:44-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:11:44-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:11:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:11:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:11:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:11:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:11:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:12:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:12:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:12:26-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":893,"reference":"719ee4","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=6cc5cce40c9ae40fb5aef5d8c0d63102\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/117\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 141\r\nConnection: keep-alive\r\n\r\nid=&product_id=Bass+-+Black+Sea%2C+Large%2C+Wild%2C+USA%2C+Whole+(3lb+avg)&overrideprice=8.94&sales_attr_id=180&customer_id=117&scenario=edit","ip":"::1","session_id":"6cc5cce40c9ae40fb5aef5d8c0d63102","trace":"\n\n"}
2017-03-27T20:17:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T20:17:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:31-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:17:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:17:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:17:32-05:00 INFO (6): Syncing DB.
2017-03-27T20:17:32-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T20:17:33-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T20:17:33-05:00 INFO (6): Customer: 117
2017-03-27T20:17:33-05:00 INFO (6): Preferences by user: 49
2017-03-27T20:17:33-05:00 INFO (6): Products: 49
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T20:17:33-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T20:17:33-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T20:17:34-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T20:17:34-05:00 INFO (6): Created 0 products
2017-03-27T20:17:34-05:00 INFO (6): Created 0 preferences
2017-03-27T20:17:34-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:17:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:17:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:17:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:17:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:17:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:17:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:17:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:17:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:17:45-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":893,"reference":"4cc0f2","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=6cc5cce40c9ae40fb5aef5d8c0d63102\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/117\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 137\r\nConnection: keep-alive\r\n\r\nid=&product_id=Bass+-+Black+Sea%2C+Large%2C+Wild%2C+USA%2C+Whole+(3lb+avg)&overrideprice=&sales_attr_id=180&customer_id=117&scenario=edit","ip":"::1","session_id":"6cc5cce40c9ae40fb5aef5d8c0d63102","trace":"\n\n"}
2017-03-27T20:18:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:18:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:18:02-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":893,"reference":"ea4644","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=6cc5cce40c9ae40fb5aef5d8c0d63102\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/117\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 137\r\nConnection: keep-alive\r\n\r\nid=&product_id=Bass+-+Black+Sea%2C+Large%2C+Wild%2C+USA%2C+Whole+(3lb+avg)&overrideprice=&sales_attr_id=180&customer_id=117&scenario=edit","ip":"::1","session_id":"6cc5cce40c9ae40fb5aef5d8c0d63102","trace":"\n\n"}
2017-03-27T20:20:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-27T20:20:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-27T20:20:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:20:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:26-05:00 INFO (6): Syncing DB.
2017-03-27T20:20:26-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=117
2017-03-27T20:20:27-05:00 INFO (6): Web Service (Products) #: 49
2017-03-27T20:20:27-05:00 INFO (6): Customer: 117
2017-03-27T20:20:27-05:00 INFO (6): Preferences by user: 49
2017-03-27T20:20:27-05:00 INFO (6): Products: 49
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 27, sku = 3400001, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  27 , sku =  3400001 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 193, sku = 132, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  193 , sku =  132 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 194, sku = 121, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  194 , sku =  121 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 896, sku = 8149603, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  896 , sku =  8149603 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 847, sku = 16712301, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  847 , sku =  16712301 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1163, sku = 1415, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1163 , sku =  1415 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 644, sku = 2345, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  644 , sku =  2345 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1036, sku = 448, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1036 , sku =  448 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1343, sku = 9869612, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1343 , sku =  9869612 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 553, sku = 2070, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  553 , sku =  2070 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1016, sku = 17289405, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1016 , sku =  17289405 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1270, sku = 17273502, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1270 , sku =  17273502 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 97, sku = 751, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  97 , sku =  751 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1339, sku = 221223, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1339 , sku =  221223 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 531, sku = 1897, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  531 , sku =  1897 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 156, sku = 356, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  156 , sku =  356 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1047, sku = 16600002, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1047 , sku =  16600002 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1046, sku = 164, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1046 , sku =  164 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1282, sku = 3334, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1282 , sku =  3334 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 703, sku = 2544, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  703 , sku =  2544 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 148, sku = 375, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  148 , sku =  375 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 36, sku = 51, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  36 , sku =  51 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 229, sku = 298, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  229 , sku =  298 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 276, sku = 584, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  276 , sku =  584 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 985, sku = 7600003, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  985 , sku =  7600003 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 796, sku = 2884, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  796 , sku =  2884 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 296, sku = 918, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  296 , sku =  918 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1179, sku = 15796902, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1179 , sku =  15796902 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 594, sku = 2191, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  594 , sku =  2191 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1290, sku = 551682337, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1290 , sku =  551682337 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 96, sku = 551682, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  96 , sku =  551682 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 919, sku = 56414502, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  919 , sku =  56414502 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 737, sku = 2669, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  737 , sku =  2669 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 256, sku = 38, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  256 , sku =  38 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 343, sku = 8237201, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  343 , sku =  8237201 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1177, sku = 446, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1177 , sku =  446 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1125, sku = 16198910, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1125 , sku =  16198910 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 316, sku = 1099, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  316 , sku =  1099 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 1445, sku = 3003003, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  1445 , sku =  3003003 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 204, sku = 3, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  204 , sku =  3 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 379, sku = 17242308, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  379 , sku =  17242308 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-27T20:20:27-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = jmeade]
2017-03-27T20:20:27-05:00 INFO (6): Created 0 products
2017-03-27T20:20:27-05:00 INFO (6): Created 0 preferences
2017-03-27T20:20:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:20:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:20:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:20:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:20:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:20:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:20:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:38-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:20:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:20:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:20:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:20:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:20:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-27T20:20:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:20:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:20:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:20:55-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-27T20:20:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-27T20:20:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:20:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-27T20:20:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:20:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:21:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-27T20:21:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:21:13-05:00 INFO (6): product/checked called with type: selectall
2017-03-27T20:21:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-27T20:21:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-27T20:21:16-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-27T20:21:16-05:00 INFO (6): LIMIT = LIMIT 0, 1000
2017-03-27T20:21:16-05:00 INFO (6): ORDER =
2017-03-27T20:21:16-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)
2017-03-27T20:21:16-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:21:16-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )  LIMIT 0, 1000
2017-03-27T20:21:16-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:21:16-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 117 AND `user_customer`.`user_id` = 9)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 117 AND `added_product`.`active` = 1 )
2017-03-27T20:21:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: report
2017-03-27T20:21:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
