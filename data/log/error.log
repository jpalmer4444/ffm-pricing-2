2017-03-29T20:10:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:10:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:10:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:10:01-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:10:01-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:10:01-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:10:01-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:10:01-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:10:01-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:13:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:13:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:13:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:08-05:00 INFO (6): Syncing DB.
2017-03-29T20:13:08-05:00 INFO (6): Querying Customers.
2017-03-29T20:13:08-05:00 INFO (6): Querying Customers.
2017-03-29T20:13:08-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:13:08-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:13:08-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:13:08-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:13:08-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:13:08-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:13:08-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:13:08-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:13:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-29T20:13:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:13:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:13:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:28-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:13:28-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:13:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:13:29-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:13:29-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:13:29-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:13:29-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:13:29-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:13:29-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:13:29-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:29-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:29-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:29-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:13:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:34-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:13:34-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:13:34-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:13:34-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:13:34-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:13:34-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:13:34-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:13:34-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:13:34-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 ) ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:13:34-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-23% Type: 2
2017-03-29T20:13:34-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:13:34-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:13:34-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-23% Type: 2
2017-03-29T20:13:34-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:34-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:13:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:13:38-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:13:38-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:13:38-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:13:39-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:13:39-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:13:39-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:13:39-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:13:39-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:13:39-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 ) ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:13:39-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-24% Type: 2
2017-03-29T20:13:39-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:13:39-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:13:39-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-24% Type: 2
2017-03-29T20:13:39-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:13:39-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: index
2017-03-29T20:14:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:14:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:18-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:14:18-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:14:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:14:19-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:14:19-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:14:19-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:14:19-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:14:19-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:14:19-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:14:19-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:19-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:19-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:19-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:14:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:25-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:14:25-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:14:25-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:14:26-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:14:26-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:14:26-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:14:26-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:14:26-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:14:26-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE (`full_name` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 ) ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:14:26-05:00 INFO (6): 
Binding Key: :binding_0 Value: %Cyndi% Type: 2
2017-03-29T20:14:26-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE (`full_name` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:26-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE (`full_name` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:26-05:00 INFO (6): 
Binding Key: :binding_0 Value: %Cyndi% Type: 2
2017-03-29T20:14:26-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:26-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:14:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:32-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:14:32-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:14:32-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:14:33-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:14:33-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:14:33-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:14:33-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:14:33-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:14:33-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE (`last_login` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 ) ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:14:33-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-22% Type: 2
2017-03-29T20:14:33-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE (`last_login` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:33-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE (`last_login` LIKE :binding_0) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:33-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-22% Type: 2
2017-03-29T20:14:33-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:33-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:14:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:37-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:14:37-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:14:37-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:14:38-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:14:38-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:14:38-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:14:38-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:14:38-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:14:38-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE (`date_created` LIKE :binding_0 AND `last_login` LIKE :binding_1) AND ( sales_attr_id IS NOT NULL AND status = 1 ) ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:14:38-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-22% Type: 2
2017-03-29T20:14:38-05:00 INFO (6): 
Binding Key: :binding_1 Value: %2017-03-22% Type: 2
2017-03-29T20:14:38-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0 AND `last_login` LIKE :binding_1) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:38-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE (`date_created` LIKE :binding_0 AND `last_login` LIKE :binding_1) AND ( sales_attr_id IS NOT NULL AND status = 1 )
2017-03-29T20:14:38-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-22% Type: 2
2017-03-29T20:14:38-05:00 INFO (6): 
Binding Key: :binding_1 Value: %2017-03-22% Type: 2
2017-03-29T20:14:38-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:38-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\SalespeopleController and actionName: salespeopleTable
2017-03-29T20:14:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:40-05:00 INFO (6): Retrieving Salespeople from Web Service.
2017-03-29T20:14:40-05:00 INFO (6): Retrieving salespeople.
2017-03-29T20:14:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=salespeople
2017-03-29T20:14:41-05:00 INFO (6): Retrieved 5 salespeople from web service
2017-03-29T20:14:41-05:00 INFO (6): Retrieved 5 salespeople from DB
2017-03-29T20:14:41-05:00 INFO (6): 
MissingFromWebService: 2
2017-03-29T20:14:41-05:00 INFO (6): 
MissingFromDB: 250
2017-03-29T20:14:41-05:00 INFO (6): Salespeople REST/DB Sync Test Results:
2017-03-29T20:14:41-05:00 INFO (6): SQL: SELECT `id`, `username`, `email`, `status`, `full_name`, `date_created`, `last_login`, `sales_attr_id` FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1  ORDER BY `id` ASC LIMIT 0, 100
2017-03-29T20:14:41-05:00 INFO (6): SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:41-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM  `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:41-05:00 INFO (6): SQL: SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:41-05:00 INFO (6): SELECT COUNT(`id`) FROM `users` WHERE  sales_attr_id IS NOT NULL AND status = 1
2017-03-29T20:14:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:14:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:14:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:14:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:47-05:00 INFO (6): Syncing DB.
2017-03-29T20:14:47-05:00 INFO (6): Querying Customers.
2017-03-29T20:14:47-05:00 INFO (6): Querying Customers.
2017-03-29T20:14:47-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:14:48-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:14:48-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:14:48-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:14:48-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:48-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:48-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:48-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:14:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:14:52-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:14:52-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:14:52-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:14:52-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:52-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:52-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:14:52-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:16:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:16:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:16:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:16:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:16:56-05:00 INFO (6): Syncing DB.
2017-03-29T20:16:56-05:00 INFO (6): Querying Customers.
2017-03-29T20:16:56-05:00 INFO (6): Querying Customers.
2017-03-29T20:16:56-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:16:57-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:16:57-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:16:57-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:16:57-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:16:57-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:16:57-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:16:57-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:17:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:17:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:17:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:17:01-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 ) ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:17:01-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 ) ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:17:01-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-23% Type: 2
2017-03-29T20:17:01-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 )
2017-03-29T20:17:01-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-23% Type: 2
2017-03-29T20:17:01-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 )
2017-03-29T20:17:01-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:17:01-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:17:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:17:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:17:08-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:17:08-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 ) ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:17:08-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 ) ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:17:08-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-24% Type: 2
2017-03-29T20:17:08-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 )
2017-03-29T20:17:08-05:00 INFO (6): 
Binding Key: :binding_0 Value: %2017-03-24% Type: 2
2017-03-29T20:17:08-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE (`created` LIKE :binding_0) AND ( `user_customer`.`user_id` = 5 )
2017-03-29T20:17:08-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:17:08-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:18:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:18:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:18:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:18:40-05:00 INFO (6): Syncing DB.
2017-03-29T20:18:40-05:00 INFO (6): Querying Customers.
2017-03-29T20:18:40-05:00 INFO (6): Querying Customers.
2017-03-29T20:18:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:18:40-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:18:40-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:18:40-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:18:40-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:40-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:40-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:40-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:18:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:18:45-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:18:45-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:18:45-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:18:45-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:45-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:45-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:18:45-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:19:11-05:00 ERR (3): syntax error, unexpected '&' {"type":"FATAL","reference":"2ac8c0","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/CustomerController.php","line":132,"uri":"https://ffmpricing.localhost/customer/view/183","request":"GET https://ffmpricing.localhost/customer/view/183 HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/salespeople\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nPragma: no-cache\r\nCache-Control: no-cache\r\n\r\n","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca","trace":"\n\n"}
2017-03-29T20:19:11-05:00 WARN (4): Cannot modify header information - headers already sent by (output started at /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/CustomerController.php:132) {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/vendor/davidhavl/dherrorlogging/src/DhErrorLogging/Sender/ResponseSender.php","line":128,"reference":"8728dc","uri":"https://ffmpricing.localhost/customer/view/183","request":"GET https://ffmpricing.localhost/customer/view/183 HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/xhtml+xml, text/html, application/xml;q=0.9, */*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/salespeople\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nPragma: no-cache\r\nCache-Control: no-cache\r\n\r\n","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca","trace":"\n\n"}
2017-03-29T20:19:30-05:00 ERR (3): syntax error, unexpected '&' {"type":"FATAL","reference":"6f0167","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/CustomerController.php","line":124,"uri":"https://ffmpricing.localhost/customer/view/183","request":"GET https://ffmpricing.localhost/customer/view/183 HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/salespeople\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nCache-Control: max-age=0\r\n\r\n","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca","trace":"\n\n"}
2017-03-29T20:19:30-05:00 WARN (4): Cannot modify header information - headers already sent by (output started at /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/CustomerController.php:124) {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/vendor/davidhavl/dherrorlogging/src/DhErrorLogging/Sender/ResponseSender.php","line":128,"reference":"866e6e","uri":"https://ffmpricing.localhost/customer/view/183","request":"GET https://ffmpricing.localhost/customer/view/183 HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/xhtml+xml, text/html, application/xml;q=0.9, */*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/salespeople\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nCache-Control: max-age=0\r\n\r\n","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca","trace":"\n\n"}
2017-03-29T20:20:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:20:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:20:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:20:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:20:37-05:00 INFO (6): Syncing DB.
2017-03-29T20:20:37-05:00 INFO (6): Querying Customers.
2017-03-29T20:20:37-05:00 INFO (6): Querying Customers.
2017-03-29T20:20:37-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:20:38-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:20:38-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:20:38-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:20:38-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:38-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:38-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:38-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:20:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:20:42-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:20:42-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:20:42-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:20:42-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:42-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:42-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:20:42-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:21:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:21:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:21:16-05:00 INFO (6): Syncing DB.
2017-03-29T20:21:16-05:00 INFO (6): Querying Customers.
2017-03-29T20:21:16-05:00 INFO (6): Querying Customers.
2017-03-29T20:21:16-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:21:17-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:21:17-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:21:17-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:21:17-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:17-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:17-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:17-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:21:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:21:21-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:21:21-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:21:21-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:21:21-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:21-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:21-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:21-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:21:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:21:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:21:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:21:55-05:00 INFO (6): Syncing DB.
2017-03-29T20:21:55-05:00 INFO (6): Querying Customers.
2017-03-29T20:21:55-05:00 INFO (6): Querying Customers.
2017-03-29T20:21:55-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:21:56-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:21:56-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5   LIMIT 0, 10
2017-03-29T20:21:56-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5   LIMIT 0, 10
2017-03-29T20:21:56-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:56-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:56-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:21:56-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:22:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:22:00-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:22:00-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5   LIMIT 0, 10
2017-03-29T20:22:00-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5   LIMIT 0, 10
2017-03-29T20:22:00-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:00-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:00-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:00-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:22:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:22:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:22:35-05:00 INFO (6): Syncing DB.
2017-03-29T20:22:35-05:00 INFO (6): Querying Customers.
2017-03-29T20:22:35-05:00 INFO (6): Querying Customers.
2017-03-29T20:22:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:22:36-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:22:36-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:22:36-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:22:36-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:36-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:36-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:36-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:22:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:22:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:22:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:22:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:22:43-05:00 INFO (6): Syncing DB.
2017-03-29T20:22:43-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:22:44-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:22:44-05:00 INFO (6): Customer: 46
2017-03-29T20:22:44-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:22:45-05:00 INFO (6): Products: 123
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:22:45-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:22:45-05:00 INFO (6): Created 0 products
2017-03-29T20:22:45-05:00 INFO (6): Created 0 preferences
2017-03-29T20:22:45-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:22:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:22:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:22:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:22:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:22:45-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:22:45-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:25:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:25:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:25:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:25:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:25:48-05:00 INFO (6): Syncing DB.
2017-03-29T20:25:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:25:50-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:25:50-05:00 INFO (6): Customer: 46
2017-03-29T20:25:50-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:25:50-05:00 INFO (6): Products: 123
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:25:50-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:25:50-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:25:51-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:25:51-05:00 INFO (6): Created 0 products
2017-03-29T20:25:51-05:00 INFO (6): Created 0 preferences
2017-03-29T20:25:51-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:25:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:25:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:25:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:25:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:25:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:25:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:25:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:25:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:25:58-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:25:58-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:25:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:25:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:25:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:25:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`saturdayenabled` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`id` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:25:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`saturdayenabled` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`id` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T20:25:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:26:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:26:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:26:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:26:10-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:26:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:26:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:26:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:26:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`saturdayenabled` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`id` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:26:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`saturdayenabled` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`id` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T20:26:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:32:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:33-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:32:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:32:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:32:34-05:00 INFO (6): Syncing DB.
2017-03-29T20:32:34-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:32:35-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:32:36-05:00 INFO (6): Customer: 46
2017-03-29T20:32:36-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:32:36-05:00 INFO (6): Products: 123
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:32:36-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:32:36-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:32:37-05:00 INFO (6): Created 0 products
2017-03-29T20:32:37-05:00 INFO (6): Created 0 preferences
2017-03-29T20:32:37-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:32:37-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:32:37-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:32:37-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:37-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:32:37-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:37-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:32:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:32:44-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:32:44-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:32:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:32:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:32:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:32:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T20:32:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:32:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:32:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:32:55-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:32:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:32:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:32:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:32:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`sku` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`sku` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:32:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`sku` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`sku` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T20:32:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:33:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:33:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:33:02-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:33:02-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:33:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:33:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:33:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:33:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:33:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:33:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:40:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:40:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:40:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:08-05:00 INFO (6): Syncing DB.
2017-03-29T20:40:08-05:00 INFO (6): Querying Customers.
2017-03-29T20:40:08-05:00 INFO (6): Querying Customers.
2017-03-29T20:40:08-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:40:09-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:40:09-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:40:09-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:40:09-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:09-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:09-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:09-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-29T20:40:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-29T20:40:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:22-05:00 INFO (6): Syncing DB.
2017-03-29T20:40:22-05:00 INFO (6): Querying Customers.
2017-03-29T20:40:22-05:00 INFO (6): Querying Customers.
2017-03-29T20:40:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-29T20:40:23-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-29T20:40:23-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:40:23-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-29T20:40:23-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:23-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:23-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:23-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-29T20:40:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:40:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:36-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:40:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:40:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:40:37-05:00 INFO (6): Syncing DB.
2017-03-29T20:40:37-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:40:38-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:40:38-05:00 INFO (6): Customer: 46
2017-03-29T20:40:39-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:40:39-05:00 INFO (6): Products: 123
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:40:39-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:40:39-05:00 INFO (6): Created 0 products
2017-03-29T20:40:39-05:00 INFO (6): Created 0 preferences
2017-03-29T20:40:40-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:40:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:40:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:40:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:40:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:40:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:40:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:41:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:41:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:41:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:41:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:41:49-05:00 INFO (6): Syncing DB.
2017-03-29T20:41:49-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:41:50-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:41:50-05:00 INFO (6): Customer: 46
2017-03-29T20:41:50-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:41:51-05:00 INFO (6): Products: 123
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:41:51-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:41:51-05:00 INFO (6): Created 0 products
2017-03-29T20:41:51-05:00 INFO (6): Created 0 preferences
2017-03-29T20:41:51-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:41:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:41:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:41:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:41:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:41:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:41:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:42:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:42:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:42:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:42:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:42:48-05:00 INFO (6): Syncing DB.
2017-03-29T20:42:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:42:50-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:42:50-05:00 INFO (6): Customer: 46
2017-03-29T20:42:50-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:42:50-05:00 INFO (6): Products: 123
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:42:50-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:42:50-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:42:51-05:00 INFO (6): Created 0 products
2017-03-29T20:42:51-05:00 INFO (6): Created 0 preferences
2017-03-29T20:42:51-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:42:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:42:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:42:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:42:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:42:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:42:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:43:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:43:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:43:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:43:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:43:43-05:00 INFO (6): Syncing DB.
2017-03-29T20:43:43-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:43:44-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:43:44-05:00 INFO (6): Customer: 46
2017-03-29T20:43:45-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:43:45-05:00 INFO (6): Products: 123
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:43:45-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:43:45-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:43:46-05:00 INFO (6): Created 0 products
2017-03-29T20:43:46-05:00 INFO (6): Created 0 preferences
2017-03-29T20:43:46-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:43:46-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:43:46-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:43:46-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:43:46-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:43:46-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:43:46-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:44:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:44:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:44:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:44:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:44:27-05:00 INFO (6): Syncing DB.
2017-03-29T20:44:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:44:29-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:44:29-05:00 INFO (6): Customer: 46
2017-03-29T20:44:29-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:44:30-05:00 INFO (6): Products: 123
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:44:30-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:44:30-05:00 INFO (6): Created 0 products
2017-03-29T20:44:30-05:00 INFO (6): Created 0 preferences
2017-03-29T20:44:30-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:44:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:44:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:44:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:44:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:44:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:44:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:45:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T20:45:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T20:45:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:45:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:45:22-05:00 INFO (6): Syncing DB.
2017-03-29T20:45:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T20:45:24-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T20:45:24-05:00 INFO (6): Customer: 46
2017-03-29T20:45:24-05:00 INFO (6): Preferences by user: 123
2017-03-29T20:45:24-05:00 INFO (6): Products: 123
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T20:45:24-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T20:45:24-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T20:45:25-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T20:45:25-05:00 INFO (6): Created 0 products
2017-03-29T20:45:25-05:00 INFO (6): Created 0 preferences
2017-03-29T20:45:25-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:45:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:45:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:45:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:45:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:45:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:45:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:49:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T20:49:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T20:49:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T20:49:15-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T20:49:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T20:49:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T20:49:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T20:49:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T20:49:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T20:49:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:12:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:12:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:12:50-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:12:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:12:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:12:51-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:12:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:12:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:12:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:00-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:03-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:13:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:13:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:13:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:07-05:00 INFO (6): Syncing DB.
2017-03-29T21:13:07-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:13:09-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:13:09-05:00 INFO (6): Customer: 46
2017-03-29T21:13:10-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:13:10-05:00 INFO (6): Products: 123
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:13:10-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:13:10-05:00 INFO (6): Created 0 products
2017-03-29T21:13:10-05:00 INFO (6): Created 0 preferences
2017-03-29T21:13:10-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:13:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:13:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:13:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:13:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:13:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:13:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:13:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:15-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:16-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:18-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:19-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:13:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:29-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:13:29-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:13:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:13:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:13:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:13:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:13:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:13:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:13:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:31-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:39-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:40-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:42-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:13:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:44-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:13:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:13:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:13:48-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:15:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:15:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:15:58-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:00-05:00 INFO (6): Syncing DB.
2017-03-29T21:16:00-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:16:01-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:16:01-05:00 INFO (6): Customer: 46
2017-03-29T21:16:02-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:16:02-05:00 INFO (6): Products: 123
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:16:02-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:16:02-05:00 INFO (6): Created 0 products
2017-03-29T21:16:02-05:00 INFO (6): Created 0 preferences
2017-03-29T21:16:02-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:16:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:07-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:16:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:07-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:16:07-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:16:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:11-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:16:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:12-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:16:12-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:12-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:12-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:12-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:12-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:12-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:12-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:16:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:16:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:46-05:00 INFO (6): Syncing DB.
2017-03-29T21:16:46-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:16:48-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:16:48-05:00 INFO (6): Customer: 46
2017-03-29T21:16:48-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:16:48-05:00 INFO (6): Products: 123
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:16:48-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:16:48-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:16:49-05:00 INFO (6): Created 0 products
2017-03-29T21:16:49-05:00 INFO (6): Created 0 preferences
2017-03-29T21:16:49-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:16:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:16:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:16:53-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:16:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:55-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:16:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:16:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:16:56-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:16:56-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:16:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:16:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:16:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:16:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:16:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:17:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:17:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:17:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:17:21-05:00 INFO (6): Syncing DB.
2017-03-29T21:17:21-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:17:23-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:17:23-05:00 INFO (6): Customer: 46
2017-03-29T21:17:23-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:17:23-05:00 INFO (6): Products: 123
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:17:23-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:17:23-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:17:24-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:17:24-05:00 INFO (6): Created 0 products
2017-03-29T21:17:24-05:00 INFO (6): Created 0 preferences
2017-03-29T21:17:24-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:17:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:17:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:17:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:17:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:17:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:17:55-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:17:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:17:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:17:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:17:55-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:17:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:17:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:17:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:17:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:17:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:18:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:10-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:18:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:18:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:18:10-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:18:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:18:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:18:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:18:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:18:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:14-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:18:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:15-05:00 INFO (6): Syncing DB.
2017-03-29T21:18:15-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:18:17-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:18:17-05:00 INFO (6): Customer: 46
2017-03-29T21:18:17-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:18:17-05:00 INFO (6): Products: 123
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:18:17-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:18:17-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:18:18-05:00 INFO (6): Created 0 products
2017-03-29T21:18:18-05:00 INFO (6): Created 0 preferences
2017-03-29T21:18:18-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:18:18-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:18:18-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:18:18-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:18-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:18:18-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:18-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:18:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:22-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:18:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:18:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:23-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:18:23-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:18:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:18:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:18:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:18:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:18:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:18:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:18:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:18:43-05:00 INFO (6): Syncing DB.
2017-03-29T21:18:43-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:18:45-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:18:45-05:00 INFO (6): Customer: 46
2017-03-29T21:18:45-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:18:46-05:00 INFO (6): Products: 123
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:18:46-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:18:46-05:00 INFO (6): Created 0 products
2017-03-29T21:18:46-05:00 INFO (6): Created 0 preferences
2017-03-29T21:18:46-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:18:46-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:18:46-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:18:46-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:46-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:18:46-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:18:46-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:20:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:20:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:20:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:31-05:00 INFO (6): Syncing DB.
2017-03-29T21:20:31-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:20:33-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:20:33-05:00 INFO (6): Customer: 46
2017-03-29T21:20:33-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:20:33-05:00 INFO (6): Products: 123
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:20:33-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:20:33-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:20:34-05:00 INFO (6): Created 0 products
2017-03-29T21:20:34-05:00 INFO (6): Created 0 preferences
2017-03-29T21:20:34-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:20:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:20:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:20:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:20:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:20:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:37-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:20:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:20:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:38-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:20:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:20:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:43-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:20:43-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:20:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:20:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:20:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:20:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:20:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:20:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:20:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:46-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:20:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:20:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:20:51-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:21:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:21:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:21:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:21:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:18-05:00 INFO (6): Syncing DB.
2017-03-29T21:21:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:21:20-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:21:20-05:00 INFO (6): Customer: 46
2017-03-29T21:21:20-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:21:20-05:00 INFO (6): Products: 123
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:21:20-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:21:20-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:21:21-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:21:21-05:00 INFO (6): Created 0 products
2017-03-29T21:21:21-05:00 INFO (6): Created 0 preferences
2017-03-29T21:21:21-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:21:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:21:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:21:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:21:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:21:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:21:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:21:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:30-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:21:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:30-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:21:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:21:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:36-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:21:36-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:21:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:21:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:21:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:21:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:21:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`productname` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`productname` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:21:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:21:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:38-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:21:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:40-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:21:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:21:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:21:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:21:42-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:30:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:30:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:42-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:30:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:30:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:30:43-05:00 INFO (6): Syncing DB.
2017-03-29T21:30:43-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:30:44-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:30:45-05:00 INFO (6): Customer: 46
2017-03-29T21:30:45-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:30:45-05:00 INFO (6): Products: 123
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:30:45-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:30:45-05:00 INFO (6): Created 0 products
2017-03-29T21:30:45-05:00 INFO (6): Created 0 preferences
2017-03-29T21:30:45-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:30:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:30:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:30:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:30:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:30:46-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:30:46-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:31:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:31:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:31:20-05:00 INFO (6): Syncing DB.
2017-03-29T21:31:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:31:21-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:31:21-05:00 INFO (6): Customer: 46
2017-03-29T21:31:21-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:31:22-05:00 INFO (6): Products: 123
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:31:22-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:31:22-05:00 INFO (6): Created 0 products
2017-03-29T21:31:22-05:00 INFO (6): Created 0 preferences
2017-03-29T21:31:22-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:31:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:31:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:31:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:31:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:31:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:31:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:31:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:31:30-05:00 INFO (6): Syncing DB.
2017-03-29T21:31:30-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:31:32-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:31:32-05:00 INFO (6): Customer: 46
2017-03-29T21:31:32-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:31:32-05:00 INFO (6): Products: 123
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:31:32-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:31:32-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:31:33-05:00 INFO (6): Created 0 products
2017-03-29T21:31:33-05:00 INFO (6): Created 0 preferences
2017-03-29T21:31:33-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:31:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:31:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:31:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:31:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:31:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:32:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:32:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:32:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:32:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:32:28-05:00 INFO (6): Syncing DB.
2017-03-29T21:32:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:32:30-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:32:30-05:00 INFO (6): Customer: 46
2017-03-29T21:32:30-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:32:31-05:00 INFO (6): Products: 123
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:32:31-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:32:31-05:00 INFO (6): Created 0 products
2017-03-29T21:32:31-05:00 INFO (6): Created 0 preferences
2017-03-29T21:32:31-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:32:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:32:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:32:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:32:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:32:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:32:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:33:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:33:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:33:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:33:48-05:00 INFO (6): Syncing DB.
2017-03-29T21:33:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:33:50-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:33:50-05:00 INFO (6): Customer: 46
2017-03-29T21:33:50-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:33:50-05:00 INFO (6): Products: 123
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:33:50-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:33:50-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:33:51-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:33:51-05:00 INFO (6): Created 0 products
2017-03-29T21:33:51-05:00 INFO (6): Created 0 preferences
2017-03-29T21:33:51-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:33:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:33:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:33:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:33:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:33:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:33:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:33:55-05:00 INFO (6): LIMIT = LIMIT 0, 1000
2017-03-29T21:33:55-05:00 INFO (6): ORDER =
2017-03-29T21:33:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:33:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )  LIMIT 0, 1000
2017-03-29T21:33:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:33:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: report
2017-03-29T21:33:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:36:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:36:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:36:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:36:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:36:24-05:00 INFO (6): Syncing DB.
2017-03-29T21:36:24-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:36:26-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:36:26-05:00 INFO (6): Customer: 46
2017-03-29T21:36:26-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:36:27-05:00 INFO (6): Products: 123
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:36:27-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:36:27-05:00 INFO (6): Created 0 products
2017-03-29T21:36:27-05:00 INFO (6): Created 0 preferences
2017-03-29T21:36:27-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:36:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:36:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:36:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:36:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:36:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:36:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:36:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:36:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:37:01-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:01-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:01-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:01-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:37:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:37:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:37:03-05:00 INFO (6): Syncing DB.
2017-03-29T21:37:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:37:04-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:37:04-05:00 INFO (6): Customer: 46
2017-03-29T21:37:04-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:37:05-05:00 INFO (6): Products: 123
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:37:05-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:37:05-05:00 INFO (6): Created 0 products
2017-03-29T21:37:05-05:00 INFO (6): Created 0 preferences
2017-03-29T21:37:05-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:37:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:37:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:37:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:37:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:37:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:37:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:39:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:39:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:40:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:40:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:40:01-05:00 INFO (6): Syncing DB.
2017-03-29T21:40:01-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:40:03-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:40:03-05:00 INFO (6): Customer: 46
2017-03-29T21:40:03-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:40:03-05:00 INFO (6): Products: 123
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:40:03-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:40:03-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:40:04-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:40:04-05:00 INFO (6): Created 0 products
2017-03-29T21:40:04-05:00 INFO (6): Created 0 preferences
2017-03-29T21:40:04-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:40:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:40:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:40:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:40:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:40:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:40:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:40:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:40:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:40:07-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:42:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:42:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:42:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:42:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:42:47-05:00 INFO (6): Syncing DB.
2017-03-29T21:42:47-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:42:48-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:42:48-05:00 INFO (6): Customer: 46
2017-03-29T21:42:49-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:42:49-05:00 INFO (6): Products: 123
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:42:49-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:42:49-05:00 INFO (6): Created 0 products
2017-03-29T21:42:49-05:00 INFO (6): Created 0 preferences
2017-03-29T21:42:49-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:42:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:42:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:42:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:42:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:42:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:42:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:42:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:42:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:42:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:42:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:42:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:42:55-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:42:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:42:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:42:58-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:43:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:43:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:43:05-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:43:05-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:43:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:43:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:43:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:43:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:43:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:43:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:43:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:43:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:43:09-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:44:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:24-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:25-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:44:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:29-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:44:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:29-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:30-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:44:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:31-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:37-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:44:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:43-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:45-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:44:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:44:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:44:47-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:46:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:46:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:46:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:46:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:28-05:00 INFO (6): Syncing DB.
2017-03-29T21:46:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:46:29-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:46:29-05:00 INFO (6): Customer: 46
2017-03-29T21:46:29-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:46:30-05:00 INFO (6): Products: 123
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:46:30-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:46:30-05:00 INFO (6): Created 0 products
2017-03-29T21:46:30-05:00 INFO (6): Created 0 preferences
2017-03-29T21:46:30-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:46:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:46:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:46:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:46:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:46:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:46:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:46:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:46:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:33-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:46:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:46:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:34-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:46:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:46:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:38-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:46:38-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:46:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:46:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:46:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:46:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:46:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:46:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:46:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:46:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:46:49-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:48:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:48:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:49:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:49:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:01-05:00 INFO (6): Syncing DB.
2017-03-29T21:49:01-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:49:03-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:49:03-05:00 INFO (6): Customer: 46
2017-03-29T21:49:03-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:49:03-05:00 INFO (6): Products: 123
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:49:03-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:49:03-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:49:04-05:00 INFO (6): Created 0 products
2017-03-29T21:49:04-05:00 INFO (6): Created 0 preferences
2017-03-29T21:49:04-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:49:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:49:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:49:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:49:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:49:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:49:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:49:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:49:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:09-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:49:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:49:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:49:13-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:49:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:49:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:49:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:49:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:49:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:49:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:49:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:49:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:19-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:49:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:49:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:49:21-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:50:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:50:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:13-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:50:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:50:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:14-05:00 INFO (6): Syncing DB.
2017-03-29T21:50:14-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:50:16-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:50:16-05:00 INFO (6): Customer: 46
2017-03-29T21:50:16-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:50:16-05:00 INFO (6): Products: 123
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:50:16-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:50:16-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:50:17-05:00 INFO (6): Created 0 products
2017-03-29T21:50:17-05:00 INFO (6): Created 0 preferences
2017-03-29T21:50:17-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:50:17-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:50:17-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:50:17-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:50:17-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:50:17-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:50:17-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:50:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:50:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:22-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:50:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:50:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:29-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:50:29-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:50:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:50:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:50:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:50:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:50:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:50:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:50:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:50:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:35-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:50:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:50:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:50:37-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:51:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:51:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:51:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:51:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:37-05:00 INFO (6): Syncing DB.
2017-03-29T21:51:37-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:51:39-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:51:39-05:00 INFO (6): Customer: 46
2017-03-29T21:51:39-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:51:40-05:00 INFO (6): Products: 123
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:51:40-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:51:40-05:00 INFO (6): Created 0 products
2017-03-29T21:51:40-05:00 INFO (6): Created 0 preferences
2017-03-29T21:51:40-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:51:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:51:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:51:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:51:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:51:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:51:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:51:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:51:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:44-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:51:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:51:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:48-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:51:48-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:51:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:51:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:51:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:51:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:51:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:51:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:51:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:51:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:52-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:51:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:51:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:56-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:51:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:51:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:51:57-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:52:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:52:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:52:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:52:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:52:42-05:00 INFO (6): Syncing DB.
2017-03-29T21:52:42-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:52:44-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:52:44-05:00 INFO (6): Customer: 46
2017-03-29T21:52:44-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:52:44-05:00 INFO (6): Products: 123
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:52:44-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:52:44-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:52:45-05:00 INFO (6): Created 0 products
2017-03-29T21:52:45-05:00 INFO (6): Created 0 preferences
2017-03-29T21:52:45-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:52:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:52:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:52:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:52:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:52:45-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:52:45-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:52:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:52:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:52:57-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:52:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:52:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:52:59-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:53:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:53:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:01-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:53:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:53:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:02-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:53:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:53:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:06-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:53:06-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:53:06-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:53:06-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:53:06-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:53:06-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:53:06-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:53:06-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:53:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:53:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:12-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:53:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:53:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:53:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:53:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:53:27-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:58:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:58:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:58:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:58:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:20-05:00 INFO (6): Syncing DB.
2017-03-29T21:58:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:58:22-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:58:22-05:00 INFO (6): Customer: 46
2017-03-29T21:58:22-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:58:22-05:00 INFO (6): Products: 123
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:58:22-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:58:22-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:58:23-05:00 INFO (6): Created 0 products
2017-03-29T21:58:23-05:00 INFO (6): Created 0 preferences
2017-03-29T21:58:23-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:58:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:58:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:58:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:58:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:58:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:58:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:58:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:58:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:58:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:58:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:27-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:58:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:58:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T21:58:32-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:58:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:58:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:58:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:58:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:58:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T21:58:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:58:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:58:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:35-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:58:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:58:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:58:40-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:59:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T21:59:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T21:59:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T21:59:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:28-05:00 INFO (6): Syncing DB.
2017-03-29T21:59:28-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T21:59:30-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T21:59:30-05:00 INFO (6): Customer: 46
2017-03-29T21:59:30-05:00 INFO (6): Preferences by user: 123
2017-03-29T21:59:30-05:00 INFO (6): Products: 123
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T21:59:30-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T21:59:30-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T21:59:31-05:00 INFO (6): Created 0 products
2017-03-29T21:59:31-05:00 INFO (6): Created 0 preferences
2017-03-29T21:59:31-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T21:59:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T21:59:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T21:59:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:59:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T21:59:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:59:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T21:59:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:59:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:51-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:59:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:59:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:51-05:00 INFO (6): product/checked called with type: select
2017-03-29T21:59:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:59:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:54-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T21:59:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T21:59:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T21:59:55-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T22:05:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:05:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:22-05:00 INFO (6): Syncing DB.
2017-03-29T22:05:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T22:05:23-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T22:05:24-05:00 INFO (6): Customer: 46
2017-03-29T22:05:24-05:00 INFO (6): Preferences by user: 123
2017-03-29T22:05:24-05:00 INFO (6): Products: 123
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T22:05:24-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T22:05:24-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T22:05:25-05:00 INFO (6): Created 0 products
2017-03-29T22:05:25-05:00 INFO (6): Created 0 preferences
2017-03-29T22:05:25-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:05:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:05:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:05:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:05:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:28-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:29-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:05:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:30-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:31-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:05:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:33-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:34-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:05:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:35-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:35-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:05:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T22:05:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:05:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:05:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:47-05:00 INFO (6): Syncing DB.
2017-03-29T22:05:47-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T22:05:49-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T22:05:49-05:00 INFO (6): Customer: 46
2017-03-29T22:05:49-05:00 INFO (6): Preferences by user: 123
2017-03-29T22:05:50-05:00 INFO (6): Products: 123
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T22:05:50-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T22:05:50-05:00 INFO (6): Created 0 products
2017-03-29T22:05:50-05:00 INFO (6): Created 0 preferences
2017-03-29T22:05:50-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:05:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:05:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:05:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:05:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:05:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:53-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:05:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:54-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:05:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:05:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:05:55-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:06:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:06:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:00-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T22:06:00-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:06:00-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:06:00-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:06:00-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:06:00-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:06:00-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T22:06:00-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:06:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:06-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:06:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:21-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:06:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:22-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:06:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:24-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:06:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:28-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:06:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:36-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:06:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:39-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:06:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:48-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:06:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:06:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:06:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:06:58-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:07:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T22:07:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:45-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:07:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:07:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:07:46-05:00 INFO (6): Syncing DB.
2017-03-29T22:07:46-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T22:07:48-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T22:07:48-05:00 INFO (6): Customer: 46
2017-03-29T22:07:48-05:00 INFO (6): Preferences by user: 123
2017-03-29T22:07:48-05:00 INFO (6): Products: 123
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T22:07:48-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T22:07:48-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T22:07:49-05:00 INFO (6): Created 0 products
2017-03-29T22:07:49-05:00 INFO (6): Created 0 preferences
2017-03-29T22:07:49-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:07:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:07:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:07:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:07:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:07:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:07:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:07:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:07:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:07:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:07:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:07:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:07:53-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:07:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:07:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:07:57-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T22:07:57-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:07:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:07:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:07:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:07:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:07:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T22:07:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:08:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:01-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:07-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:08:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:09-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:10-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:12-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:14-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:16-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:08:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:08:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:08:18-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:09:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T22:09:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:39-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:09:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:09:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:40-05:00 INFO (6): Syncing DB.
2017-03-29T22:09:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T22:09:42-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T22:09:42-05:00 INFO (6): Customer: 46
2017-03-29T22:09:42-05:00 INFO (6): Preferences by user: 123
2017-03-29T22:09:43-05:00 INFO (6): Products: 123
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T22:09:43-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T22:09:43-05:00 INFO (6): Created 0 products
2017-03-29T22:09:43-05:00 INFO (6): Created 0 preferences
2017-03-29T22:09:43-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:09:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:09:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:09:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:09:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:09:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:09:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:09:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:09:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:47-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:09:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:09:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:48-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:09:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:09:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-29T22:09:53-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:09:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:09:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:09:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:09:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:09:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-29T22:09:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:09:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:09:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:56-05:00 INFO (6): product/checked called with type: select
2017-03-29T22:09:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:09:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:09:57-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:13:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-29T22:13:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-29T22:13:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-29T22:13:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:13:27-05:00 INFO (6): Syncing DB.
2017-03-29T22:13:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-29T22:13:29-05:00 INFO (6): Web Service (Products) #: 135
2017-03-29T22:13:29-05:00 INFO (6): Customer: 46
2017-03-29T22:13:29-05:00 INFO (6): Preferences by user: 123
2017-03-29T22:13:30-05:00 INFO (6): Products: 123
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-29T22:13:30-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-29T22:13:30-05:00 INFO (6): Created 0 products
2017-03-29T22:13:30-05:00 INFO (6): Created 0 preferences
2017-03-29T22:13:30-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-29T22:13:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-29T22:13:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-29T22:13:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:13:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-29T22:13:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:13:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-29T22:13:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:13:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:13:33-05:00 INFO (6): product/checked called with type: deselect
2017-03-29T22:13:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-29T22:13:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-29T22:13:34-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:20:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:20:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:20:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:09-05:00 INFO (6): Syncing DB.
2017-03-30T10:20:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:20:11-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:20:11-05:00 INFO (6): Customer: 46
2017-03-30T10:20:11-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:20:11-05:00 INFO (6): Products: 123
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:20:11-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:20:11-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:20:12-05:00 INFO (6): Created 0 products
2017-03-30T10:20:12-05:00 INFO (6): Created 0 preferences
2017-03-30T10:20:12-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-30T10:20:12-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:20:12-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:20:12-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:20:12-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-30T10:20:12-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:20:12-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:20:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:20:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:17-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:20:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:20:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:20-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:20:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:20:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:20:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:20:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:20:56-05:00 INFO (6): Syncing DB.
2017-03-30T10:20:56-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:20:57-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:20:57-05:00 INFO (6): Customer: 46
2017-03-30T10:20:57-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:20:58-05:00 INFO (6): Products: 123
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:20:58-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:20:58-05:00 INFO (6): Created 0 products
2017-03-30T10:20:58-05:00 INFO (6): Created 0 preferences
2017-03-30T10:20:58-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-30T10:20:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:20:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:20:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:20:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-30T10:20:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:20:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:21:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:21:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:21:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:21:25-05:00 INFO (6): Syncing DB.
2017-03-30T10:21:25-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:21:27-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:21:27-05:00 INFO (6): Customer: 46
2017-03-30T10:21:27-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:21:27-05:00 INFO (6): Products: 123
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:21:27-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:21:27-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:21:28-05:00 INFO (6): Created 0 products
2017-03-30T10:21:28-05:00 INFO (6): Created 0 preferences
2017-03-30T10:21:28-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-30T10:21:28-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:21:28-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:21:28-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:28-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-30T10:21:28-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:28-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:21:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:21:34-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:21:34-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-30T10:21:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:21:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:21:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-30T10:21:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:21:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:21:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:21:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:21:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:21:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:21:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:21:46-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:22:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:22:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:22:57-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:22:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:22:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:22:58-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:23:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:23:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:23:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:23:01-05:00 INFO (6): LIMIT = LIMIT 0, 250
2017-03-30T10:23:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:23:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:23:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:23:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 250
2017-03-30T10:23:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:23:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:23:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:23:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:23:04-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:23:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:23:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:23:05-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:23:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:23:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:23:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:23:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:23:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:23:08-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:24:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:24:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:24:12-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:24:12-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:24:12-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:24:12-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:24:12-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:24:12-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:24:12-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:24:12-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:24:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:24:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:24:16-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:24:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:24:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:24:17-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:24:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:24:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:24:19-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:24:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:24:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:24:20-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:26:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:26:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:26:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:26:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:22-05:00 INFO (6): Syncing DB.
2017-03-30T10:26:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:26:24-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:26:24-05:00 INFO (6): Customer: 46
2017-03-30T10:26:24-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:26:24-05:00 INFO (6): Products: 123
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:26:24-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:26:24-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:26:25-05:00 INFO (6): Created 0 products
2017-03-30T10:26:25-05:00 INFO (6): Created 0 preferences
2017-03-30T10:26:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:26:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:26:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:26:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:26:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:26:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:26:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:26:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:26:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:28-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:26:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:26:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:30-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:26:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:26:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:39-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:26:39-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:26:39-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:26:39-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:26:39-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:26:39-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:26:39-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:26:39-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:26:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:26:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:43-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:26:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:26:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:45-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:26:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:26:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:26:47-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:27:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:12-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:27:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:16-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:27:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:18-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:27:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:21-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:27:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:22-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:27:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:29-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:27:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:27:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:27:30-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:28:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:28:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:28:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:28:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:28:53-05:00 INFO (6): Syncing DB.
2017-03-30T10:28:53-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:28:55-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:28:55-05:00 INFO (6): Customer: 46
2017-03-30T10:28:55-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:28:55-05:00 INFO (6): Products: 123
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:28:55-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:28:55-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:28:56-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:28:56-05:00 INFO (6): Created 0 products
2017-03-30T10:28:56-05:00 INFO (6): Created 0 preferences
2017-03-30T10:28:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:28:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:28:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:28:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:28:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:28:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:28:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:29:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:00-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:29:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:29:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:03-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:29:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:29:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:29:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:29:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:09-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:29:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:29:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:29:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:29:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:20-05:00 INFO (6): Syncing DB.
2017-03-30T10:29:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:29:22-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:29:22-05:00 INFO (6): Customer: 46
2017-03-30T10:29:22-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:29:22-05:00 INFO (6): Products: 123
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:29:23-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:29:23-05:00 INFO (6): Created 0 products
2017-03-30T10:29:23-05:00 INFO (6): Created 0 preferences
2017-03-30T10:29:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:29:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:29:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:29:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:29:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:29:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:29:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:29:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:29:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:29:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:29:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:29:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:29:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:29:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:29:35-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:30:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:30:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:30:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:30:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:30:41-05:00 INFO (6): Syncing DB.
2017-03-30T10:30:41-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:30:42-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:30:43-05:00 INFO (6): Customer: 46
2017-03-30T10:30:43-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:30:43-05:00 INFO (6): Products: 123
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:30:43-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:30:43-05:00 INFO (6): Created 0 products
2017-03-30T10:30:43-05:00 INFO (6): Created 0 preferences
2017-03-30T10:30:43-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:30:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:30:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:30:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:30:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:30:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:30:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:30:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:30:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:30:49-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:30:49-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:30:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:30:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:30:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:30:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:30:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:30:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:30:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:30:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:30:51-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:30:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:30:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:30:54-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:31:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:00-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:31:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:05-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:31:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: override
2017-03-30T10:31:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:19-05:00 ERR (3): Argument 4 passed to Application\Controller\ProductController::editCreateOrDeleteOverridePrice() must be an instance of Application\Entity\Product, null given, called in /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php on line 92 and defined {"type":"ERROR","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php","line":897,"reference":"302bd6","uri":"https://ffmpricing.localhost/product/override","request":"POST https://ffmpricing.localhost/product/override HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/plain, */*\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/46\r\nX-Requested-With: XMLHttpRequest\r\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\r\nContent-Length: 79\r\nConnection: keep-alive\r\n\r\nid=&product_id=A9&overrideprice=&sales_attr_id=183&customer_id=46&scenario=edit","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca","trace":"\n\n"}
2017-03-30T10:31:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:23-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:31:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:25-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:31:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:31:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:38-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:31:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:31:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:40-05:00 INFO (6): Syncing DB.
2017-03-30T10:31:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:31:41-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:31:42-05:00 INFO (6): Customer: 46
2017-03-30T10:31:42-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:31:42-05:00 INFO (6): Products: 123
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:31:42-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:31:42-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:31:43-05:00 INFO (6): Created 0 products
2017-03-30T10:31:43-05:00 INFO (6): Created 0 preferences
2017-03-30T10:31:43-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:31:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:31:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:31:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:31:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:46-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:31:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:31:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:47-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:31:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:31:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:31:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:31:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:31:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:31:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:54-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:31:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:31:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:31:54-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:31:54-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:31:54-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:31:54-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:31:54-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:54-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:31:54-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:31:54-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:32:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:32:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:32:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:33-05:00 INFO (6): Syncing DB.
2017-03-30T10:32:33-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:32:35-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:32:35-05:00 INFO (6): Customer: 46
2017-03-30T10:32:35-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:32:35-05:00 INFO (6): Products: 123
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:32:35-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:32:35-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:32:36-05:00 INFO (6): Created 0 products
2017-03-30T10:32:36-05:00 INFO (6): Created 0 preferences
2017-03-30T10:32:36-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:32:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:32:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:32:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:32:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:32:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:39-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:32:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:32:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:32:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:32:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:32:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:32:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:47-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:32:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:32:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:32:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:32:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:32:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:32:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:32:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:32:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:32:51-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:33:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:33:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:33:00-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:42:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:42:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:42:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:42:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:07-05:00 INFO (6): Syncing DB.
2017-03-30T10:42:07-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:42:09-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:42:09-05:00 INFO (6): Customer: 46
2017-03-30T10:42:09-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:42:10-05:00 INFO (6): Products: 123
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:42:10-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:42:10-05:00 INFO (6): Created 0 products
2017-03-30T10:42:10-05:00 INFO (6): Created 0 preferences
2017-03-30T10:42:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:42:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:42:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:42:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:42:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:42:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:42:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:42:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:15-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:42:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:17-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:42:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:19-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:42:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:22-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:42:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:42:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:26-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:42:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:42:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:42:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:42:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:42:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:42:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:42:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:42:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:32-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:42:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:38-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:42:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:42:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:42:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:42:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:46:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:46:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:46:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:46:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:12-05:00 INFO (6): Syncing DB.
2017-03-30T10:46:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:46:14-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:46:14-05:00 INFO (6): Customer: 46
2017-03-30T10:46:14-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:46:14-05:00 INFO (6): Products: 123
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:46:14-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:46:14-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:46:15-05:00 INFO (6): Created 0 products
2017-03-30T10:46:15-05:00 INFO (6): Created 0 preferences
2017-03-30T10:46:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:46:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:46:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:46:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:46:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:46:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:46:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:46:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:46:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:18-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:46:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:46:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:44-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:46:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:46:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:45-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:46:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:46:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:48-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:46:48-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:46:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:46:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:46:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:46:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:46:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:46:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:46:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:46:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:53-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:46:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:46:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:46:54-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:47:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:01-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:47:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:02-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:47:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:47:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:47:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:47:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:13-05:00 INFO (6): Syncing DB.
2017-03-30T10:47:13-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:47:15-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:47:15-05:00 INFO (6): Customer: 46
2017-03-30T10:47:15-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:47:15-05:00 INFO (6): Products: 123
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:47:15-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:47:15-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:47:16-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:47:16-05:00 INFO (6): Created 0 products
2017-03-30T10:47:16-05:00 INFO (6): Created 0 preferences
2017-03-30T10:47:16-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:47:16-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:47:16-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:47:16-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:47:16-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:47:16-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:47:16-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:47:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:19-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:47:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:20-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:47:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:22-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:47:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:23-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:47:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:47:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:28-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:47:28-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:47:28-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:47:28-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:47:28-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:47:28-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:47:28-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:47:28-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:47:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:47:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:47:32-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:48:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:07-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:48:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:13-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:48:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:16-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:48:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:17-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:48:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:17-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:48:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:21-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:48:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:25-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:48:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:48:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:48:28-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:50:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:50:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:32-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:50:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:50:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:33-05:00 INFO (6): Syncing DB.
2017-03-30T10:50:33-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:50:35-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:50:35-05:00 INFO (6): Customer: 46
2017-03-30T10:50:35-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:50:35-05:00 INFO (6): Products: 123
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:50:35-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:50:35-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:50:36-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:50:36-05:00 INFO (6): Created 0 products
2017-03-30T10:50:36-05:00 INFO (6): Created 0 preferences
2017-03-30T10:50:36-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:50:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:50:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:50:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:50:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:50:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:50:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:50:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:50:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:50:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:50:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:50:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:50:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:56-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:50:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:50:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:50:57-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:51:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:51:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:04-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:51:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:51:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:51:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:51:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:51:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:51:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:51:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:51:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:11-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:51:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:15-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:51:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:19-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:51:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:21-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:51:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:31-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:51:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:44-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:51:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:52-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:51:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:51:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:51:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:53:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:53:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:56-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:53:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:53:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:53:57-05:00 INFO (6): Syncing DB.
2017-03-30T10:53:57-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:53:59-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:53:59-05:00 INFO (6): Customer: 46
2017-03-30T10:53:59-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:53:59-05:00 INFO (6): Products: 123
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:53:59-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:53:59-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:54:00-05:00 INFO (6): Created 0 products
2017-03-30T10:54:00-05:00 INFO (6): Created 0 preferences
2017-03-30T10:54:00-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:54:00-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:54:00-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:54:00-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:00-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:54:00-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:00-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:03-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:54:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:04-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:54:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:05-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:54:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:06-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:54:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:54:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:54:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:11-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:54:11-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:54:11-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:54:11-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:54:11-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:11-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:54:11-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:54:11-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:17-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:54:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:23-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:54:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:54:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:54:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:54:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:45-05:00 INFO (6): Syncing DB.
2017-03-30T10:54:45-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:54:47-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:54:47-05:00 INFO (6): Customer: 46
2017-03-30T10:54:47-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:54:47-05:00 INFO (6): Products: 123
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:54:47-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:54:47-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:54:48-05:00 INFO (6): Created 0 products
2017-03-30T10:54:48-05:00 INFO (6): Created 0 preferences
2017-03-30T10:54:48-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:54:48-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:54:48-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:54:48-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:48-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:54:48-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:48-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:54:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:51-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T10:54:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:54:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:54:58-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T10:54:58-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:54:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:54:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:54:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:54:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:54:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T10:54:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:55:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:55:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:55:01-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:59:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:59:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:59:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:20-05:00 INFO (6): Syncing DB.
2017-03-30T10:59:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:59:21-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:59:21-05:00 INFO (6): Customer: 46
2017-03-30T10:59:22-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:59:22-05:00 INFO (6): Products: 123
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:59:22-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:59:22-05:00 INFO (6): Created 0 products
2017-03-30T10:59:22-05:00 INFO (6): Created 0 preferences
2017-03-30T10:59:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:59:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:59:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:59:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:59:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T10:59:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:48-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T10:59:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T10:59:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:49-05:00 INFO (6): Syncing DB.
2017-03-30T10:59:49-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T10:59:51-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T10:59:51-05:00 INFO (6): Customer: 46
2017-03-30T10:59:51-05:00 INFO (6): Preferences by user: 123
2017-03-30T10:59:51-05:00 INFO (6): Products: 123
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T10:59:51-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T10:59:51-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T10:59:52-05:00 INFO (6): Created 0 products
2017-03-30T10:59:52-05:00 INFO (6): Created 0 preferences
2017-03-30T10:59:52-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T10:59:52-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T10:59:52-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T10:59:52-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:52-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T10:59:52-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:52-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T10:59:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:59:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:55-05:00 INFO (6): product/checked called with type: select
2017-03-30T10:59:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T10:59:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T10:59:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:00:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:00:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:00:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T11:00:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:00:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:00:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:00:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:00:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:00:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T11:00:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:00:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:00:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:00:04-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:05:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:05:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:05:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:05:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:42-05:00 INFO (6): Syncing DB.
2017-03-30T11:05:42-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:05:43-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:05:43-05:00 INFO (6): Customer: 46
2017-03-30T11:05:44-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:05:44-05:00 INFO (6): Products: 123
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:05:44-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:05:44-05:00 INFO (6): Created 0 products
2017-03-30T11:05:44-05:00 INFO (6): Created 0 preferences
2017-03-30T11:05:44-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:05:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:05:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:05:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:05:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:05:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:05:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:05:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:05:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:47-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:05:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:05:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:51-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:05:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:05:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:52-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:05:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:05:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:05:58-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T11:05:58-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:05:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:05:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:05:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:05:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:05:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T11:05:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:06:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:06:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:06:02-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:06:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:06:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:06:10-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:06:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:06:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:06:16-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:06:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:06:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:06:21-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:08:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:08:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:47-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:08:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:08:48-05:00 INFO (6): Syncing DB.
2017-03-30T11:08:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:08:49-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:08:49-05:00 INFO (6): Customer: 46
2017-03-30T11:08:50-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:08:50-05:00 INFO (6): Products: 123
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:08:50-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:08:50-05:00 INFO (6): Created 0 products
2017-03-30T11:08:50-05:00 INFO (6): Created 0 preferences
2017-03-30T11:08:50-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:08:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:08:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:08:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:08:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:08:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:08:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:08:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:08:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:08:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:08:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:08:59-05:00 INFO (6): Syncing DB.
2017-03-30T11:08:59-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:09:00-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:09:00-05:00 INFO (6): Customer: 46
2017-03-30T11:09:01-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:09:01-05:00 INFO (6): Products: 123
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:09:01-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:09:01-05:00 INFO (6): Created 0 products
2017-03-30T11:09:01-05:00 INFO (6): Created 0 preferences
2017-03-30T11:09:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:09:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:09:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:09:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:09:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:09:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:09:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:09:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:09:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:09:04-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:09:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:09:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:09:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:09:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:09:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:09:10-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:10:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:10:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:10:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:10:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:10:25-05:00 INFO (6): Syncing DB.
2017-03-30T11:10:25-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:10:26-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:10:26-05:00 INFO (6): Customer: 46
2017-03-30T11:10:27-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:10:27-05:00 INFO (6): Products: 123
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:10:27-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:10:27-05:00 INFO (6): Created 0 products
2017-03-30T11:10:27-05:00 INFO (6): Created 0 preferences
2017-03-30T11:10:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:10:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:10:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:10:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:10:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:10:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:10:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:10:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:10:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:10:51-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:11:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:11:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:11:02-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:11:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:11:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:11:05-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:11:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:11:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:11:06-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:11:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:11:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:11:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:20:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:20:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:20:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:20:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:27-05:00 INFO (6): Syncing DB.
2017-03-30T11:20:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:20:29-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:20:29-05:00 INFO (6): Customer: 46
2017-03-30T11:20:29-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:20:29-05:00 INFO (6): Products: 123
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:20:29-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:20:29-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:20:30-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:20:30-05:00 INFO (6): Created 0 products
2017-03-30T11:20:30-05:00 INFO (6): Created 0 preferences
2017-03-30T11:20:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:20:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:20:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:20:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:20:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:20:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:20:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:20:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:35-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:20:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:41-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:20:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:48-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:20:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:50-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:20:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:52-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:20:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:55-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:20:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:20:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:20:57-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:21:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:21:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:21:00-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:21:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:21:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:21:02-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:21:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:21:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:22:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:07-05:00 INFO (6): Syncing DB.
2017-03-30T11:22:07-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:22:09-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:22:09-05:00 INFO (6): Customer: 46
2017-03-30T11:22:09-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:22:09-05:00 INFO (6): Products: 123
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:22:09-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:22:09-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:22:10-05:00 INFO (6): Created 0 products
2017-03-30T11:22:10-05:00 INFO (6): Created 0 preferences
2017-03-30T11:22:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:22:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:22:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:22:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:22:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:22:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:22:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:22:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:22:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:13-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:22:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:22:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:14-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:22:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:22:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:22:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:22:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:22:29-05:00 INFO (6): Syncing DB.
2017-03-30T11:22:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:22:31-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:22:31-05:00 INFO (6): Customer: 46
2017-03-30T11:22:31-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:22:32-05:00 INFO (6): Products: 123
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:22:32-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:22:32-05:00 INFO (6): Created 0 products
2017-03-30T11:22:32-05:00 INFO (6): Created 0 preferences
2017-03-30T11:22:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:22:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:22:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:22:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:22:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:22:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:22:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:23:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:10-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:23:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:11-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:23:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:43-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:23:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:46-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:23:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:49-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:23:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:52-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:23:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:23:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:23:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:24:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:24:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:24:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:24:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:30-05:00 INFO (6): Syncing DB.
2017-03-30T11:24:30-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:24:32-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:24:32-05:00 INFO (6): Customer: 46
2017-03-30T11:24:32-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:24:32-05:00 INFO (6): Products: 123
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:24:32-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:24:32-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:24:32-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:24:33-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:24:33-05:00 INFO (6): Created 0 products
2017-03-30T11:24:33-05:00 INFO (6): Created 0 preferences
2017-03-30T11:24:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:24:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:24:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:24:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:24:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:24:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:24:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:24:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:24:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:36-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:24:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:24:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:37-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:24:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:24:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:24:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:24:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:24:42-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:26:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T11:26:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:11-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T11:26:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:26:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:12-05:00 INFO (6): Syncing DB.
2017-03-30T11:26:12-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T11:26:14-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T11:26:14-05:00 INFO (6): Customer: 46
2017-03-30T11:26:14-05:00 INFO (6): Preferences by user: 123
2017-03-30T11:26:14-05:00 INFO (6): Products: 123
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T11:26:14-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T11:26:14-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T11:26:14-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T11:26:15-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T11:26:15-05:00 INFO (6): Created 0 products
2017-03-30T11:26:15-05:00 INFO (6): Created 0 preferences
2017-03-30T11:26:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:26:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:26:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:26:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:26:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:26:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:26:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:26:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:19-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:26:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:21-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:26:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:23-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:26:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:24-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:26:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:26:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:27-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:26:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T11:26:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:30-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T11:26:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T11:26:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T11:26:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T11:26:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:26:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T11:26:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T11:26:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T11:26:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:33-05:00 INFO (6): product/checked called with type: select
2017-03-30T11:26:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:38-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T11:26:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T11:26:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T11:26:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:22:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:22:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:22:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:22:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:22:31-05:00 INFO (6): Syncing DB.
2017-03-30T13:22:31-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:22:33-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:22:33-05:00 INFO (6): Customer: 46
2017-03-30T13:22:33-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:22:33-05:00 INFO (6): Products: 123
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:22:33-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:22:33-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:22:34-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:22:34-05:00 INFO (6): Created 0 products
2017-03-30T13:22:34-05:00 INFO (6): Created 0 preferences
2017-03-30T13:22:34-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:22:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:22:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:22:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:22:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:22:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:22:34-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:22:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:22:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:22:38-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:22:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:22:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:22:41-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:23:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:23:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:23:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:23:11-05:00 INFO (6): Syncing DB.
2017-03-30T13:23:11-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:23:13-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:23:13-05:00 INFO (6): Customer: 46
2017-03-30T13:23:13-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:23:13-05:00 INFO (6): Products: 123
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:23:13-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:23:13-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:23:14-05:00 INFO (6): Created 0 products
2017-03-30T13:23:14-05:00 INFO (6): Created 0 preferences
2017-03-30T13:23:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:23:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:23:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:23:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:23:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:23:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:23:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:23:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:23:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:23:16-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:23:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:23:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:23:17-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:23:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:23:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:23:59-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:24:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:24:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:00-05:00 INFO (6): Syncing DB.
2017-03-30T13:24:00-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:24:02-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:24:02-05:00 INFO (6): Customer: 46
2017-03-30T13:24:02-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:24:02-05:00 INFO (6): Products: 123
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:24:02-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:24:02-05:00 INFO (6): Created 0 products
2017-03-30T13:24:02-05:00 INFO (6): Created 0 preferences
2017-03-30T13:24:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:24:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:24:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:24:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:24:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:24:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:24:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:24:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:06-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:24:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:08-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:24:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:11-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:24:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:11-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:24:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:24:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:16-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:24:16-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:24:16-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:24:16-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:24:16-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:24:16-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:24:16-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:24:16-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:24:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:19-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:24:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:23-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:24:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:37-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:24:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:39-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:24:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:24:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:42-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:24:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:24:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:24:43-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:29:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:29:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:29:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:29:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:11-05:00 INFO (6): Syncing DB.
2017-03-30T13:29:11-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:29:13-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:29:13-05:00 INFO (6): Customer: 46
2017-03-30T13:29:13-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:29:13-05:00 INFO (6): Products: 123
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:29:13-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:29:13-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:29:14-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:29:14-05:00 INFO (6): Created 0 products
2017-03-30T13:29:14-05:00 INFO (6): Created 0 preferences
2017-03-30T13:29:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:29:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:29:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:29:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:29:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:29:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:29:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:29:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:25-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:29:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:28-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:29:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:30-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:29:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:31-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:29:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:29:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:38-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:29:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:29:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:29:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:29:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:29:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:29:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:29:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:29:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:49-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:29:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:29:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:29:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:30:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:30:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:37-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:30:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:30:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:30:38-05:00 INFO (6): Syncing DB.
2017-03-30T13:30:38-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:30:39-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:30:39-05:00 INFO (6): Customer: 46
2017-03-30T13:30:40-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:30:40-05:00 INFO (6): Products: 123
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:30:40-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:30:40-05:00 INFO (6): Created 0 products
2017-03-30T13:30:40-05:00 INFO (6): Created 0 preferences
2017-03-30T13:30:40-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:30:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:30:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:30:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:30:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:30:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:30:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:30:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:30:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:30:46-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:30:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:30:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:30:47-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:30:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:30:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:30:53-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:30:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:30:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:30:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:30:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:30:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`saturdayenabled` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`id` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:30:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`saturdayenabled` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`id` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:30:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:31:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:01-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:31:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:31:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:07-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:31:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:31:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:31:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:31:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:42-05:00 INFO (6): Syncing DB.
2017-03-30T13:31:42-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:31:44-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:31:44-05:00 INFO (6): Customer: 46
2017-03-30T13:31:44-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:31:44-05:00 INFO (6): Products: 123
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:31:44-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:31:44-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:31:45-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:31:45-05:00 INFO (6): Created 0 products
2017-03-30T13:31:45-05:00 INFO (6): Created 0 preferences
2017-03-30T13:31:45-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:31:45-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:31:45-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:31:45-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:45-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:31:45-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:45-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:31:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:50-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:31:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:31:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:51-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:31:51-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:31:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:31:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:31:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:31:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:31:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:54-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:31:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:31:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:31:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:31:55-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:31:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:31:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:31:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:31:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:31:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:32:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:32:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:23-05:00 INFO (6): Syncing DB.
2017-03-30T13:32:23-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:32:24-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:32:24-05:00 INFO (6): Customer: 46
2017-03-30T13:32:24-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:32:25-05:00 INFO (6): Products: 123
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:32:25-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:32:25-05:00 INFO (6): Created 0 products
2017-03-30T13:32:25-05:00 INFO (6): Created 0 preferences
2017-03-30T13:32:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:32:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:32:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:32:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:32:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:32:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:29-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:32:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:32:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:30-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:32:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:32:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:32:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:32:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:32:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:32:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:32:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:32:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:32:51-05:00 INFO (6): Syncing DB.
2017-03-30T13:32:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:32:53-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:32:53-05:00 INFO (6): Customer: 46
2017-03-30T13:32:53-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:32:53-05:00 INFO (6): Products: 123
2017-03-30T13:32:53-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:32:54-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:32:54-05:00 INFO (6): Created 0 products
2017-03-30T13:32:54-05:00 INFO (6): Created 0 preferences
2017-03-30T13:32:54-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:32:54-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:32:54-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:32:54-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:54-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:32:54-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:32:54-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:33:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:33:03-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:33:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:33:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:33:04-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:33:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:33:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:33:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:33:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:33:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:33:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:33:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:33:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:33:55-05:00 INFO (6): Syncing DB.
2017-03-30T13:33:55-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:33:57-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:33:57-05:00 INFO (6): Customer: 46
2017-03-30T13:33:57-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:33:57-05:00 INFO (6): Products: 123
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:33:57-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:33:57-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:33:58-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:33:58-05:00 INFO (6): Created 0 products
2017-03-30T13:33:58-05:00 INFO (6): Created 0 preferences
2017-03-30T13:33:58-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:33:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:33:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:33:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:33:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:33:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:34:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:34:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:34:01-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:34:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:34:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:34:04-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:34:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:34:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:34:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:34:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:34:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:34:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:34:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:34:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:34:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:34:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:34:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:34:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:34:13-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:37:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:37:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:37:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:37:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:37:35-05:00 INFO (6): Syncing DB.
2017-03-30T13:37:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:37:37-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:37:37-05:00 INFO (6): Customer: 46
2017-03-30T13:37:37-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:37:37-05:00 INFO (6): Products: 123
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:37:37-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:37:37-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:37:38-05:00 INFO (6): Created 0 products
2017-03-30T13:37:38-05:00 INFO (6): Created 0 preferences
2017-03-30T13:37:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:37:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:37:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:37:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:37:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:37:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:37:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:37:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:37:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:37:41-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:38:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:38:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:38:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:38:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:16-05:00 INFO (6): Syncing DB.
2017-03-30T13:38:16-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:38:18-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:38:18-05:00 INFO (6): Customer: 46
2017-03-30T13:38:18-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:38:18-05:00 INFO (6): Products: 123
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:38:18-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:38:18-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:38:19-05:00 INFO (6): Created 0 products
2017-03-30T13:38:19-05:00 INFO (6): Created 0 preferences
2017-03-30T13:38:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:38:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:38:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:38:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:38:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:38:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:38:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:38:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:38:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:22-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:38:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:38:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:25-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:38:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:38:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:38:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:38:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:38:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:38:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:38:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:38:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:38:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:38:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:38:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:38:35-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:39:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:39:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:39:19-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:39:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:39:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:39:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:39:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:39:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`wholesale` LIKE :binding_0 AND `products`.`status` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`wholesale` LIKE :binding_0 AND `added_product`.`status` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:39:19-05:00 ERR (3):  Error dispatching controller "Application\Controller\ProductController". Error was: "error-exception", Exception(SQLSTATE[42S22]: Column not found: 1054 Unknown column 'added_product.wholesale' in 'where clause'): #0 /u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(417): PDOStatement->execute()
#1 /u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(246): Application\Datatables\SSPUnion::sql_exec(Object(PDO), Array, '(SELECT        ...')
#2 /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php(429): Application\Datatables\SSPUnion::union(Array, Array, Array, Array, Array, 'SELECT         ...', '\n            SE...', 'SELECT count(pr...', 'SELECT count(it...', '`customer_produ...', '`added_product`...', Object(Zend\Log\Logger))
#3 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractActionController.php(78): Application\Controller\ProductController->productTableAction()
#4 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\Controller\AbstractActionController->onDispatch(Object(Zend\Mvc\MvcEvent))
#5 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent), Object(Closure))
#6 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractController.php(105): Zend\EventManager\EventManager->triggerEventUntil(Object(Closure), Object(Zend\Mvc\MvcEvent))
#7 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/DispatchListener.php(119): Zend\Mvc\Controller\AbstractController->dispatch(Object(Zend\Http\PhpEnvironment\Request), Object(Zend\Http\PhpEnvironment\Response))
#8 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\DispatchListener->onDispatch(Object(Zend\Mvc\MvcEvent))
#9 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent), Object(Closure))
#10 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(332): Zend\EventManager\EventManager->triggerEventUntil(Object(Closure), Object(Zend\Mvc\MvcEvent))
#11 /u/local/jasonpalmer/ffmpricing/public/index.php(40): Zend\Mvc\Application->run()
#12 {main}
2017-03-30T13:39:19-05:00 ERR (3):  Error dispatching controller "Application\Controller\ProductController". Error was: "error-exception", Exception(SQLSTATE[42S22]: Column not found: 1054 Unknown column 'added_product.wholesale' in 'where clause'): #0 /u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(417): PDOStatement->execute()
#1 /u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(246): Application\Datatables\SSPUnion::sql_exec(Object(PDO), Array, '(SELECT        ...')
#2 /u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php(429): Application\Datatables\SSPUnion::union(Array, Array, Array, Array, Array, 'SELECT         ...', '\n            SE...', 'SELECT count(pr...', 'SELECT count(it...', '`customer_produ...', '`added_product`...', Object(Zend\Log\Logger))
#3 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractActionController.php(78): Application\Controller\ProductController->productTableAction()
#4 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\Controller\AbstractActionController->onDispatch(Object(Zend\Mvc\MvcEvent))
#5 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent), Object(Closure))
#6 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractController.php(105): Zend\EventManager\EventManager->triggerEventUntil(Object(Closure), Object(Zend\Mvc\MvcEvent))
#7 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/DispatchListener.php(119): Zend\Mvc\Controller\AbstractController->dispatch(Object(Zend\Http\PhpEnvironment\Request), Object(Zend\Http\PhpEnvironment\Response))
#8 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\Mvc\DispatchListener->onDispatch(Object(Zend\Mvc\MvcEvent))
#9 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\EventManager\EventManager->triggerListeners(Object(Zend\Mvc\MvcEvent), Object(Closure))
#10 /u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(332): Zend\EventManager\EventManager->triggerEventUntil(Object(Closure), Object(Zend\Mvc\MvcEvent))
#11 /u/local/jasonpalmer/ffmpricing/public/index.php(40): Zend\Mvc\Application->run()
#12 {main}
2017-03-30T13:39:19-05:00 ERR (3): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'added_product.wholesale' in 'where clause' {"reference":"f2cb36","type":"DISPATCH","file":"/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php","line":417,"trace":"#1/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(417): PDOStatement->execute\n#2/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(417): Application\\Datatables\\SSPUnion::sql_exec\n#3/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php(246): Application\\Datatables\\SSPUnion::union\n#4/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php(429): Application\\Controller\\ProductController->productTableAction\n#5/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractActionController.php(78): Zend\\Mvc\\Controller\\AbstractActionController->onDispatch\n#6/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\\EventManager\\EventManager->triggerListeners\n#7/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\\EventManager\\EventManager->triggerEventUntil\n#8/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractController.php(105): Zend\\Mvc\\Controller\\AbstractController->dispatch\n#9/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/DispatchListener.php(119): Zend\\Mvc\\DispatchListener->onDispatch\n#10/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(322): Zend\\EventManager\\EventManager->triggerListeners\n#11/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php(179): Zend\\EventManager\\EventManager->triggerEventUntil\n#12/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php(332): Zend\\Mvc\\Application->run\n\n\n","xdebug":"<tr><th align='left' bgcolor='#f57900' colspan=\"5\"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> PDOException: SQLSTATE[42S22]: Column not found: 1054 Unknown column 'added_product.wholesale' in 'where clause' in /u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php on line <i>417</i></th></tr>\n<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>\n<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>\n<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0014</td><td bgcolor='#eeeeec' align='right'>265272</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/u/local/jasonpalmer/ffmpricing/public/index.php' bgcolor='#eeeeec'>.../index.php<b>:</b>0</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.2111</td><td bgcolor='#eeeeec' align='right'>8584560</td><td bgcolor='#eeeeec'>Zend\\Mvc\\Application->run(  )</td><td title='/u/local/jasonpalmer/ffmpricing/public/index.php' bgcolor='#eeeeec'>.../index.php<b>:</b>40</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>3</td><td bgcolor='#eeeeec' align='center'>0.2132</td><td bgcolor='#eeeeec' align='right'>8612112</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerEventUntil( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Application.php' bgcolor='#eeeeec'>.../Application.php<b>:</b>332</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>4</td><td bgcolor='#eeeeec' align='center'>0.2132</td><td bgcolor='#eeeeec' align='right'>8612112</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerListeners( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>179</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>5</td><td bgcolor='#eeeeec' align='center'>0.2133</td><td bgcolor='#eeeeec' align='right'>8614896</td><td bgcolor='#eeeeec'>Zend\\Mvc\\DispatchListener->onDispatch( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>322</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>6</td><td bgcolor='#eeeeec' align='center'>0.5106</td><td bgcolor='#eeeeec' align='right'>19241920</td><td bgcolor='#eeeeec'>Zend\\Mvc\\Controller\\AbstractController->dispatch( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/DispatchListener.php' bgcolor='#eeeeec'>.../DispatchListener.php<b>:</b>119</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>7</td><td bgcolor='#eeeeec' align='center'>0.5107</td><td bgcolor='#eeeeec' align='right'>19242360</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerEventUntil( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractController.php' bgcolor='#eeeeec'>.../AbstractController.php<b>:</b>105</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>8</td><td bgcolor='#eeeeec' align='center'>0.5107</td><td bgcolor='#eeeeec' align='right'>19242360</td><td bgcolor='#eeeeec'>Zend\\EventManager\\EventManager->triggerListeners( ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>179</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>9</td><td bgcolor='#eeeeec' align='center'>0.5533</td><td bgcolor='#eeeeec' align='right'>19563792</td><td bgcolor='#eeeeec'>Zend\\Mvc\\Controller\\AbstractActionController->onDispatch( ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-eventmanager/src/EventManager.php' bgcolor='#eeeeec'>.../EventManager.php<b>:</b>322</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>10</td><td bgcolor='#eeeeec' align='center'>0.5533</td><td bgcolor='#eeeeec' align='right'>19565104</td><td bgcolor='#eeeeec'>Application\\Controller\\ProductController->productTableAction(  )</td><td title='/u/local/jasonpalmer/ffmpricing/vendor/zendframework/zend-mvc/src/Controller/AbstractActionController.php' bgcolor='#eeeeec'>.../AbstractActionController.php<b>:</b>78</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>11</td><td bgcolor='#eeeeec' align='center'>0.5689</td><td bgcolor='#eeeeec' align='right'>19895904</td><td bgcolor='#eeeeec'>Application\\Datatables\\SSPUnion::union( ???, ???, ???, ???, ???, ???, ???, ???, ???, ???, ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/module/Application/src/Controller/ProductController.php' bgcolor='#eeeeec'>.../ProductController.php<b>:</b>429</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>12</td><td bgcolor='#eeeeec' align='center'>0.5755</td><td bgcolor='#eeeeec' align='right'>20014752</td><td bgcolor='#eeeeec'>Application\\Datatables\\SSPUnion::sql_exec( ???, ???, ??? )</td><td title='/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php' bgcolor='#eeeeec'>.../SSPUnion.php<b>:</b>246</td></tr>\n<tr><td bgcolor='#eeeeec' align='center'>13</td><td bgcolor='#eeeeec' align='center'>0.5756</td><td bgcolor='#eeeeec' align='right'>20022584</td><td bgcolor='#eeeeec'><a href='http://www.php.net/PDOStatement.execute' target='_new'>execute</a>\n(  )</td><td title='/u/local/jasonpalmer/ffmpricing/module/Application/src/Datatables/SSPUnion.php' bgcolor='#eeeeec'>.../SSPUnion.php<b>:</b>417</td></tr>\n","uri":"https://ffmpricing.localhost/product/product-table?zff_sync=0&zff_wholesale=5.75&zff_length=25&zff_status=1&zff_page=0&zff_sales_attr_id=183&zff_customer_id=46","request":"POST https://ffmpricing.localhost/product/product-table?zff_sync=0&zff_wholesale=5.75&zff_length=25&zff_status=1&zff_page=0&zff_sales_attr_id=183&zff_customer_id=46 HTTP/1.1\r\nCookie: PHPSESSID=b22fc05556d7745a3ac285597e8e25ca\r\nHost: ffmpricing.localhost\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0\r\nAccept: application/json, text/javascript, */*; q=0.01\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate, br\r\nReferer: https://ffmpricing.localhost/product/view/46\r\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\r\nX-Requested-With: XMLHttpRequest\r\nContent-Length: 2696\r\nConnection: keep-alive\r\n\r\njsonData=%5B%7B%22name%22%3A%22draw%22%2C%22value%22%3A1%7D%2C%7B%22name%22%3A%22columns%22%2C%22value%22%3A%5B%7B%22data%22%3A0%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Afalse%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A1%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A2%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A3%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A4%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A5%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A6%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A7%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A8%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A9%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A10%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A11%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A12%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Atrue%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%2C%7B%22data%22%3A13%2C%22name%22%3A%22%22%2C%22searchable%22%3Atrue%2C%22orderable%22%3Afalse%2C%22search%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%5D%7D%2C%7B%22name%22%3A%22order%22%2C%22value%22%3A%5B%7B%22column%22%3A2%2C%22dir%22%3A%22asc%22%7D%5D%7D%2C%7B%22name%22%3A%22start%22%2C%22value%22%3A0%7D%2C%7B%22name%22%3A%22length%22%2C%22value%22%3A10%7D%2C%7B%22name%22%3A%22search%22%2C%22value%22%3A%7B%22value%22%3A%22%22%2C%22regex%22%3Afalse%7D%7D%5D","ip":"::1","session_id":"b22fc05556d7745a3ac285597e8e25ca"}
2017-03-30T13:39:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:39:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:39:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:39:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:39:58-05:00 INFO (6): Syncing DB.
2017-03-30T13:39:58-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:40:00-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:40:00-05:00 INFO (6): Customer: 46
2017-03-30T13:40:00-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:40:01-05:00 INFO (6): Products: 123
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:40:01-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:40:01-05:00 INFO (6): Created 0 products
2017-03-30T13:40:01-05:00 INFO (6): Created 0 preferences
2017-03-30T13:40:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:40:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:40:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:40:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:40:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:40:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:40:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:40:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:40:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:40:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:40:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:40:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:40:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:40:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:40:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:40:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:40:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:40:17-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:40:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:40:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:40:41-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:40:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:40:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:40:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:40:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`saturdayenabled` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`id` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:40:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0 AND `products`.`saturdayenabled` LIKE :binding_1) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0 AND `added_product`.`id` LIKE :binding_1) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:40:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:40:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:40:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:40:51-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:45:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:45:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:45:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:45:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:45:51-05:00 INFO (6): Syncing DB.
2017-03-30T13:45:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:45:52-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:45:52-05:00 INFO (6): Customer: 46
2017-03-30T13:45:52-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:45:53-05:00 INFO (6): Products: 123
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:45:53-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:45:53-05:00 INFO (6): Created 0 products
2017-03-30T13:45:53-05:00 INFO (6): Created 0 preferences
2017-03-30T13:45:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:45:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:45:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:45:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:45:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:45:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:45:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:45:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:45:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:45:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:46:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:46:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:46:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:46:01-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:46:01-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:46:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:46:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:46:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:46:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:46:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:46:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:46:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:46:05-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:46:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:46:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:46:16-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:48:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:48:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:48:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:19-05:00 INFO (6): Syncing DB.
2017-03-30T13:48:19-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:48:21-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:48:21-05:00 INFO (6): Customer: 46
2017-03-30T13:48:21-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:48:21-05:00 INFO (6): Products: 123
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:48:21-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:48:21-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:48:22-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:48:22-05:00 INFO (6): Created 0 products
2017-03-30T13:48:22-05:00 INFO (6): Created 0 preferences
2017-03-30T13:48:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:25-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:48:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:26-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:48:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:30-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:48:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:48:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:35-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:48:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:35-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:48:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:41-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:48:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:42-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:48:42-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:42-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:42-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:42-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:42-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:42-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:42-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:48:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:51-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:48:51-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:48:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:48:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:48:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:48:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:48:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:48:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:48:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:48:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:48:59-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:49:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:03-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:11-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:49:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:15-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:18-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:49:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:20-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:49:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:49:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:49:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:32-05:00 INFO (6): Syncing DB.
2017-03-30T13:49:32-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:49:34-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:49:34-05:00 INFO (6): Customer: 46
2017-03-30T13:49:34-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:49:34-05:00 INFO (6): Products: 123
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:49:34-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:49:34-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:49:35-05:00 INFO (6): Created 0 products
2017-03-30T13:49:35-05:00 INFO (6): Created 0 preferences
2017-03-30T13:49:35-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:49:35-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:49:35-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:49:35-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:35-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:49:35-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:40-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:49:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:41-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:49:41-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:49:41-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:49:41-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:49:41-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:41-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:49:41-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:41-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:49:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:47-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:49:47-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:49:47-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:49:47-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:49:47-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:47-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:49:47-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T13:49:47-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:49:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:50-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:55-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:49:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:49:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:49:59-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:50:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:50:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:50:06-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:51:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:51:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:51:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:51:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:29-05:00 INFO (6): Syncing DB.
2017-03-30T13:51:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T13:51:31-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T13:51:31-05:00 INFO (6): Customer: 46
2017-03-30T13:51:31-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:51:31-05:00 INFO (6): Products: 123
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T13:51:31-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T13:51:31-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T13:51:32-05:00 INFO (6): Created 0 products
2017-03-30T13:51:32-05:00 INFO (6): Created 0 preferences
2017-03-30T13:51:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:51:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:51:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:51:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:51:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:51:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:33-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:51:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:51:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:51:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T13:51:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:51:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T13:51:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:51:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:38-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:51:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:51:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:44-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:51:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:51:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:50-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:51:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:51:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:51:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:52:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-30T13:52:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-30T13:52:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:03-05:00 INFO (6): Syncing DB.
2017-03-30T13:52:03-05:00 INFO (6): Querying Customers.
2017-03-30T13:52:03-05:00 INFO (6): Querying Customers.
2017-03-30T13:52:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-30T13:52:04-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-30T13:52:04-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-30T13:52:04-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-30T13:52:04-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-30T13:52:04-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-30T13:52:04-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-30T13:52:04-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-30T13:52:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:52:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:10-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:52:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:52:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:11-05:00 INFO (6): Syncing DB.
2017-03-30T13:52:11-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T13:52:12-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T13:52:12-05:00 INFO (6): Customer: 397
2017-03-30T13:52:12-05:00 INFO (6): Preferences by user: 123
2017-03-30T13:52:12-05:00 INFO (6): Products: 8
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 872, sku = 16768101, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 457, sku = 1679, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 30, sku = 1200002, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 707, sku = 2564, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 354, sku = 1070, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 797, sku = 2880, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:52:12-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 599, sku = 2199, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): Creating Product[ id = 350, sku = 1110, customer.company = Red Geranium Restaurant, customer.name = Troy Bartz]
2017-03-30T13:52:12-05:00 INFO (6): Creating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 23
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=23,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 31
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=31,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 37
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=37,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 41
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=41,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 43
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=43,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 49
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=49,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 62
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=62,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 73
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=73,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 76
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=76,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 77
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=77,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 90
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=90,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 93
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=93,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 94
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=94,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 95
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=95,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 100
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=100,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 105
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=105,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 111
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=111,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 126
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=126,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 133
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=133,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 141
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=141,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 142
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=142,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 146
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=146,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 159
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=159,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 188
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=188,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 192
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=192,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 209
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=209,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 215
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=215,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 217
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=217,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 220
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=220,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 223
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=223,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 226
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=226,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 236
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=236,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 237
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=237,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 239
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=239,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 244
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=244,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 250
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=250,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 252
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=252,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 257
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=257,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 268
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=268,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 283
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=283,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 284
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=284,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 288
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=288,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 301
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=301,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 329
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=329,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 336
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=336,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 362
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=362,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 370
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=370,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 382
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=382,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 385
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=385,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 434
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=434,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 435
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=435,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 450
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=450,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 451
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=451,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 454
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=454,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 464
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=464,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 479
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=479,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 485
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=485,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 496
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=496,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 525
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=525,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 543
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=543,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 563
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=563,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 564
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=564,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 573
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=573,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 581
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=581,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 597
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=597,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 611
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=611,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 626
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=626,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 640
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=640,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 641
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=641,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 664
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=664,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 679
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=679,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 705
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=705,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 721
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=721,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 729
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=729,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 742
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=742,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 750
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=750,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 754
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=754,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 755
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=755,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 759
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=759,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 794
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=794,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 799
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=799,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 813
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=813,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 823
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=823,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 841
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=841,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 910
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=910,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 916
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=916,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 918
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=918,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 920
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=920,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 928
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=928,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 947
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=947,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 952
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=952,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 956
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=956,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 958
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=958,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 967
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=967,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 968
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=968,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 977
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=977,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 978
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=978,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 990
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=990,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1001
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1001,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1021
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1021,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1041
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1041,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1048
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1048,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1050
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1050,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1146
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1146,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1164
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1164,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1170
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1170,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1178
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1178,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1204
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1204,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1216
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1216,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1265
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1265,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1277
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1277,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1292
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1292,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1300
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1300,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1325
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1325,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1334
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1334,user=cmetallo]
2017-03-30T13:52:12-05:00 INFO (6): find(type=json) not found = 1401
2017-03-30T13:52:12-05:00 INFO (6): Deleting Preference[product=1401,user=cmetallo]
2017-03-30T13:52:13-05:00 INFO (6): Created 8 products
2017-03-30T13:52:13-05:00 INFO (6): Created 9 preferences
2017-03-30T13:52:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:52:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:52:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:52:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:52:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:52:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:14-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:52:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:52:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:52:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:52:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:52:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:52:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:52:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:19-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:52:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:52:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:24-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:52:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:52:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:52:29-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:53:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T13:53:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T13:53:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:53:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:19-05:00 INFO (6): Syncing DB.
2017-03-30T13:53:19-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T13:53:20-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T13:53:20-05:00 INFO (6): Customer: 397
2017-03-30T13:53:20-05:00 INFO (6): Preferences by user: 16
2017-03-30T13:53:20-05:00 INFO (6): Products: 16
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T13:53:20-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T13:53:20-05:00 INFO (6): Created 0 products
2017-03-30T13:53:20-05:00 INFO (6): Created 0 preferences
2017-03-30T13:53:20-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:53:20-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:53:20-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:53:20-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:20-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:53:20-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:20-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:23-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:53:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:53:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:24-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:53:24-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:53:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:53:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:53:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:53:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:27-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:53:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:53:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:27-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:53:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:53:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:53:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:53:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:53:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:30-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:53:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:53:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:53:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:53:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:53:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:53:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:53:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T13:53:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:43-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T13:53:44-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T13:53:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T13:53:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T13:53:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T13:53:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T13:53:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T13:53:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:48-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:53:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:53:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:53:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:53:57-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T13:54:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:54:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:54:00-05:00 INFO (6): product/checked called with type: select
2017-03-30T13:54:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T13:54:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T13:54:04-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:12:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:12:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:50-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:12:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:12:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:12:51-05:00 INFO (6): Syncing DB.
2017-03-30T17:12:51-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:12:53-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:12:53-05:00 INFO (6): Customer: 397
2017-03-30T17:12:53-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:12:53-05:00 INFO (6): Products: 16
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:12:53-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:12:53-05:00 INFO (6): Created 0 products
2017-03-30T17:12:53-05:00 INFO (6): Created 0 preferences
2017-03-30T17:12:53-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:12:53-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:12:53-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:12:53-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:12:53-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:12:53-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:12:53-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:12:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:12:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:12:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:13:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:13:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:13:04-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:13:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:13:04-05:00 INFO (6): ORDER =
2017-03-30T17:13:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:13:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:13:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))  LIMIT 0, 25
2017-03-30T17:13:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:13:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:14:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:14:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:05-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:15:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:15:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:15:06-05:00 INFO (6): Syncing DB.
2017-03-30T17:15:06-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:15:07-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:15:07-05:00 INFO (6): Customer: 397
2017-03-30T17:15:07-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:15:07-05:00 INFO (6): Products: 16
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:15:07-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:15:07-05:00 INFO (6): Created 0 products
2017-03-30T17:15:07-05:00 INFO (6): Created 0 preferences
2017-03-30T17:15:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:15:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:15:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:15:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:15:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:15:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:15:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:15:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:15:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:15:10-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:15:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:15:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:15:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:15:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:15:15-05:00 INFO (6): ORDER =
2017-03-30T17:15:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:15:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:15:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))  LIMIT 0, 25
2017-03-30T17:15:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:15:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:20:11-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:20:11-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:20:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:20:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:20:20-05:00 INFO (6): Syncing DB.
2017-03-30T17:20:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:20:21-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:20:21-05:00 INFO (6): Customer: 397
2017-03-30T17:20:21-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:20:21-05:00 INFO (6): Products: 16
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:20:21-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:20:21-05:00 INFO (6): Created 0 products
2017-03-30T17:20:21-05:00 INFO (6): Created 0 preferences
2017-03-30T17:20:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:20:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:20:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:20:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:20:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:20:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:20:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:24:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:24:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:24:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:26-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:24:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:24:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:24:27-05:00 INFO (6): Syncing DB.
2017-03-30T17:24:27-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:24:29-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:24:29-05:00 INFO (6): Customer: 397
2017-03-30T17:24:29-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:24:29-05:00 INFO (6): Products: 16
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:24:29-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:24:29-05:00 INFO (6): Created 0 products
2017-03-30T17:24:29-05:00 INFO (6): Created 0 preferences
2017-03-30T17:24:29-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:24:29-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:24:29-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:24:29-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:24:29-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:24:29-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:24:29-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:29:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:29:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:30:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:30:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:03-05:00 INFO (6): Syncing DB.
2017-03-30T17:30:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:30:04-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:30:05-05:00 INFO (6): Customer: 397
2017-03-30T17:30:05-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:30:05-05:00 INFO (6): Products: 16
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:30:05-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:30:05-05:00 INFO (6): Created 0 products
2017-03-30T17:30:05-05:00 INFO (6): Created 0 preferences
2017-03-30T17:30:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:30:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:30:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:30:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:30:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:30:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:30:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:30:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:30:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:10-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:30:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:30:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:30:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:30:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:30:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:30:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:30:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:30:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:30:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:14-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:30:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:30:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:19-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:30:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:30:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:30:26-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:31:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:31:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:31:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:31:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:31:55-05:00 INFO (6): Syncing DB.
2017-03-30T17:31:55-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:31:56-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:31:56-05:00 INFO (6): Customer: 397
2017-03-30T17:31:56-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:31:56-05:00 INFO (6): Products: 16
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:31:56-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:31:56-05:00 INFO (6): Created 0 products
2017-03-30T17:31:56-05:00 INFO (6): Created 0 preferences
2017-03-30T17:31:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:31:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:31:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:31:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:31:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:31:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:31:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:31:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:31:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:31:59-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:32:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:32:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:32:03-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:32:03-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:32:03-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:32:03-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:32:03-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:32:03-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:32:03-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:32:03-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:32:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:32:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:32:05-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:32:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:32:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:32:09-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:36:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:36:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:21-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:36:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:36:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:36:23-05:00 INFO (6): Syncing DB.
2017-03-30T17:36:23-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:36:24-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:36:24-05:00 INFO (6): Customer: 397
2017-03-30T17:36:24-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:36:24-05:00 INFO (6): Products: 16
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:36:24-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:36:24-05:00 INFO (6): Created 0 products
2017-03-30T17:36:24-05:00 INFO (6): Created 0 preferences
2017-03-30T17:36:24-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:36:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:36:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:36:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:36:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:36:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:36:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:36:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:36:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:36:27-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:36:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:36:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:36:29-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:37:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:37:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:07-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:37:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:37:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:37:08-05:00 INFO (6): Syncing DB.
2017-03-30T17:37:08-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:37:09-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:37:09-05:00 INFO (6): Customer: 397
2017-03-30T17:37:09-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:37:09-05:00 INFO (6): Products: 16
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:37:09-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:37:09-05:00 INFO (6): Created 0 products
2017-03-30T17:37:09-05:00 INFO (6): Created 0 preferences
2017-03-30T17:37:09-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:37:09-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:37:09-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:37:09-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:37:09-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:37:09-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:37:09-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:37:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:37:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:37:12-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:37:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:37:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:37:15-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:37:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:37:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:37:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:37:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:37:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:37:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:37:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:48:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:48:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:49:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:49:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:07-05:00 INFO (6): Syncing DB.
2017-03-30T17:49:07-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:49:08-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:49:08-05:00 INFO (6): Customer: 397
2017-03-30T17:49:08-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:49:08-05:00 INFO (6): Products: 16
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:49:08-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:49:08-05:00 INFO (6): Created 0 products
2017-03-30T17:49:08-05:00 INFO (6): Created 0 preferences
2017-03-30T17:49:08-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:49:08-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:49:08-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:49:08-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:49:08-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:49:08-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:49:08-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:49:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:12-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:49:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:21-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:49:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:49:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:27-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:49:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:49:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:49:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:49:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:49:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:49:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:49:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:49:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:31-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:49:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:34-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:49:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:36-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:49:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:40-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:49:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:42-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:49:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:45-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T17:49:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:48-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T17:49:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:50-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T17:49:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:54-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T17:49:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:49:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:49:57-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T17:52:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:52:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:52:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:52:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:52:50-05:00 INFO (6): Syncing DB.
2017-03-30T17:52:50-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:52:51-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:52:51-05:00 INFO (6): Customer: 397
2017-03-30T17:52:51-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:52:51-05:00 INFO (6): Products: 16
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:52:51-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:52:51-05:00 INFO (6): Created 0 products
2017-03-30T17:52:51-05:00 INFO (6): Created 0 preferences
2017-03-30T17:52:51-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:52:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:52:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:52:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:52:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:52:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:52:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:56:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T17:56:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T17:56:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:56:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:56:48-05:00 INFO (6): Syncing DB.
2017-03-30T17:56:48-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T17:56:49-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T17:56:49-05:00 INFO (6): Customer: 397
2017-03-30T17:56:49-05:00 INFO (6): Preferences by user: 16
2017-03-30T17:56:49-05:00 INFO (6): Products: 16
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T17:56:49-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T17:56:49-05:00 INFO (6): Created 0 products
2017-03-30T17:56:49-05:00 INFO (6): Created 0 preferences
2017-03-30T17:56:49-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:56:49-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:56:49-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:56:49-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:56:49-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:56:49-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:56:49-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:56:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:56:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:56:52-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T17:56:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:56:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:56:54-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:56:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:56:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:56:57-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T17:57:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:57:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:57:00-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T17:57:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:57:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:57:08-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:57:08-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:57:08-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:57:08-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:57:08-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:57:08-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:57:08-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:57:08-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:57:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T17:57:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:57:19-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T17:57:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T17:57:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T17:57:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T17:57:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:57:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`productname` LIKE :binding_0 AND `products`.`status` LIKE :binding_1) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`productname` LIKE :binding_0 AND `added_product`.`status` LIKE :binding_1) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T17:57:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`productname` LIKE :binding_0 AND `products`.`status` LIKE :binding_1) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`productname` LIKE :binding_0 AND `added_product`.`status` LIKE :binding_1) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T17:57:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T17:57:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:57:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:57:24-05:00 INFO (6): product/checked called with type: select
2017-03-30T17:57:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T17:57:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T17:57:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:01:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:01:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:17-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:01:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:01:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:01:18-05:00 INFO (6): Syncing DB.
2017-03-30T18:01:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:01:19-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:01:19-05:00 INFO (6): Customer: 397
2017-03-30T18:01:19-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:01:19-05:00 INFO (6): Products: 16
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:01:19-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:01:19-05:00 INFO (6): Created 0 products
2017-03-30T18:01:19-05:00 INFO (6): Created 0 preferences
2017-03-30T18:01:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:01:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:01:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:01:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:01:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:01:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:01:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:01:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:01:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:01:24-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:01:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:01:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:01:27-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:01:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:01:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:01:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:01:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:01:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:01:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:01:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:01:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:01:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:01:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:04:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:04:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:04:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:04:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:04:25-05:00 INFO (6): Syncing DB.
2017-03-30T18:04:25-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:04:26-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:04:27-05:00 INFO (6): Customer: 397
2017-03-30T18:04:27-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:04:27-05:00 INFO (6): Products: 16
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:04:27-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:04:27-05:00 INFO (6): Created 0 products
2017-03-30T18:04:27-05:00 INFO (6): Created 0 preferences
2017-03-30T18:04:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:04:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:04:27-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:04:27-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:04:27-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:04:27-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:04:27-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:04:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:04:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:04:33-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:05:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:05:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:05:05-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:05:05-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:05:05-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:05:05-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:05:05-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:05:05-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:05:05-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:05:05-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:07:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:07:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:07:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:07:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:07:53-05:00 INFO (6): Syncing DB.
2017-03-30T18:07:53-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:07:54-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:07:55-05:00 INFO (6): Customer: 397
2017-03-30T18:07:55-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:07:55-05:00 INFO (6): Products: 16
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:07:55-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:07:55-05:00 INFO (6): Created 0 products
2017-03-30T18:07:55-05:00 INFO (6): Created 0 preferences
2017-03-30T18:07:55-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:07:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:07:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:07:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:07:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:07:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:07:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:07:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:07:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:07:58-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:08:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:08:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:27-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:08:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:08:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:29-05:00 INFO (6): Syncing DB.
2017-03-30T18:08:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:08:30-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:08:30-05:00 INFO (6): Customer: 397
2017-03-30T18:08:30-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:08:30-05:00 INFO (6): Products: 16
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:08:30-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:08:30-05:00 INFO (6): Created 0 products
2017-03-30T18:08:30-05:00 INFO (6): Created 0 preferences
2017-03-30T18:08:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:08:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:08:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:08:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:08:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:08:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:08:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:08:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:08:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:37-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:08:37-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:08:37-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:37-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:08:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:08:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:40-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:08:40-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:08:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:08:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:08:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:08:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:08:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:08:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:08:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:08:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:52-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:08:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:08:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:08:54-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:09:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:09:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:09:01-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:09:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:09:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:09:03-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:09:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:09:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:09:04-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:10:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:10:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:10:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:10:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:50-05:00 INFO (6): Syncing DB.
2017-03-30T18:10:50-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:10:51-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:10:51-05:00 INFO (6): Customer: 397
2017-03-30T18:10:51-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:10:51-05:00 INFO (6): Products: 16
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:10:51-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:10:51-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:10:52-05:00 INFO (6): Created 0 products
2017-03-30T18:10:52-05:00 INFO (6): Created 0 preferences
2017-03-30T18:10:52-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:10:52-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:10:52-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:10:52-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:10:52-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:10:52-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:10:52-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:10:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:10:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:54-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:10:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:10:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:55-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:10:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:10:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:57-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:10:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:10:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:10:59-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:11:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:11:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:11:04-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:11:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:11:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:11:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:11:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:11:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:11:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:11:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:11:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:11:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:04-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:12:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:12:06-05:00 INFO (6): Syncing DB.
2017-03-30T18:12:06-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:12:07-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:12:07-05:00 INFO (6): Customer: 397
2017-03-30T18:12:07-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:12:07-05:00 INFO (6): Products: 16
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:12:07-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:12:07-05:00 INFO (6): Created 0 products
2017-03-30T18:12:07-05:00 INFO (6): Created 0 preferences
2017-03-30T18:12:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:12:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:12:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:12:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:12:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:12:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:51-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:12:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:12:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:12:52-05:00 INFO (6): Syncing DB.
2017-03-30T18:12:52-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:12:54-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:12:54-05:00 INFO (6): Customer: 397
2017-03-30T18:12:54-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:12:54-05:00 INFO (6): Products: 16
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:12:54-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:12:54-05:00 INFO (6): Created 0 products
2017-03-30T18:12:54-05:00 INFO (6): Created 0 preferences
2017-03-30T18:12:54-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:12:54-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:12:54-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:12:54-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:54-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:12:54-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:54-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:12:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:12:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:12:59-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:13:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:13:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:13:00-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:13:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:13:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:13:04-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:13:04-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:13:04-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:13:04-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:13:04-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:13:04-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:13:04-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:13:04-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:15:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:15:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:15:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:15:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:15:30-05:00 INFO (6): Syncing DB.
2017-03-30T18:15:30-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:15:31-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:15:31-05:00 INFO (6): Customer: 397
2017-03-30T18:15:31-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:15:31-05:00 INFO (6): Products: 16
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:15:31-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:15:31-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:15:32-05:00 INFO (6): Created 0 products
2017-03-30T18:15:32-05:00 INFO (6): Created 0 preferences
2017-03-30T18:15:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:15:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:15:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:15:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:15:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:15:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:15:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:15:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:15:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:15:34-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:15:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:15:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:15:36-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:15:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:15:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:15:39-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:15:39-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:15:39-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:15:39-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:15:39-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:15:39-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:15:39-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:15:39-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:16:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:16:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:16:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:16:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:16:56-05:00 INFO (6): Syncing DB.
2017-03-30T18:16:56-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:16:58-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:16:58-05:00 INFO (6): Customer: 397
2017-03-30T18:16:58-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:16:58-05:00 INFO (6): Products: 16
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:16:58-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:16:58-05:00 INFO (6): Created 0 products
2017-03-30T18:16:58-05:00 INFO (6): Created 0 preferences
2017-03-30T18:16:58-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:16:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:16:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:16:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:16:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:16:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:16:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:17:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:17:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:17:03-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:17:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:17:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:17:07-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:17:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:17:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:17:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:17:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:17:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:17:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:17:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:17:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:17:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:17:10-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:18:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:18:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:18:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:18:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:18:22-05:00 INFO (6): Syncing DB.
2017-03-30T18:18:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:18:23-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:18:23-05:00 INFO (6): Customer: 397
2017-03-30T18:18:23-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:18:23-05:00 INFO (6): Products: 16
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:18:23-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:18:23-05:00 INFO (6): Created 0 products
2017-03-30T18:18:23-05:00 INFO (6): Created 0 preferences
2017-03-30T18:18:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:18:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:18:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:18:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:18:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:18:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:18:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:18:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:18:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:18:26-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:18:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:18:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:18:30-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:18:30-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:18:30-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:18:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:18:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:18:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:18:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:18:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:18:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:18:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:18:33-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:19:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:19:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:20-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:19:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:19:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:19:21-05:00 INFO (6): Syncing DB.
2017-03-30T18:19:21-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:19:22-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:19:22-05:00 INFO (6): Customer: 397
2017-03-30T18:19:22-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:19:22-05:00 INFO (6): Products: 16
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:19:22-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:19:22-05:00 INFO (6): Created 0 products
2017-03-30T18:19:22-05:00 INFO (6): Created 0 preferences
2017-03-30T18:19:22-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:19:22-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:19:22-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:19:22-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:19:22-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:19:22-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:19:22-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:19:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:19:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:19:25-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:19:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:19:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:19:29-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:19:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:19:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:19:33-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:19:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:19:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:19:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:19:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:19:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:19:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:19:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:22:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:22:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:16-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:22:17-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:22:17-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:17-05:00 INFO (6): Syncing DB.
2017-03-30T18:22:17-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:22:19-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:22:19-05:00 INFO (6): Customer: 397
2017-03-30T18:22:19-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:22:19-05:00 INFO (6): Products: 16
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:22:19-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:22:19-05:00 INFO (6): Created 0 products
2017-03-30T18:22:19-05:00 INFO (6): Created 0 preferences
2017-03-30T18:22:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:22:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:22:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:22:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:22:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:22:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:22:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:22:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:22:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:22-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:22:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:22:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:23-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:22:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:22:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:26-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:22:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:22:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:33-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:22:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:22:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:22:35-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:24:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:24:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:25-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:24:26-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:24:26-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:24:26-05:00 INFO (6): Syncing DB.
2017-03-30T18:24:26-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:24:27-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:24:27-05:00 INFO (6): Customer: 397
2017-03-30T18:24:27-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:24:27-05:00 INFO (6): Products: 16
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:24:27-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:24:27-05:00 INFO (6): Created 0 products
2017-03-30T18:24:27-05:00 INFO (6): Created 0 preferences
2017-03-30T18:24:27-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:24:27-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:24:28-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:24:28-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:24:28-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:24:28-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:24:28-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:24:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:24:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:24:30-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:24:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:24:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:24:33-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:24:33-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:24:33-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:24:33-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:24:33-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:24:33-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:24:33-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:24:33-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:26:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:26:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:49-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:26:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:26:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:26:50-05:00 INFO (6): Syncing DB.
2017-03-30T18:26:50-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:26:52-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:26:52-05:00 INFO (6): Customer: 397
2017-03-30T18:26:52-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:26:52-05:00 INFO (6): Products: 16
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:26:52-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:26:52-05:00 INFO (6): Created 0 products
2017-03-30T18:26:52-05:00 INFO (6): Created 0 preferences
2017-03-30T18:26:52-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:26:52-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:26:52-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:26:52-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:26:52-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:26:52-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:26:52-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:26:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:26:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:26:54-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:26:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:26:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:26:57-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:26:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:26:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:26:58-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:27:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:27:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:27:02-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:27:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:27:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:27:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:27:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:27:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:27:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:27:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:30:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:30:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:08-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:30:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:30:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:09-05:00 INFO (6): Syncing DB.
2017-03-30T18:30:09-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:30:10-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:30:10-05:00 INFO (6): Customer: 397
2017-03-30T18:30:10-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:30:10-05:00 INFO (6): Products: 16
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:30:10-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:30:10-05:00 INFO (6): Created 0 products
2017-03-30T18:30:10-05:00 INFO (6): Created 0 preferences
2017-03-30T18:30:10-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:30:10-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:30:10-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:30:10-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:30:10-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:30:10-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:30:10-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:30:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:30:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:13-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:30:15-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:30:15-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:15-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:30:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:30:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:16-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:30:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:30:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:30:21-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:30:21-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:30:21-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:30:21-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:30:21-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:30:21-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:30:21-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:30:21-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:31:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:31:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:31:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:31:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:31:23-05:00 INFO (6): Syncing DB.
2017-03-30T18:31:23-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:31:25-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:31:25-05:00 INFO (6): Customer: 397
2017-03-30T18:31:25-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:31:25-05:00 INFO (6): Products: 16
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:31:25-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:31:25-05:00 INFO (6): Created 0 products
2017-03-30T18:31:25-05:00 INFO (6): Created 0 preferences
2017-03-30T18:31:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:31:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:31:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:31:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:31:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:31:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:31:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:31:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:31:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:31:28-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:31:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:31:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:31:32-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:31:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:31:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:31:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:31:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:31:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:31:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:31:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:32:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:32:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:32:18-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:32:18-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:32:18-05:00 INFO (6): Syncing DB.
2017-03-30T18:32:18-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:32:19-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:32:19-05:00 INFO (6): Customer: 397
2017-03-30T18:32:19-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:32:19-05:00 INFO (6): Products: 16
2017-03-30T18:32:19-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:32:19-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:32:19-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:32:19-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:32:19-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:32:19-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:32:19-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:32:19-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:32:19-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:32:19-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:32:20-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:32:20-05:00 INFO (6): Created 0 products
2017-03-30T18:32:20-05:00 INFO (6): Created 0 preferences
2017-03-30T18:32:20-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:32:20-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:32:20-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:32:20-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:32:20-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:32:20-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:32:20-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:32:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:32:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:32:24-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:32:24-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:32:24-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:32:24-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:32:24-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:32:24-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:32:24-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:32:24-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:21-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:36:21-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:28-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:36:29-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:36:29-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:29-05:00 INFO (6): Syncing DB.
2017-03-30T18:36:29-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:36:30-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:36:30-05:00 INFO (6): Customer: 397
2017-03-30T18:36:30-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:36:30-05:00 INFO (6): Products: 16
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:36:30-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:36:30-05:00 INFO (6): Created 0 products
2017-03-30T18:36:30-05:00 INFO (6): Created 0 preferences
2017-03-30T18:36:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:36:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:36:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:36:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:36:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:36:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:40-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:36:40-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:36:40-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:36:40-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:36:40-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:40-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:36:40-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:36:40-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:36:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:36:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:46-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:36:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:36:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:50-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:36:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:36:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:52-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:36:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:36:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:54-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:36:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:36:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:36:55-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:37:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:37:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:23-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:37:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:37:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:24-05:00 INFO (6): Syncing DB.
2017-03-30T18:37:24-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:37:25-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:37:25-05:00 INFO (6): Customer: 397
2017-03-30T18:37:25-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:37:25-05:00 INFO (6): Products: 16
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:37:25-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:37:25-05:00 INFO (6): Created 0 products
2017-03-30T18:37:25-05:00 INFO (6): Created 0 preferences
2017-03-30T18:37:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:37:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:37:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:37:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:37:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:37:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:37:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:37:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:37:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:31-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:37:31-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:37:31-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:37:31-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:37:31-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:37:31-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:37:31-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:37:31-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:37:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:37:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:35-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:37:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:37:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:36-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:37:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:37:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:43-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:37:46-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:37:46-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:37:46-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T18:38:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:38:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:12-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:38:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:38:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:38:14-05:00 INFO (6): Syncing DB.
2017-03-30T18:38:14-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:38:15-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:38:15-05:00 INFO (6): Customer: 397
2017-03-30T18:38:15-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:38:15-05:00 INFO (6): Products: 16
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:38:15-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:38:15-05:00 INFO (6): Created 0 products
2017-03-30T18:38:15-05:00 INFO (6): Created 0 preferences
2017-03-30T18:38:15-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:38:15-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:38:15-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:38:15-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:38:15-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:38:15-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:38:15-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:38:19-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:38:19-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:38:19-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:38:19-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:38:19-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:38:19-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:38:19-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:38:19-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:38:19-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:38:19-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:41:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:41:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:41:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:41:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:41:08-05:00 INFO (6): Syncing DB.
2017-03-30T18:41:08-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:41:09-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:41:09-05:00 INFO (6): Customer: 397
2017-03-30T18:41:09-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:41:09-05:00 INFO (6): Products: 16
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:41:09-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:41:09-05:00 INFO (6): Created 0 products
2017-03-30T18:41:09-05:00 INFO (6): Created 0 preferences
2017-03-30T18:41:09-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:41:09-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:41:09-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:41:09-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:41:09-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:41:09-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:41:09-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:41:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:41:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:41:13-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:41:13-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:41:13-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:41:13-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:41:13-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:41:13-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:41:13-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:41:13-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:44:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:44:24-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:44:24-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:24-05:00 INFO (6): Syncing DB.
2017-03-30T18:44:24-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:44:26-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:44:26-05:00 INFO (6): Customer: 397
2017-03-30T18:44:26-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:44:26-05:00 INFO (6): Products: 16
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:44:26-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:44:26-05:00 INFO (6): Created 0 products
2017-03-30T18:44:26-05:00 INFO (6): Created 0 preferences
2017-03-30T18:44:26-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:44:26-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:44:26-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:44:26-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:26-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:44:26-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:26-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:44:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:30-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:44:32-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:44:32-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:32-05:00 INFO (6): product/checked called with type: select
2017-03-30T18:44:34-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:44:34-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:34-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:44:34-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:44:34-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:44:34-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:44:34-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:34-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:44:34-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:44:35-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:44:39-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:44:39-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:44:39-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:45:25-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:45:25-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:45:25-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:45:25-05:00 INFO (6): LIMIT = LIMIT 0, 1000
2017-03-30T18:45:25-05:00 INFO (6): ORDER =
2017-03-30T18:45:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:45:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:45:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))  LIMIT 0, 1000
2017-03-30T18:45:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:45:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:46:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:46:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:06-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:47:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:47:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:07-05:00 INFO (6): Syncing DB.
2017-03-30T18:47:07-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:47:08-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:47:08-05:00 INFO (6): Customer: 397
2017-03-30T18:47:08-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:47:08-05:00 INFO (6): Products: 16
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:47:08-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:47:08-05:00 INFO (6): Created 0 products
2017-03-30T18:47:08-05:00 INFO (6): Created 0 preferences
2017-03-30T18:47:08-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:47:08-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:47:08-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:47:08-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:08-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:47:08-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:08-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:23-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:47:23-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:23-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:47:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:47:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:30-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:47:30-05:00 INFO (6): LIMIT = LIMIT 0, 1000
2017-03-30T18:47:30-05:00 INFO (6): ORDER =
2017-03-30T18:47:30-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:47:30-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:30-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )  LIMIT 0, 1000
2017-03-30T18:47:30-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:30-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: report
2017-03-30T18:47:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:47:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:47:57-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:47:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:47:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:47:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:47:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:47:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:47:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:47:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:48:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:48:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:48:01-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:48:01-05:00 INFO (6): LIMIT = LIMIT 0, 1000
2017-03-30T18:48:01-05:00 INFO (6): ORDER =
2017-03-30T18:48:01-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:48:01-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:48:01-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))  LIMIT 0, 1000
2017-03-30T18:48:01-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T18:48:01-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T18:51:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T18:51:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:51:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:44-05:00 INFO (6): Syncing DB.
2017-03-30T18:51:44-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T18:51:46-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T18:51:46-05:00 INFO (6): Customer: 397
2017-03-30T18:51:46-05:00 INFO (6): Preferences by user: 16
2017-03-30T18:51:46-05:00 INFO (6): Products: 16
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T18:51:46-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T18:51:46-05:00 INFO (6): Created 0 products
2017-03-30T18:51:46-05:00 INFO (6): Created 0 preferences
2017-03-30T18:51:46-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:51:46-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:51:46-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:51:46-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:46-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:51:46-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:46-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:49-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:51:49-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:49-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:51:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:51:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:50-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:51:50-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:51:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:51:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:51:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:51:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:51:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:51:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:51:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:54-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:51:54-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:51:54-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:51:54-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:51:54-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:54-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:51:54-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:54-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:51:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:56-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:51:57-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:51:57-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:51:57-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:51:57-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:51:57-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:51:57-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:51:57-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:57-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:51:57-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:51:57-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:52:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:52:01-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T18:52:54-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:52:54-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:52:54-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:52:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:52:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:52:55-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:52:55-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:52:55-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:52:55-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:52:55-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:55-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:52:55-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:55-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T18:52:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:52:58-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T18:52:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T18:52:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T18:52:59-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T18:52:59-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T18:52:59-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T18:52:59-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T18:52:59-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:59-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T18:52:59-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T18:52:59-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:08:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T19:08:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:00-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:09:01-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:09:01-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:01-05:00 INFO (6): Syncing DB.
2017-03-30T19:09:01-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T19:09:02-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T19:09:02-05:00 INFO (6): Customer: 397
2017-03-30T19:09:02-05:00 INFO (6): Preferences by user: 16
2017-03-30T19:09:02-05:00 INFO (6): Products: 16
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T19:09:02-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T19:09:02-05:00 INFO (6): Created 0 products
2017-03-30T19:09:02-05:00 INFO (6): Created 0 preferences
2017-03-30T19:09:02-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:09:02-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:09:02-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:09:02-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:02-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:09:02-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:02-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T19:09:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:07-05:00 INFO (6): product/checked called with type: select
2017-03-30T19:09:07-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:09:07-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:07-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T19:09:07-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:09:07-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:09:07-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:09:07-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:07-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:09:07-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:07-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T19:09:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:09-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T19:09:09-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:09:09-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:09-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T19:09:09-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:09:09-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:09:09-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:09:09-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:09-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:09:09-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:09-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:09:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:09:14-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T19:09:14-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:09:14-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:09:14-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:09:14-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:09:14-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:09:14-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T19:09:14-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:10:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T19:10:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:29-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T19:10:30-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:10:30-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:10:30-05:00 INFO (6): Syncing DB.
2017-03-30T19:10:30-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T19:10:32-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T19:10:32-05:00 INFO (6): Customer: 397
2017-03-30T19:10:32-05:00 INFO (6): Preferences by user: 16
2017-03-30T19:10:32-05:00 INFO (6): Products: 16
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T19:10:32-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T19:10:32-05:00 INFO (6): Created 0 products
2017-03-30T19:10:32-05:00 INFO (6): Created 0 preferences
2017-03-30T19:10:32-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:10:32-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:10:32-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:10:32-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:10:32-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:10:32-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:10:32-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:10:36-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T19:10:36-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T19:10:36-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T19:10:36-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T19:10:36-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T19:10:36-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T19:10:36-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T19:10:36-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T19:10:36-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 ))
2017-03-30T19:10:36-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:27-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:02:27-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:34-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:02:35-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:02:35-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:02:35-05:00 INFO (6): Syncing DB.
2017-03-30T21:02:35-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T21:02:37-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T21:02:37-05:00 INFO (6): Customer: 397
2017-03-30T21:02:37-05:00 INFO (6): Preferences by user: 16
2017-03-30T21:02:37-05:00 INFO (6): Products: 16
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T21:02:37-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T21:02:37-05:00 INFO (6): Created 0 products
2017-03-30T21:02:37-05:00 INFO (6): Created 0 preferences
2017-03-30T21:02:37-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:02:37-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:02:37-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T21:02:37-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:37-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:02:37-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:37-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:02:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:02:41-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:02:42-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:02:42-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:02:42-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T21:02:42-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:02:42-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:02:42-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T21:02:42-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:42-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:02:42-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:02:42-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:16:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:16:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:15-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:16-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:16:16-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:16:16-05:00 INFO (6): Syncing DB.
2017-03-30T21:16:16-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=397
2017-03-30T21:16:17-05:00 INFO (6): Web Service (Products) #: 16
2017-03-30T21:16:17-05:00 INFO (6): Customer: 397
2017-03-30T21:16:17-05:00 INFO (6): Preferences by user: 16
2017-03-30T21:16:17-05:00 INFO (6): Products: 16
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 872, sku = 16768101, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  872 , sku =  16768101 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 457, sku = 1679, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  457 , sku =  1679 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 30, sku = 1200002, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  30 , sku =  1200002 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 707, sku = 2564, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  707 , sku =  2564 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 354, sku = 1070, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  354 , sku =  1070 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 91, sku = 363, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  91 , sku =  363 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 797, sku = 2880, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  797 , sku =  2880 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 599, sku = 2199, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  599 , sku =  2199 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Updating Product[ id = 350, sku = 1110, ]
2017-03-30T21:16:17-05:00 INFO (6): Updating Preference[ product =  350 , sku =  1110 , user = cmetallo]
2017-03-30T21:16:17-05:00 INFO (6): Created 0 products
2017-03-30T21:16:17-05:00 INFO (6): Created 0 preferences
2017-03-30T21:16:17-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:16:17-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:16:17-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)
2017-03-30T21:16:17-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:16:17-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:16:17-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:16:17-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 397 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 397 AND `added_product`.`active` = 1 )
2017-03-30T21:16:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: view
2017-03-30T21:16:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:16:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:54-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:55-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:16:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\CustomerController and actionName: customerTable
2017-03-30T21:16:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:16:55-05:00 INFO (6): Syncing DB.
2017-03-30T21:16:55-05:00 INFO (6): Querying Customers.
2017-03-30T21:16:55-05:00 INFO (6): Querying Customers.
2017-03-30T21:16:55-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customers&salespersonid=183
2017-03-30T21:16:56-05:00 INFO (6): inDB: 46 inWS: 46
2017-03-30T21:16:56-05:00 INFO (6): SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-30T21:16:56-05:00 INFO (6): SQL: SELECT `customers`.`id`, `customers`.`company`, `customers`.`name`, `customers`.`email`, `customers`.`created`, `customers`.`updated`, `customers`.`id` FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id` WHERE  `user_customer`.`user_id` = 5  ORDER BY `id` ASC LIMIT 0, 10
2017-03-30T21:16:56-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-30T21:16:56-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`   WHERE  `user_customer`.`user_id` = 5
2017-03-30T21:16:56-05:00 INFO (6): SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-30T21:16:56-05:00 INFO (6): SQL: SELECT COUNT(`customers`.`id`) FROM `user_customer` LEFT OUTER JOIN `customers` ON `user_customer`.`customer_id` = `customers`.`id`  WHERE  `user_customer`.`user_id` = 5
2017-03-30T21:25:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:25:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:02-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:03-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:25:03-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:03-05:00 INFO (6): Syncing DB.
2017-03-30T21:25:03-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:25:04-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:25:04-05:00 INFO (6): Customer: 46
2017-03-30T21:25:04-05:00 INFO (6): Preferences by user: 16
2017-03-30T21:25:05-05:00 INFO (6): Products: 123
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:25:05-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:25:05-05:00 INFO (6): Creating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 30
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=30,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 91
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=91,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 350
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=350,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 354
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=354,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 457
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=457,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 599
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=599,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 707
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=707,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 797
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=797,user=cmetallo]
2017-03-30T21:25:05-05:00 INFO (6): find(type=json) not found = 872
2017-03-30T21:25:05-05:00 INFO (6): Deleting Preference[product=872,user=cmetallo]
2017-03-30T21:25:06-05:00 INFO (6): Created 0 products
2017-03-30T21:25:06-05:00 INFO (6): Created 116 preferences
2017-03-30T21:25:06-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:25:06-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:25:06-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:25:06-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:06-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:25:06-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:06-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:08-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:25:08-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:25:40-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:25:40-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:40-05:00 INFO (6): Syncing DB.
2017-03-30T21:25:40-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:25:42-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:25:42-05:00 INFO (6): Customer: 46
2017-03-30T21:25:42-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:25:43-05:00 INFO (6): Products: 123
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:25:43-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:25:43-05:00 INFO (6): Created 0 products
2017-03-30T21:25:43-05:00 INFO (6): Created 0 preferences
2017-03-30T21:25:43-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:25:43-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:25:43-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:25:43-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:43-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:25:43-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:43-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:48-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:25:48-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:48-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:25:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:25:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:25:56-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T21:25:56-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:25:56-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:25:56-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:25:56-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:25:56-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:25:56-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T21:25:56-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:26:00-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:26:00-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:26:00-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:26:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:26:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:26:05-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:26:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:26:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:26:12-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:27:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:27:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:46-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:27:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:27:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:27:47-05:00 INFO (6): Syncing DB.
2017-03-30T21:27:47-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:27:49-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:27:49-05:00 INFO (6): Customer: 46
2017-03-30T21:27:49-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:27:49-05:00 INFO (6): Products: 123
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:27:49-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:27:49-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:27:50-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:27:50-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:27:50-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:27:50-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:27:50-05:00 INFO (6): Created 0 products
2017-03-30T21:27:50-05:00 INFO (6): Created 0 preferences
2017-03-30T21:27:50-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:27:50-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:27:50-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:27:50-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:27:50-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:27:50-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:27:50-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:27:52-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:27:52-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:27:52-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:27:53-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:27:53-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:27:53-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:27:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:27:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:27:58-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T21:27:58-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:27:58-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:27:58-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:27:58-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:27:58-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:27:58-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T21:27:58-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:28:02-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:02-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:02-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:28:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:05-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:28:10-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:10-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:10-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:28:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:41-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T21:28:43-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:43-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:43-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T21:28:44-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:44-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:44-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T21:28:55-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:55-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:55-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T21:28:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:28:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:28:59-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T21:29:04-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:29:04-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:29:04-05:00 INFO (6): product/checked called with type: deselectall
2017-03-30T21:29:06-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:29:06-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:29:06-05:00 INFO (6): product/checked called with type: selectall
2017-03-30T21:41:50-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:41:50-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:57-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:41:58-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:41:58-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:41:58-05:00 INFO (6): Syncing DB.
2017-03-30T21:41:58-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:41:59-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:41:59-05:00 INFO (6): Customer: 46
2017-03-30T21:42:00-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:42:00-05:00 INFO (6): Products: 123
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:42:00-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:42:00-05:00 INFO (6): Created 0 products
2017-03-30T21:42:00-05:00 INFO (6): Created 0 preferences
2017-03-30T21:42:00-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:42:00-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:42:00-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:42:00-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:42:00-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:42:00-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:42:00-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:49:12-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:49:12-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:19-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:49:20-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:49:20-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:49:20-05:00 INFO (6): Syncing DB.
2017-03-30T21:49:20-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:49:22-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:49:22-05:00 INFO (6): Customer: 46
2017-03-30T21:49:22-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:49:22-05:00 INFO (6): Products: 123
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:49:22-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:49:22-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:49:23-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:49:23-05:00 INFO (6): Created 0 products
2017-03-30T21:49:23-05:00 INFO (6): Created 0 preferences
2017-03-30T21:49:23-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:49:23-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:49:23-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:49:23-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:49:23-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:49:23-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:49:23-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:14-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:50:14-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:50:22-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:50:22-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:22-05:00 INFO (6): Syncing DB.
2017-03-30T21:50:22-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:50:24-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:50:24-05:00 INFO (6): Customer: 46
2017-03-30T21:50:24-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:50:24-05:00 INFO (6): Products: 123
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:50:24-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:50:24-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:50:25-05:00 INFO (6): Created 0 products
2017-03-30T21:50:25-05:00 INFO (6): Created 0 preferences
2017-03-30T21:50:25-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:50:25-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:50:25-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:50:25-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:25-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:50:25-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:25-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:28-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:50:28-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:28-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:50:31-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:50:31-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:31-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:50:38-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:50:38-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:38-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T21:50:38-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:50:38-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:50:38-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:50:38-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:38-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:50:38-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T21:50:38-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:50:45-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:50:45-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:45-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:50:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:50:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:51-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:50:59-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:50:59-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:50:59-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:51:33-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: view
2017-03-30T21:51:33-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 ERR (3):  Error dispatching controller "". Error was: "error-router-no-match"
2017-03-30T21:51:41-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:51:41-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:51:41-05:00 INFO (6): Syncing DB.
2017-03-30T21:51:41-05:00 INFO (6): Calling WebService with GET URL: https://svc.localhost/bySKU.php?id=jpalmer&pw=goodbass&object=customerlistitems&customerid=46
2017-03-30T21:51:43-05:00 INFO (6): Web Service (Products) #: 135
2017-03-30T21:51:43-05:00 INFO (6): Customer: 46
2017-03-30T21:51:43-05:00 INFO (6): Preferences by user: 123
2017-03-30T21:51:44-05:00 INFO (6): Products: 123
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 581, sku = 105000001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  581 , sku =  105000001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 192, sku = 851, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  192 , sku =  851 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 918, sku = 851001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  918 , sku =  851001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 133, sku = 11100001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  133 , sku =  11100001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 928, sku = 11600004, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  928 , sku =  11600004 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 754, sku = 116, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  754 , sku =  116 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 496, sku = 1882, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  496 , sku =  1882 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 43, sku = 4, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  43 , sku =  4 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 211, sku = 856, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  211 , sku =  856 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 799, sku = 25401, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  799 , sku =  25401 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 370, sku = 17031702, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  370 , sku =  17031702 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1334, sku = 55055401, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1334 , sku =  55055401 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 146, sku = 958, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  146 , sku =  958 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 159, sku = 340, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  159 , sku =  340 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 435, sku = 964, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  435 , sku =  964 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 23, sku = 22, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  23 , sku =  22 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1277, sku = 77773, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1277 , sku =  77773 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 525, sku = 769, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  525 , sku =  769 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 209, sku = 260, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  209 , sku =  260 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 481, sku = 1853, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  481 , sku =  1853 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1164, sku = 1413, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1164 , sku =  1413 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 863, sku = 3141, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  863 , sku =  3141 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 479, sku = 1848, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  479 , sku =  1848 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 705, sku = 2556, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  705 , sku =  2556 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 329, sku = 1198, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  329 , sku =  1198 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 239, sku = 447, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  239 , sku =  447 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 990, sku = 98696002, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  990 , sku =  98696002 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 126, sku = 71, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  126 , sku =  71 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1001, sku = 17290501, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1001 , sku =  17290501 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 947, sku = 266, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  947 , sku =  266 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 90, sku = 268, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  90 , sku =  268 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 41, sku = 17, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  41 , sku =  17 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 62, sku = 10, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  62 , sku =  10 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 223, sku = 221, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  223 , sku =  221 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 226, sku = 1400002, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  226 , sku =  1400002 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 226 SKU: 1400002 PRODUCTNAME: Hake - Wild, USA, Sow, Head Off (8lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 451, sku = 17293301, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  451 , sku =  17293301 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 450, sku = 753, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  450 , sku =  753 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 268, sku = 32, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  268 , sku =  32 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 543, sku = 2035, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  543 , sku =  2035 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 679, sku = 2494, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  679 , sku =  2494 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 215, sku = 474, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  215 , sku =  474 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 217, sku = 295, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  217 , sku =  295 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1300, sku = 97314002, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1300 , sku =  97314002 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 76, sku = 355, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  76 , sku =  355 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 77, sku = 35500001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  77 , sku =  35500001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 77 SKU: 35500001 PRODUCTNAME: Lobster - Live, Cold Water, Wild, Canada, 1.5lb
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 750, sku = 9731408, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  750 , sku =  9731408 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 454, sku = 15800001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  454 , sku =  15800001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 220, sku = 158, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  220 , sku =  158 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 301, sku = 161, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  301 , sku =  161 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 188, sku = 48, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  188 , sku =  48 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 73, sku = 10003, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  73 , sku =  10003 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 721, sku = 2603, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  721 , sku =  2603 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 978, sku = 79872002, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  978 , sku =  79872002 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 336, sku = 7987201, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  336 , sku =  7987201 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 977, sku = 79872001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  977 , sku =  79872001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 94, sku = 814, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  94 , sku =  814 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 611, sku = 2254, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  611 , sku =  2254 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 611 SKU: 2254 PRODUCTNAME: Oysters - East Coast, Sewansecott, Farmed, USA 100ct
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 111, sku = 824, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  111 , sku =  824 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 910, sku = 7986806, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  910 , sku =  7986806 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 742, sku = 79868001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  742 , sku =  79868001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 916, sku = 7986813, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  916 , sku =  7986813 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1050, sku = 64157801, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1050 , sku =  64157801 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 485, sku = 1861, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  485 , sku =  1861 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 237, sku = 171, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  237 , sku =  171 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 237 SKU: 171 PRODUCTNAME: Pollock - Wild, USA, Fillets
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 236, sku = 167, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  236 , sku =  167 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 236 SKU: 167 PRODUCTNAME: Pollock - Wild, USA, Large, Head On (8lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 968, sku = 229, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  968 , sku =  229 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 968 SKU: 229 PRODUCTNAME: Porgy - Jumbo, Wild, USA, Whole (2.5lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 967, sku = 228, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  967 , sku =  228 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 362, sku = 485, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  362 , sku =  485 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 362 SKU: 485 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Fillets  (9lb Pair)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 794, sku = 2876, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  794 , sku =  2876 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 250, sku = 911, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  250 , sku =  911 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 250 SKU: 911 PRODUCTNAME: Salmon - Atlantic, Farmed, Canada, Head On (11lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 464, sku = 1708, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  464 , sku =  1708 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 252, sku = 887, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  252 , sku =  887 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 755, sku = 190701, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  755 , sku =  190701 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 49, sku = 81, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  49 , sku =  81 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 49 SKU: 81 PRODUCTNAME: Salmon - Hiddenfjord, Farmed, Faroe Islands, Fillets  (9lb Pair)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1048, sku = 801001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1048 , sku =  801001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 45, sku = 80, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  45 , sku =  80 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 958, sku = 1908, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  958 , sku =  1908 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 817, sku = 2882, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  817 , sku =  2882 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 95, sku = 481, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  95 , sku =  481 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 95 SKU: 481 PRODUCTNAME: Salmon - True North, Farmed, Canada, Head On (13lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 956, sku = 2887, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  956 , sku =  2887 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 813, sku = 2924, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  813 , sku =  2924 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 31, sku = 18, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  31 , sku =  18 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 37, sku = 61, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  37 , sku =  61 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1325, sku = 79718001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1325 , sku =  79718001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 100, sku = 564, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  100 , sku =  564 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 626, sku = 2291, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  626 , sku =  2291 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1265, sku = 16199701, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1265 , sku =  16199701 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1401, sku = 551574001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1401 , sku =  551574001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1292, sku = 1887, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1292 , sku =  1887 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 870, sku = 55157403, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  870 , sku =  55157403 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 434, sku = 55157402, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  434 , sku =  55157402 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 603, sku = 551682012, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  603 , sku =  551682012 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 105, sku = 55168201, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  105 , sku =  55168201 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 597, sku = 2187, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  597 , sku =  2187 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1216, sku = 55168215, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1216 , sku =  55168215 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1146, sku = 551682011, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1146 , sku =  551682011 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 823, sku = 2947, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  823 , sku =  2947 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 920, sku = 56414501, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  920 , sku =  56414501 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 244, sku = 751782000087, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  244 , sku =  751782000087 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 257, sku = 183, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  257 , sku =  183 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 841, sku = 3001, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  841 , sku =  3001 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1021, sku = 17301603, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1021 , sku =  17301603 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 283, sku = 599, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  283 , sku =  599 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 284, sku = 596, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  284 , sku =  596 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1041, sku = 595, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1041 , sku =  595 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 142, sku = 466, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  142 , sku =  466 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 141, sku = 1, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  141 , sku =  1 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 563, sku = 1784, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  563 , sku =  1784 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 563 SKU: 1784 PRODUCTNAME: Squid - Frozen, Wild, China, 5/8 T&T (2.5lb Tray)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 641, sku = 2330, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  641 , sku =  2330 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 759, sku = 2702, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  759 , sku =  2702 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 573, sku = 2142, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  573 , sku =  2142 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1204, sku = 2327, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1204 , sku =  2327 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 640, sku = 2326, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  640 , sku =  2326 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 564, sku = 1752, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  564 , sku =  1752 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 664, sku = 1758, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  664 , sku =  1758 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 729, sku = 55326901, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  729 , sku =  55326901 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): SKIPPING: Rest Item ID: 729 SKU: 55326901 PRODUCTNAME: Sturgeon - White, Farmed, USA, Whole (12lb avg)
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1178, sku = 442, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1178 , sku =  442 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 288, sku = 8, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  288 , sku =  8 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 1170, sku = 2954, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  1170 , sku =  2954 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 952, sku = 17241901, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  952 , sku =  17241901 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 93, sku = 2800101, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  93 , sku =  2800101 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 385, sku = 172423014, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  385 , sku =  172423014 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Updating Product[ id = 382, sku = 172423011, ]
2017-03-30T21:51:44-05:00 INFO (6): Updating Preference[ product =  382 , sku =  172423011 , user = cmetallo]
2017-03-30T21:51:44-05:00 INFO (6): Created 0 products
2017-03-30T21:51:44-05:00 INFO (6): Created 0 preferences
2017-03-30T21:51:44-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:51:44-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:51:44-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:51:44-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:51:44-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 ) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:51:44-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:51:44-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:51:47-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:51:47-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:51:47-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:51:51-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: productTable
2017-03-30T21:51:51-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:51:51-05:00 INFO (6): DB Sync Skipped on subsequent ajax.
2017-03-30T21:51:51-05:00 INFO (6): LIMIT = LIMIT 0, 25
2017-03-30T21:51:51-05:00 INFO (6): ORDER = ORDER BY `productname` ASC
2017-03-30T21:51:51-05:00 INFO (6): SSPUnion built (PRE) WHERE clause: (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)
2017-03-30T21:51:51-05:00 INFO (6): SSPUnion built (POST) WHERE clause: (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:51:51-05:00 INFO (6): Main Query SQL: (SELECT          IFNULL(item_table_checkbox.checked, 0) 		as 'checked',          CONCAT('P', products.id) 			as 'id',          products.sku					as 'sku',          products.productname				as 'productname',          products.description				as 'description',          products.wholesale				as 'wholesale',          products.retail					as 'retail',          products.uom					as 'uom',          products.`status`				as 'status',          products.saturdayenabled			as 'saturdayenabled',          item_price_override.overrideprice		as 'overrideprice',          `user_product_preferences`.`comment`		as 'comment',          `user_product_preferences`.`option`		as 'option'              FROM item_table_checkbox                  RIGHT JOIN products ON item_table_checkbox.product = products.id                  LEFT JOIN customer_product ON products.id = customer_product.product                  LEFT JOIN item_price_override                      ON (products.id = item_price_override.product AND                          customer_product.customer = item_price_override.customer AND                          item_price_override.salesperson = item_table_checkbox.salesperson AND                          item_price_override.active = 1)                  LEFT JOIN user_customer                      ON (customer_product.customer = user_customer.customer_id)                  LEFT JOIN user_product_preferences                      ON (products.id = user_product_preferences.product_id AND                          user_customer.user_id = user_product_preferences.user_id)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)) UNION (            SELECT                IFNULL(`item_table_checkbox`.`checked`, 0)      as 'checked',                CONCAT('A', `added_product`.`id`)         as 'id',                `added_product`.`sku`                     as 'sku',                `added_product`.`productname`             as 'productname',                `added_product`.`description`             as 'description',                (select null)                               as 'wholesale',                (select null)                               as 'retail',                `added_product`.`uom`                     as 'uom',                `added_product`.`status`                as 'status',                (select 1)                                  as 'saturdayenabled',                `added_product`.`overrideprice`           as 'overrideprice',                `added_product`.`comment`              as 'comment',                (select null)                               as 'option'            FROM `item_table_checkbox`                RIGHT JOIN `added_product`                ON `added_product`.`id` = `item_table_checkbox`.`added_product`  WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 )) ORDER BY `productname` ASC LIMIT 0, 25
2017-03-30T21:51:51-05:00 INFO (6): Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE (`products`.`status` LIKE :binding_0) AND (`customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5))+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE (`added_product`.`status` LIKE :binding_0) AND (`added_product`.`customer` = 46 AND `added_product`.`active` = 1 ))
2017-03-30T21:51:51-05:00 INFO (6): Non-Filtered Count Query SQL: SELECT (SELECT count(products.id)      FROM item_table_checkbox          RIGHT JOIN products ON item_table_checkbox.product = products.id          LEFT JOIN customer_product ON products.id = customer_product.product          LEFT JOIN user_customer ON (customer_product.customer = user_customer.customer_id)          LEFT JOIN user_product_preferences              ON (products.id = user_product_preferences.product_id AND              user_customer.user_id  = user_product_preferences.user_id)          LEFT JOIN item_price_override              ON ( products.id = item_price_override.product AND              customer_product.customer = item_price_override.customer AND              item_price_override.salesperson = item_table_checkbox.salesperson AND              item_price_override.active = 1)  WHERE `customer_product`.`customer` = 46 AND `user_customer`.`user_id` = 5)+(SELECT count(item_table_checkbox.id)      FROM item_table_checkbox          RIGHT JOIN added_product              ON added_product.id = item_table_checkbox.added_product WHERE `added_product`.`customer` = 46 AND `added_product`.`active` = 1 )
2017-03-30T21:51:56-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:51:56-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:51:56-05:00 INFO (6): product/checked called with type: select
2017-03-30T21:52:05-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:52:05-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:52:05-05:00 INFO (6): product/checked called with type: deselect
2017-03-30T21:52:13-05:00 INFO (6): (User\Module.php): Checking controllerName: Application\Controller\ProductController and actionName: checked
2017-03-30T21:52:13-05:00 INFO (6): (User\Module.php): Authentication Service has logged-in user.
2017-03-30T21:52:13-05:00 INFO (6): product/checked called with type: select
